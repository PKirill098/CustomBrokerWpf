<Window x:Class="KirillPolyanskiy.CustomBrokerWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:coll="clr-namespace:System.Collections;assembly=mscorlib"
        xmlns:my="clr-namespace:KirillPolyanskiy.CustomBrokerWpf"
        xmlns:lib="clr-namespace:KirillPolyanskiy.DataModelClassLibrary;assembly=DataModelClassLibrary"
        xmlns:account="clr-namespace:KirillPolyanskiy.CustomBrokerWpf.WindowsAccount"
        xmlns:parcel="clr-namespace:KirillPolyanskiy.CustomBrokerWpf.Windows.Parcel"
        Icon="/CustomBrokerWpf;component/Images/truck_blue.png" Loaded="Window_Loaded" Closing="Window_Closing" Language="ru-RU" Top="5" Left="10" WindowState="Maximized" FontSize="11">
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Menu x:Name="mainMenu" FontSize="16" Margin="4">
			<MenuItem Header="Отправка" x:Name="parcelMenu" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
				<MenuItem Header="Склад" Click="MenuItemStoreMerge_Click" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="Images/forklifter.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Список отправок" Click="MenuListParcel_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/truck_blue.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Довоз" Click="MenuDelivery_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/truck_red.png" />
					</MenuItem.Icon>
				</MenuItem>
				<!--<MenuItem Header="Счет" Click="MenuPayParcel_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/cashier.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Оплаты" Click="MenuPPParcel_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/form_yellow.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="СФ и ТТН" Click="MenuWayBill_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}" ToolTip="Создание СФ и ТНН из спецификации">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/excel_icon4.png" />
					</MenuItem.Icon>
				</MenuItem>-->
			</MenuItem>
			<MenuItem Header="Клиенты" Click="MenuNewClient_Click">
                <!--<MenuItem Header="Клиенты"/>
				<MenuItem Header="Карточка" Click="MenuItemClient_Click"/>
				<MenuItem Header="Контакты" Click="MenuItemClientList_Click"/>-->
			</MenuItem>
			<MenuItem Header="Поставщики" Click="MenuItemAgent_Click"/>
			<MenuItem Header="Справочники" x:Name="referenceMenu">
				<MenuItem Header="Алгоритмы" Click="MenuItemAlgorithm_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="Visible">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/calculator.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Артикулы" Click="MenuItemVendorCode_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="Visible">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/document_view.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Visibility="Collapsed" Header="Банки" Click="MenuItemBank_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" >
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/creditcards.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Брэнды" Click="MenuItemBrand_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" >
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/factory.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид адреса" Click="MenuItemAddressType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/mail2.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид груза" Click="MenuItemGoodsType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/weight2.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид доставки" Click="MenuItemDeliveryType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/helicopter.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид контакта" Click="MenuItemContactType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/handshake.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид платежа" Click="MenuItemPaymentType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/money_envelope.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Города" Click="MenuItemTown_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/signpost.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Группы менеджеров" Click="MenuItemManagGroup_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" >
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/users_family.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="ДС, СРТ" Click="MenuItemGoods_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/certificate.png" />
					</MenuItem.Icon>
				</MenuItem>
                <MenuItem Header="Истекающие СРТ" Click="MenuGoodsEnding_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
                    <MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/certificate.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Импортеры" Click="MenuItemImporter_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/businessman.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Контрагенты" Click="MenuItemContractor_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/security_agent.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Менеджеры" Click="MenuItemManagers_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/users_family.png" />
					</MenuItem.Icon>
				</MenuItem>
				<!--<MenuItem Header="Получатели" Click="MenuItemLegal_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/wallet_open.png" />
					</MenuItem.Icon>
				</MenuItem>-->
				<MenuItem Header="Разбивки" Click="MenuItemSpecificationDetails_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="Images/document_certificate.png" />
					</MenuItem.Icon>
				</MenuItem>
                <Separator/>
                <MenuItem Header="Склад" Click="MenuItemStore_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/forklifter.png" />
					</MenuItem.Icon>
				</MenuItem>
                <MenuItem Header="Склад, тип адреса" Click="MenuItemStoreAddressType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
                    <MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/forklifter.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Склад, тип контакта" Click="MenuItemStoreContactType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
                    <MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/forklifter.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <!--<MenuItem Header="Спецификации" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
                    <MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/form_yellow.png" />
                    </MenuItem.Icon>
                </MenuItem>-->
				<MenuItem Header="Средства контакта" Click="MenuItemContactPointType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/mobilephone3.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Статусы заявки" Click="MenuItemRequestStatus_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/index_preferences.png" />
					</MenuItem.Icon>
				</MenuItem>
				<!--<MenuItem Header="Статьи затрат" Click="MenuItemExpenditureItem_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/money_envelope.png" />
					</MenuItem.Icon>
				</MenuItem>-->
				<MenuItem Header="Страны" Click="MenuItemCountries_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/earth.png" />
					</MenuItem.Icon>
				</MenuItem>
				<!--<MenuItem Header="Типы затрат" Click="MenuItemExpenditureType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="Collapsed">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/money_envelope.png" />
					</MenuItem.Icon>
				</MenuItem>-->
				<MenuItem Header="Шаблоны писем" Click="MenuItemMailTemplate_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/mail2.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Экспедиторы" Click="MenuItemForwarder_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/hand_paper.png" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<!--<MenuItem Header="Платежки" Click="MenuPPAccount_Click" x:Name="accountMenu" Visibility="Collapsed"/>-->
            <MenuItem Header="Отчеты" Click="MenuItemParcelReport_Click" />
			<MenuItem Header="Закрыть все" Click="Button_Click"/>
		</Menu>
		<Popup Name="popInf" StaysOpen="False" Placement="Mouse" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" >
			<Border BorderBrush="Beige" BorderThickness="2" Background="WhiteSmoke" CornerRadius="7">
				<TextBlock Name="PopupText" Margin="2"  FontStyle="Italic" Foreground="Teal" />
			</Border>
		</Popup>
        <TabControl Grid.Row="1" x:Name="MainTabControl">
			<TabControl.Resources>
				<CollectionViewSource x:Key="keyStatusVS" />
				<my:BitVisibilityConverter x:Key="keyBitVisibilityConverter"/>
				<my:IsEnabledConverter x:Key="keyIsEnabledConverter"/>
                <my:NoNullValueBackConverter x:Key="keyNotNullConverter"/>
				<CollectionViewSource x:Key="keyGoodsTypeVS" />
				<CollectionViewSource x:Key="keyParcelTypeVS" />
				<Style x:Key="ComboBoxButtonLess" TargetType="{x:Type ComboBox}"
                                xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
					<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
					<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
					<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ComboBox}">
								<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
									<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
										<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
											<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
												<ScrollViewer x:Name="DropDownScrollViewer">
													<Grid RenderOptions.ClearTypeHint="Enabled">
														<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
															<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
														</Canvas>
														<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
													</Grid>
												</ScrollViewer>
											</Border>
										</Themes:SystemDropShadowChrome>
									</Popup>
									<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
									<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
										<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
										<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
									</Trigger>
									<Trigger Property="HasItems" Value="false">
										<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										<Setter Property="Background" Value="#FFF4F4F4"/>
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsGrouping" Value="true"/>
											<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
										</MultiTrigger.Conditions>
										<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
									</MultiTrigger>
									<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
										<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
										<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</TabControl.Resources>
			<TabItem Header="РЕГИСТР">
				<Grid x:Name="RequestGrid">
					<Grid.Resources>
						<lib:BindingProxy x:Key="MainDataContext" Data="{Binding}"/>
						<my:RequestTotalConverter x:Key="keyRequestTotalConverter"/>
						<my:BooleanClipBoardConverter x:Key="BooleanClipBoardConverter1" />
						<CollectionViewSource x:Key="keyForwarderVS" />
						<CollectionViewSource x:Key="keyStoreVS" />
						<CollectionViewSource x:Key="keyManagerGroupVS">
							<CollectionViewSource.SortDescriptions>
								<cm:SortDescription PropertyName="managergroupName"/>
							</CollectionViewSource.SortDescriptions>
						</CollectionViewSource>
						<Style x:Key="MoneyStyleView" TargetType="{x:Type TextBlock}">
							<Setter Property="TextAlignment" Value="Right"/>
							<Setter Property="Margin" Value="2,0,2,0" />
						</Style>
						<Style x:Key="MoneyStyleEdit" TargetType="{x:Type TextBox}">
							<Setter Property="TextAlignment" Value="Right"/>
							<Setter Property="Padding" Value="0,-1,0,-2" />
						</Style>
						<Style x:Key="NumberCenterStyleView" TargetType="{x:Type TextBlock}">
							<Setter Property="HorizontalAlignment" Value="Center"/>
						</Style>
						<Style x:Key="NumberCenterStyleViewEdit" TargetType="{x:Type TextBox}">
							<Setter Property="TextAlignment" Value="Center"/>
							<Setter Property="Padding" Value="0,-1,0,-2" />
						</Style>
					</Grid.Resources>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="159*"/>
						<ColumnDefinition Width="595*"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<ToolBar Height="35" Grid.ColumnSpan="2">
						<Button ToolTip="Добавить заявку" Click="RequestButtonAdd_Click">
							<!-- Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}"-->
							<Image Source="/CustomBrokerWpf;component/Images/rPlus_01-66-512.png" />
						</Button>
						<Button Command="Copy" ToolTip="Копировать">
							<Image Source="/CustomBrokerWpf;component/Images/Copy-512.png" />
						</Button>
						<Separator/>
						<Button ToolTip="Обновить данные" Command="{Binding Path=SaveRefresh}">
							<Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
						</Button>
						<Button ToolTip="Сохранить изменения в БД" Command="{Binding Path=Save}">
							<Image Source="/CustomBrokerWpf;component/Images/Save.png" />
						</Button>
						<Button ToolTip="Отменить несохраненные изменения" Click="RequestRejectButton_Click">
							<Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
						</Button>
                        <ToggleButton ToolTip="Изменить фильтр" x:Name="RequestFilterButton" IsChecked="{Binding Path=IsShowFilterWindow}" Click="RequestFilterButton_Click">
							<Image Source="/CustomBrokerWpf;component/Images/rshester.png" />
						</ToggleButton>
						<Separator/>
						<TextBlock Text="Клиент" VerticalAlignment="Center" Margin="5,0"/>
                        <ComboBox  SelectedValue="{Binding Path=Data.RequestClientFilter, Source={StaticResource MainDataContext}, TargetNullValue=0}" ItemsSource="{Binding Customers}" SelectedValuePath="Id" DisplayMemberPath="Name" IsEditable="True" IsReadOnly="False" IsSynchronizedWithCurrentItem="False" MinWidth="100" KeyDown="RequestFilter_KeyDown"/>
						<TextBlock Text="№" VerticalAlignment="Center" Margin="5,0"/>
						<TextBox Text="{Binding Source={StaticResource MainDataContext}, Path=Data.RequestStoragePointFilter, UpdateSourceTrigger=PropertyChanged}" MinWidth="60" KeyDown="RequestFilter_KeyDown"/>
						<Button ToolTip="Применить фильтр" Click="RequestFastFilterButton_Click" Margin="5,0">
							<Image Source="/CustomBrokerWpf;component/Images/rpoisk2.png" />
						</Button>
						<Separator/>
						<Button ToolTip="Снять все блокировки" Click="UnLockButton_Click">
							<Image Source="/CustomBrokerWpf;component/Images/lock_open.png" />
						</Button>
						<!--<Button Name="RequestSortAZButton" ToolTip="Сортировать по возрастанию" Click="RequestSortAZButton_Click">
                            <Button.Content>
                                <Image Source="/CustomBrokerWpf;component/Images/AZ.png" />
                            </Button.Content>
                        </Button>
                        <Button Name="RequestSortZAButton" ToolTip="Сортировать по убыванию" Click="RequestSortZAButton_Click">
                            <Image Source="/CustomBrokerWpf;component/Images/ZA.png" />
                        </Button>
                        <Button Name="RequestSoprtClean" ToolTip="Отменить сортировку" Click="RequestSoprtClean_Click">
                            <Image Source="/CustomBrokerWpf;component/Images/AZClean.png" />
                        </Button>
                        <Separator />
                        <Separator/>
                        <Button Command="Cut" ToolTip="Вырезать">
                            <Image Source="/CustomBrokerWpf;component/Images/cut.png" />
                        </Button>
                        <Button Command="Paste" ToolTip="Вставить">
                            <Image Source="/CustomBrokerWpf;component/Images/paste.png" />
                        </Button>
                        <Separator/>
                        <Separator/>-->
						<Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Bottom" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" >
							<Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
								<TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
							</Border>
						</Popup>
					</ToolBar>
					<DataGrid Name="RequestDataGrid" Grid.Row="1" ItemsSource="{Binding Items}" AutoGenerateColumns="False" EnableRowVirtualization="True" HorizontalAlignment="Left" RowDetailsVisibilityMode="Collapsed" VerticalAlignment="Top" SelectionUnit="FullRow" Validation.Error="RequestDataGrid_Error" HorizontalGridLinesBrush="RoyalBlue" VerticalGridLinesBrush="RoyalBlue" AlternatingRowBackground="WhiteSmoke" AlternationCount="2"
                      CellEditEnding="RequestDataGrid_CellEditEnding" RowEditEnding="RequestDataGrid_RowEditEnding" UnloadingRow="RequestDataGrid_UnloadingRow" LoadingRow="RequestDataGrid_LoadingRow" BeginningEdit="RequestDataGrid_BeginningEdit" RowHeaderWidth="15" CanUserResizeRows="False" FrozenColumnCount="1" SelectionChanged="RequestDataGrid_SelectionChanged" 
                      Grid.ColumnSpan="2" MouseDoubleClick="RequestDataGrid_MouseDoubleClick">
						<DataGrid.CommandBindings>
							<CommandBinding Command="ApplicationCommands.Delete" Executed="RequestDataGridDelete_Executed" CanExecute="RequestDelete_CanExecute"/>
						</DataGrid.CommandBindings>
						<DataGrid.Resources>
							<my:DataGridDisplayIndexConverter x:Key="keyDisplayIndexConverter"/>
							<my:IsReadOnlyHasValueConverter x:Key="keyHasValueConverter"/>
						</DataGrid.Resources>
						<DataGrid.CellStyle>
							<Style TargetType="DataGridCell">
								<Setter Property="ContextMenu" Value="{StaticResource DataGridCellContextMenu}"/>
							</Style>
						</DataGrid.CellStyle>
						<DataGrid.RowStyle>
							<Style TargetType="{x:Type DataGridRow}">
								<Style.Triggers>
									<Trigger Property="IsSelected" Value="False">
										<Setter Property="Background" Value="#e0f7e3"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</DataGrid.RowStyle>
						<DataGrid.Columns>
							<!--
                            <DataGridTemplateColumn CanUserSort="True" SortMemberPath="colmark">
                                <DataGridTemplateColumn.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Rectangle Fill="Green" Grid.Row="0" Width="6" Height="6" />
                                        <Rectangle Fill="Red" Grid.Column="1" Width="6" Height="6" />
                                        <Rectangle Fill="Blue" Grid.Row="1" Width="6" Height="6" />
                                        <Rectangle Fill="Yellow" Grid.Row="1" Grid.Column="1" Width="6" Height="6" />
                                    </Grid>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Rectangle Fill="{Binding Path=colmark}" RadiusX="2" RadiusY="2" Width="15" Height="15" Margin="1" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding Path=colmark}" SelectedValuePath="Fill" TextSearch.TextPath="Fill" SelectionChanged="ParcelColmarkComboBox_SelectionChanged" >
                                            <ComboBox.ItemsSource>
                                                <coll:ArrayList>
                                                    <Rectangle Fill="Transparent" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Green" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Red" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Blue" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Yellow" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Black" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                </coll:ArrayList>
                                            </ComboBox.ItemsSource>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Позиция" x:Name="storagePointColumn" ElementStyle="{StaticResource NumberCenterStyleView}">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="storagePoint" NotifyOnValidationError="True" >
                                        <Binding.ValidationRules>
                                            <my:RequestStoagePointValidationRule x:Name="RequestStoragePointValidationRule"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Позиция по складу"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource NumberCenterStyleViewEdit}">
                                        <Setter Property="MaxLength" Value="6"/>
                                        <Setter Property="Padding" Value="0,-1,0,-2" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridComboBoxColumn Header="Статус" SelectedValueBinding="{Binding Path=status}" ItemsSource="{Binding Source={StaticResource keyStatusVS}}" SelectedValuePath="rowId" DisplayMemberPath="name" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}">
                                <DataGridComboBoxColumn.EditingElementStyle >
                                    <Style TargetType="ComboBox">
                                        <Setter Property="IsDropDownOpen" Value="True"/>
                                        <Setter Property="ItemContainerStyle">
                                            <Setter.Value>
                                                <Style TargetType="ComboBoxItem">
                                                    <Setter Property="Visibility" Value="{Binding Path=rowId, Converter={StaticResource ResourceKey=keyBitVisibilityConverter}, ConverterParameter=50}"/>
                                                    <Setter Property="IsEnabled" Value="{Binding Path=rowId, Converter={StaticResource keyIsEnabledConverter}, ConverterParameter=50, Mode=OneWay}"/>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn Header="Спецификация" Binding="{Binding Path=specification, StringFormat=\{0:d\}, ValidatesOnExceptions=true, NotifyOnValidationError=true, TargetNullValue=''}" x:Name="specificationColumn" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Дата получения спецификации"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridCheckBoxColumn Binding="{Binding Path=isspecification}" x:Name="isSpecColumn" CanUserSort="True" SortMemberPath="isspecification" CanUserReorder="False" CanUserResize="False" IsReadOnly="True" ClipboardContentBinding="{Binding Path=isspecification, Converter={StaticResource BooleanClipBoardConverter1}}">
                                <DataGridCheckBoxColumn.ElementStyle>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                    </Style>
                                </DataGridCheckBoxColumn.ElementStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn Header="Группа менеджеров" Binding="{Binding Path=managerGroup}" IsReadOnly="True" />
                            <DataGridComboBoxColumn Header="Склад" SelectedValueBinding="{Binding Path=storeid, NotifyOnValidationError=True, ValidatesOnExceptions=true}" ItemsSource="{Binding Source={StaticResource keyStoreVS}}" SelectedValuePath="storeId" DisplayMemberPath="storeName" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" />
                            <DataGridCheckBoxColumn Header="Фрахт" Binding="{Binding Path=isfreight, Mode=OneWay}" IsReadOnly="True" ClipboardContentBinding="{Binding Path=isfreight, Converter={StaticResource BooleanClipBoardConverter1}}">
                                <DataGridCheckBoxColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <EventSetter Event="MouseDoubleClick" Handler="FreightColumn_Click"/>
                                    </Style>
                                </DataGridCheckBoxColumn.CellStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn Header="Экспедитор" Binding="{Binding Path=forwarder}" IsReadOnly="True" />
                            <DataGridTextColumn Header="Стоимость товара, Е" x:Name="goodValueColumn" Binding="{Binding Path=goodValue, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" />
                            <DataGridTextColumn Header="Группа" Binding="{Binding Path=parcelgroup, UpdateSourceTrigger=LostFocus, TargetNullValue='',NotifyOnValidationError=True}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}" SortMemberPath="pgroupsort">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Группа загрузки"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridComboBoxColumn Header="Тип перевозки" SelectedValueBinding="{Binding Path=parceltype}" ItemsSource="{Binding Source={StaticResource keyParcelTypeVS}}" SelectedValuePath="parceltypeid" DisplayMemberPath="parceltypename" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Width="SizeToCells" IsReadOnly="{Binding Path=fullNumber,Converter={StaticResource keyHasValueConverter}, ConverterParameter=True }">
                                <DataGridComboBoxColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsEnabled" Value="{Binding Path=fullNumber,Converter={StaticResource keyHasValueConverter}, ConverterParameter=True }"/>
                                    </Style>
                                </DataGridComboBoxColumn.CellStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn Header="Отправка" Binding="{Binding Path=fullNumber,Mode=OneWay}" SortMemberPath="parcelnumbersort" IsReadOnly="True" />
                            <DataGridTextColumn Header="Инфо" Binding="{Binding Path=storageInform, StringFormat=\{0:d\},Mode=OneWay, TargetNullValue=''}" IsReadOnly="True" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Дата отправки информации на склад о загрузке заявки."/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="customerNoteColumn" Binding="{Binding Path=customerNote}" Header="Примечание клиенту" Width="SizeToHeader">
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="MaxLength" Value="100"/>
                                        <Setter Property="Padding" Value="0,-1,0,-2" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="managerNoteColumn" Binding="{Binding Path=managerNote}" Header="Примечание менеджера" Width="SizeToHeader" >
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="MaxLength" Value="100"/>
                                        <Setter Property="Padding" Value="0,-1,0,-2" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            -->
                            <DataGridTextColumn Header="№" Binding="{Binding Path=Id, Converter={StaticResource keyNoDisplayNewId}}" IsReadOnly="True" ElementStyle="{StaticResource NumberCenterStyleView}" />
                            <DataGridTextColumn Header="Складской №" Binding="{Binding Path=StorePointDate, ValidatesOnExceptions=true, NotifyOnValidationError=true, TargetNullValue='', Mode=OneWay}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                        <Setter Property="ToolTip" Value="Складской № (При отсутствии складского номера номер и дата заявки)"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
                                                    <Condition Binding="{Binding ShipmentDelay}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="#f7ede0"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
                                                    <Condition Binding="{Binding ShipmentDelay}" Value="2"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="#f7e0e0"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
							<DataGridTemplateColumn Header="Статус" CanUserSort="True" SortMemberPath="StatusParcel" ClipboardContentBinding="{Binding Path=StatusParcel}" Width="64">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Path=StatusParcel}" VerticalAlignment="Center"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
								<DataGridTemplateColumn.CellEditingTemplate>
									<DataTemplate>
										<Grid>
											<TextBlock Text="{Binding Path=ParcelNumber}" Visibility="{Binding ParcelNumberVisible}" VerticalAlignment="Center"/>
											<ComboBox SelectedItem="{Binding Path=Status}" ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Statuses}" DisplayMemberPath="Name" Visibility="{Binding StatusVisible}" IsSynchronizedWithCurrentItem="False" IsDropDownOpen="{Binding StatusEditable, Mode=OneWay}"/>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellEditingTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="Группа" Binding="{Binding Path=ParcelGroup, UpdateSourceTrigger=LostFocus, TargetNullValue='',NotifyOnValidationError=True}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Группа загрузки (Позиция по складу)"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn Width="SizeToCells">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>
												<!--<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>-->
											</Grid.ColumnDefinitions>
											<!--<Button ToolTip="Каталог" Tag="{Binding}" Click="RequestFolderOpen_Click" Grid.Column="0"  Margin="2,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" BorderBrush="{x:Null}" Background="{x:Null}">
												<Image Source="Images/cat.png"/>
											</Button>-->
											<Image ToolTip="Группа менеджеров" Grid.Column="0" Source="{Binding Path=ManagerGroupImage}" Margin="2,0"/>
											<!--<ComboBox Grid.Column="1" SelectedIndex="{Binding Path=StateInv,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="Инвойс" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="Images/inv_1.png" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/inv_2.png" Height="14" Margin="0"/>
												</ComboBoxItem>
											</ComboBox>-->
											<!--<Image Grid.Column="3" ToolTip="Спецификация_Разбивка" Source="{Binding Path=StateExcImagePath,Mode=OneWay}" Height="14"  Margin="2,0"/>-->
											<!--<ComboBox Grid.Column="3" SelectedIndex="{Binding Path=StateExc,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="Спецификация_Разбивка" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/excel_1.png" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/excel_2.png" Height="14" Margin="0"/>
												</ComboBoxItem>
											</ComboBox>-->
                                            <ComboBox Grid.Column="1" SelectedIndex="{Binding Path=StateDoc,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="МАРКИРОВКА" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/doc_1.png" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/doc_2.png" Height="14" Margin="0"/>
												</ComboBoxItem>
											</ComboBox>
											<!--<Button Grid.Column="2" ToolTip="Отправка уведомления &quot;Поступление на склад консолидации&quot;" Command="{Binding Path=SendMail}" CommandParameter="Stock" Margin="2,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" BorderBrush="{x:Null}" Background="{x:Null}">-->
                                            <Image Grid.Column="2" Source="{Binding Path=MailStateImage}" Margin="2,0" ToolTip="{Binding Path=MailStateToolTip}"/>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Менеджер" CanUserSort="True" SortMemberPath="Manager.NameComb" ClipboardContentBinding="{Binding Path=Manager.NameComb}"  Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
										<TextBlock Text="{Binding Manager.NameComb}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Managers}"  SelectedValue="{Binding Path=Manager,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="NameComb" IsSynchronizedWithCurrentItem="False"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Поставщик" CanUserSort="True" SortMemberPath="Agent.Name" ClipboardContentBinding="{Binding Path=Agent.Name}" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Agent.Name, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding Path=AgentId, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=Agent.Name}"
                                                  ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Agents}" SelectedValuePath="Id" DisplayMemberPath="Name">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Торговые марки" Width="150" CanUserSort="True" SortMemberPath="BrandNames" ClipboardContentBinding="{Binding Path=BrandNames}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=BrandNames, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=BrandNames}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Text="{Binding Path=BrandNames, Mode=OneWay, TargetNullValue=''}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=BrandNames}"
                                                  ItemsSource="{Binding Path=Brands}" DisplayMemberPath="Brand.Name">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding Path=Selected, Mode=TwoWay}" IsThreeState="False" Margin="0" HorizontalContentAlignment="Stretch" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox}, Path=ActualWidth}" VerticalContentAlignment="Center" Style="{StaticResource ErrorStyle}">
                                                        <TextBlock Text="{Binding Brand.Name}" VerticalAlignment="Center"/>
                                                    </CheckBox>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Клиент" CanUserSort="True" SortMemberPath="Customer.Name" ClipboardContentBinding="{Binding Path=Customer.Name}" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Customer.Name, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding Path=CustomerId, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=Customer.Name}"
                                                  ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Customers}" SelectedValuePath="Id" DisplayMemberPath="Name">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
                                        <Setter Property="FontWeight" Value="{Binding Customer.NameFontWeight}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <!--<DataGridComboBoxColumn Header="Поставщик" SelectedValueBinding="{Binding Path=AgentId, TargetNullValue=0,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"
                                    ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Agents}" SelectedValuePath="Id" DisplayMemberPath="Name" SortMemberPath="AgentName"  Width="150">
								<DataGridComboBoxColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
									</Style>
								</DataGridComboBoxColumn.CellStyle>
							</DataGridComboBoxColumn>
							<DataGridComboBoxColumn Header="Клиент" SelectedValueBinding="{Binding Path=CustomerId, TargetNullValue=0,UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" SortMemberPath="CustomerName"
                                    ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Customers}" SelectedValuePath="customerID" DisplayMemberPath="customerName" Width="150">
								<DataGridComboBoxColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
                                        <Setter Property="FontWeight" Value="{Binding Customer.NameFontWeight}"/>
                                    </Style>
								</DataGridComboBoxColumn.CellStyle>
							</DataGridComboBoxColumn>-->
							<DataGridTemplateColumn Header="Юр. лица" Width="150" CanUserSort="True" SortMemberPath="CustomerLegalsNames" ClipboardContentBinding="{Binding Path=CustomerLegalsNames}">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Path=CustomerLegalsNames, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
								<DataGridTemplateColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding Path=CustomerLegalsNames}"/>
                                        <Setter Property="FontWeight" Value="{Binding CustomerLegalsNamesFontWeight}"/>
									</Style>
								</DataGridTemplateColumn.CellStyle>
								<DataGridTemplateColumn.CellEditingTemplate>
									<DataTemplate>
										<ComboBox Text="{Binding Path=CustomerLegalsNames, Mode=OneWay, TargetNullValue=''}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=CustomerLegalsNames}"
                                                  ItemsSource="{Binding Path=CustomerLegals}" DisplayMemberPath="CustomerLegal.Name">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<CheckBox IsChecked="{Binding Path=Selected, Mode=TwoWay}" IsThreeState="False" Margin="0" HorizontalContentAlignment="Stretch" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox}, Path=ActualWidth}" VerticalContentAlignment="Center" Style="{StaticResource ErrorStyle}">
														<TextBlock Text="{Binding CustomerLegal.Name}" VerticalAlignment="Center"/>
													</CheckBox>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellEditingTemplate>
							</DataGridTemplateColumn>
                            <DataGridCheckBoxColumn Header="ЭДО Деливери" Binding="{Binding Path=CustomerLegalsSelected/CustomerLegal.EDOD, Mode=TwoWay}" IsThreeState="False" Width="50">
                                <DataGridCheckBoxColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                        <Setter Property="ToolTip" Value="ЭДО Деливери"/>
                                    </Style>
                                </DataGridCheckBoxColumn.HeaderStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn Header="ЭДО Tрэйд" Binding="{Binding Path=CustomerLegalsSelected/CustomerLegal.EDOT, Mode=TwoWay}" IsThreeState="False" Width="50">
                                <DataGridCheckBoxColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                        <Setter Property="ToolTip" Value="ЭДО Tрэйд"/>
                                    </Style>
                                </DataGridCheckBoxColumn.HeaderStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridComboBoxColumn Header="Импортер" SelectedItemBinding="{Binding Path=Importer,UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" SortMemberPath="Importer.Name"
                                    ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Importers}" DisplayMemberPath="Name"  Width="100">
								<DataGridComboBoxColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
									</Style>
								</DataGridComboBoxColumn.CellStyle>
							</DataGridComboBoxColumn>
							<DataGridTextColumn Header="Вес Д" x:Name="officialWeightColumn" Binding="{Binding Path=OfficialWeight, StringFormat=\{0:N\},UpdateSourceTrigger=LostFocus, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Width="50" />
							<DataGridTextColumn Header="Вес Ф" x:Name="actualWeightColumn" Binding="{Binding Path=ActualWeight, StringFormat=\{0:N\},UpdateSourceTrigger=LostFocus, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Width="50" />
							<DataGridTextColumn Header="Объем" x:Name="volumeColumn" Binding="{Binding Path=Volume, StringFormat=\{0:N\},UpdateSourceTrigger=LostFocus, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" />
							<DataGridTextColumn Header="Мест" x:Name="cellNumberColumn" Binding="{Binding Path=CellNumber,UpdateSourceTrigger=LostFocus, TargetNullValue='', NotifyOnValidationError=True, ValidatesOnExceptions=true}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}" />
							<DataGridTextColumn Header="Инвойс" Binding="{Binding Path=Invoice, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True,UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" Width="80"/>
							<DataGridTextColumn Header="Со скидкой" Binding="{Binding Path=InvoiceDiscount, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True,UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" Width="80"/>
							<DataGridComboBoxColumn Header="Услуга" SelectedValueBinding="{Binding Path=ServiceType, TargetNullValue=''}" ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.ServiceTypes}" SelectedValuePath="Name" DisplayMemberPath="Name"/>
							<DataGridComboBoxColumn Header="Тип груза" SelectedValueBinding="{Binding Path=Cargo}" ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.LoadDescriptions}" SelectedValuePath="Name" DisplayMemberPath="Name" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" />
							<!--<DataGridTextColumn Header="Расход" Binding="{Binding Path=TotalCost, StringFormat=\{0:N0\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>-->
							<DataGridTextColumn Header="Счет" Binding="{Binding Path=TotalPay, StringFormat=\{0:N0\}, TargetNullValue=''}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Доход" Binding="{Binding Path=IncomePay, StringFormat=\{0:N0\}, TargetNullValue=''}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="TextBlock">
										<Style.Triggers>
											<DataTrigger Binding="{Binding Path=IncomePayPoor,Mode=OneWay}" Value="True">
												<Setter Property="Foreground" Value="Red"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="СЧ, %" Binding="{Binding TotalPayInvoicePer, Mode=OneWay, NotifyOnValidationError=True, StringFormat=\{0:P\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="ТП.%" Binding="{Binding Path=CustomsPayInvoice, Mode=OneWay, StringFormat=\{0:P\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7e0e0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7e0e0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Примечания" Binding="{Binding Path=Notes,Mode=OneWay}" IsReadOnly="True" Width="SizeToHeader">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
                            <DataGridTemplateColumn>
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button Click="HistoryOpen_Click" Tag="{Binding}" Height="14" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="{x:Null}" >
											<Image Source="/CustomBrokerWpf;component/Images/his.png" />
										</Button>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
						</DataGrid.Columns>
					</DataGrid>
					<StackPanel Grid.Row="2" Orientation="Horizontal" Grid.ColumnSpan="2">
						<TextBlock Text="Всего: Заявок" VerticalAlignment="Center" Margin="5,0,3,0"/>
						<TextBox x:Name="RequestTotalCountTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5"/>
						<TextBlock Text="Объем" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalVolumeTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
						<TextBlock Text="Вес, факт" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalActualWeightTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
						<TextBlock Text="Вес, док" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalOfficialWeightTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
						<TextBlock Text="Кол-во мест" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalcellNumberTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
						<TextBlock Text="Инвойс" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalGoodValueTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
					</StackPanel>
				</Grid>
			</TabItem>
            <TabItem Header="ОТПРАВКИ" x:Name="ParcelNew">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                <parcel:ParcelUC ParentDataContext="{Binding RelativeSource={RelativeSource AncestorType=TabItem,AncestorLevel=1,Mode=FindAncestor}, Path=DataContext, Mode=OneWay}" DataContext="{Binding Path=CurrentItem}"/>
                <StatusBar Grid.Row="9" Background="Transparent" Grid.ColumnSpan="2" HorizontalContentAlignment="Right">
                    <StatusBarItem HorizontalAlignment="Right">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Path=IsFiltered}" />
                        <TextBlock Text="{Binding Path=Items.Count}" Grid.Column="1" HorizontalAlignment="Right"/>
                        </Grid>
                    </StatusBarItem>
                </StatusBar>
                </Grid>
            </TabItem>
            <TabItem Header="Склад Москва" x:Name="WarehouseRUTabItem">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ToolBar Grid.ColumnSpan="2" Height="32">
                        <!--<Button ToolTip="Экспорт в Excel" Command="{Binding Path=ExcelExport}" CommandParameter="{Binding ElementName=MainDataGrid, Path=.}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/excel_export.png" />
							</Button>-->
                        <Button ToolTip="Копировать" Command="Copy" IsTabStop="False">
                            <Image Source="/CustomBrokerWpf;component/Images/copy.png" />
                        </Button>
                        <Separator Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}"/>
                        <Button Command="{Binding Path=Delete}" CommandParameter="{Binding ElementName=SKU, Path=SelectedItems}" ToolTip="Удалить" IsTabStop="False" Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}">
                            <Image Source="/CustomBrokerWpf;component/Images/remove.png" />
                        </Button>
                        <Separator/>
                        <Button Command="{Binding Path=FilterClear}" ToolTip="Очистить фильтры" IsTabStop="False">
                            <Image Source="/CustomBrokerWpf;component/Images/funnel_delete.png" />
                        </Button>
                        <Separator/>
                        <Button Command="{Binding Path=SaveRefresh}" ToolTip="Обновить информацию" IsTabStop="False">
                            <Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
                        </Button>
                        <Button ToolTip="Сохранить изменения в БД" Command="{Binding Path=Save}" IsTabStop="False" Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}">
                            <Image Source="/CustomBrokerWpf;component/Images/save.png" />
                        </Button>
                        <Button Command="{Binding Path=Reject}" ToolTip="Отменить несохраненные изменения" IsTabStop="False" Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}">
                            <Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
                        </Button>
                        <Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Center" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" Grid.ColumnSpan="2" >
                            <Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
                                <TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
                            </Border>
                        </Popup>
                    </ToolBar>
                    <my:SKUUI x:Name="SKU" DataContext="{Binding}" Grid.Row="1"/>
                    <StatusBar Grid.Row="9" Background="Transparent" Grid.ColumnSpan="2" HorizontalContentAlignment="Right">
                        <StatusBarItem HorizontalAlignment="Right">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Path=IsFiltered}" />
                                <TextBlock Text="{Binding Path=Items.Count}" Grid.Column="1" HorizontalAlignment="Right"/>
                            </Grid>
                        </StatusBarItem>
                    </StatusBar>
                </Grid>
            </TabItem>
            <TabItem Header="Реестр заявок на оплату Арт Деливери" GotFocus="TabItem1_GotFocus" Background="#f7e0e0">
                <account:PaymentRegisterUC x:Name="PaymentDeliveryGrid"/>
            </TabItem>
            <TabItem Header="Реестр заявок на оплату Арт Трейд" GotFocus="TabItem2_GotFocus" Background="#f7e0e0">
                <account:PaymentRegisterUC x:Name="PaymentTradeGrid"/>
            </TabItem>
            <TabItem Header="Реестр ГТД Арт Деливери" GotFocus="TabItem3_GotFocus" Background="#f7e0e0">
                <account:GTDRegisterUC x:Name="GTDDeliveryGrid"/>
            </TabItem>
            <TabItem Header="Реестр ГТД Арт Трейд" GotFocus="TabItem4_GotFocus" Background="#f7e0e0">
                <account:GTDRegisterUC x:Name="GTDTradeGrid"/>
            </TabItem>
            <TabItem Header="Реестр ТЭО ГТД Арт Деливери" GotFocus="TabItem5_GotFocus" Background="#f7e0e0">
                <account:GTDRegisterUC x:Name="TEODeliveryGrid"/>
            </TabItem>
            <TabItem Header="Реестр ТЭО ГТД Арт Трейд" GotFocus="TabItem6_GotFocus" Background="#f7e0e0">
                <account:GTDRegisterUC x:Name="TEOTradeGrid"/>
            </TabItem>
            <TabItem Header="События" x:Name="EventLogTab" Visibility="{Binding Source={StaticResource keyVisibilityTopManagers}, Path=Visibility, Mode=OneTime}">
				<Grid x:Name="EventLogGrid">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<ToolBarTray Orientation="Vertical" AllowDrop="False" Background="#FFF0F0F0" Margin="0,0,0,3" >
						<ToolBar Width="32" Height="200" Background="#FFF0F0F0">
							<ToggleButton ToolTip="Изменить фильтр" x:Name="FilterButton" Click="FilterButton_Click" Visibility="Visible" IsTabStop="False" IsEnabled="True">
								<Image Source="/CustomBrokerWpf;component/Images/funnel.png" />
							</ToggleButton>
							<Button ToolTip="Обновить данные" Command="{Binding Path=Refresh}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
							</Button>
							<Separator Visibility="Visible"/>
							<Button x:Name="SaveButton" ToolTip="Сохранить изменения в БД" Command="{Binding Path=Save}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/Save.png" />
							</Button>
							<Button ToolTip="Отменить несохраненные изменения" Command="{Binding Path=Reject}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
							</Button>
							<Button ToolTip="Отметить выделенные" Command="{Binding Path=Hide}" CommandParameter="{Binding ElementName=EventLogDataGrid, Path=SelectedItems}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/check2.png" />
							</Button>
						</ToolBar>
					</ToolBarTray>
					<DataGrid x:Name="EventLogDataGrid" Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Path=EventLogs}" AutoGenerateColumns="False" RowDetailsVisibilityMode="Collapsed" SelectionUnit="FullRow" RowHeaderWidth="20" ClipboardCopyMode="IncludeHeader" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" Margin="3">
						<DataGrid.Columns>
							<DataGridCheckBoxColumn Header="Скрыть" Binding="{Binding Path=Inform}" IsThreeState="False"/>
							<DataGridTextColumn Header="Когда" Binding="{Binding Path=When, Mode=OneWay, StringFormat=\{0:g\}}"/>
							<DataGridTextColumn Header="Кто" Binding="{Binding Path=Who, Mode=OneWay}"/>
							<DataGridTextColumn Header="Описание" Binding="{Binding Path=Description, Mode=OneWay}" Width="*"/>
							<DataGridTextColumn Header="Скрыл" Binding="{Binding Path=UpdateWho, Mode=OneWay}"/>
							<DataGridTextColumn Header="Скрыто" Binding="{Binding Path=UpdateWhen, Mode=OneWay, StringFormat=\{0:g\}}"/>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</TabItem>
		</TabControl>
	</Grid>
</Window>
