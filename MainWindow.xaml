<Window x:Class="KirillPolyanskiy.CustomBrokerWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:coll="clr-namespace:System.Collections;assembly=mscorlib"
        xmlns:my="clr-namespace:KirillPolyanskiy.CustomBrokerWpf"
        xmlns:lib="clr-namespace:KirillPolyanskiy.DataModelClassLibrary;assembly=DataModelClassLibrary"
        xmlns:account="clr-namespace:KirillPolyanskiy.CustomBrokerWpf.WindowsAccount"
        xmlns:parcel="clr-namespace:KirillPolyanskiy.CustomBrokerWpf.Windows.Parcel"
        Icon="/CustomBrokerWpf;component/Images/truck_blue.png" Loaded="Window_Loaded" Closing="Window_Closing" Language="ru-RU" Top="5" Left="10" WindowState="Maximized" FontSize="11">
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Menu x:Name="mainMenu" FontSize="16" Margin="4">
			<MenuItem Header="Отправка" x:Name="parcelMenu" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
				<MenuItem Header="Склад" Click="MenuItemStoreMerge_Click" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="Images/forklifter.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Список отправок" Click="MenuListParcel_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/truck_blue.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Довоз" Click="MenuDelivery_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/truck_red.png" />
					</MenuItem.Icon>
				</MenuItem>
				<!--<MenuItem Header="Счет" Click="MenuPayParcel_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/cashier.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Оплаты" Click="MenuPPParcel_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/form_yellow.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="СФ и ТТН" Click="MenuWayBill_Click" Height="{Binding ElementName=parcelMenu, Path=ActualHeight}" ToolTip="Создание СФ и ТНН из спецификации">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/excel_icon4.png" />
					</MenuItem.Icon>
				</MenuItem>-->
			</MenuItem>
			<MenuItem Header="Клиенты" Click="MenuNewClient_Click">
                <!--<MenuItem Header="Клиенты"/>
				<MenuItem Header="Карточка" Click="MenuItemClient_Click"/>
				<MenuItem Header="Контакты" Click="MenuItemClientList_Click"/>-->
			</MenuItem>
			<MenuItem Header="Поставщики" Click="MenuItemAgent_Click"/>
			<MenuItem Header="Справочники" x:Name="referenceMenu">
				<MenuItem Header="Алгоритмы" Click="MenuItemAlgorithm_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="Visible">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/calculator.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Артикулы" Click="MenuItemVendorCode_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="Visible">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/document_view.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Visibility="Collapsed" Header="Банки" Click="MenuItemBank_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" >
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/creditcards.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Брэнды" Click="MenuItemBrand_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" >
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/factory.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид адреса" Click="MenuItemAddressType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/mail2.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид груза" Click="MenuItemGoodsType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/weight2.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид доставки" Click="MenuItemDeliveryType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/helicopter.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид контакта" Click="MenuItemContactType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/handshake.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Вид платежа" Click="MenuItemPaymentType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/money_envelope.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Города" Click="MenuItemTown_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/signpost.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Группы менеджеров" Click="MenuItemManagGroup_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" >
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/users_family.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="ДС, СРТ" Click="MenuItemGoods_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/certificate.png" />
					</MenuItem.Icon>
				</MenuItem>
                <MenuItem Header="Истекающие СРТ" Click="MenuGoodsEnding_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
                    <MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/certificate.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Импортеры" Click="MenuItemImporter_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/businessman.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Контрагенты" Click="MenuItemContractor_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/security_agent.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Менеджеры" Click="MenuItemManagers_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/users_family.png" />
					</MenuItem.Icon>
				</MenuItem>
				<!--<MenuItem Header="Получатели" Click="MenuItemLegal_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/wallet_open.png" />
					</MenuItem.Icon>
				</MenuItem>-->
				<MenuItem Header="Разбивки" Click="MenuItemSpecificationDetails_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="Images/document_certificate.png" />
					</MenuItem.Icon>
				</MenuItem>
                <Separator/>
                <MenuItem Header="Склад" Click="MenuItemStore_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/forklifter.png" />
					</MenuItem.Icon>
				</MenuItem>
                <MenuItem Header="Склад, тип адреса" Click="MenuItemStoreAddressType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
                    <MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/forklifter.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Склад, тип контакта" Click="MenuItemStoreContactType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
                    <MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/forklifter.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <!--<MenuItem Header="Спецификации" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
                    <MenuItem.Icon>
                        <Image Source="/CustomBrokerWpf;component/Images/form_yellow.png" />
                    </MenuItem.Icon>
                </MenuItem>-->
				<MenuItem Header="Средства контакта" Click="MenuItemContactPointType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/mobilephone3.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Статусы заявки" Click="MenuItemRequestStatus_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/index_preferences.png" />
					</MenuItem.Icon>
				</MenuItem>
				<!--<MenuItem Header="Статьи затрат" Click="MenuItemExpenditureItem_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="{Binding Source={StaticResource keyVisibilityManagers},Path=Visibility}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/money_envelope.png" />
					</MenuItem.Icon>
				</MenuItem>-->
				<MenuItem Header="Страны" Click="MenuItemCountries_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/earth.png" />
					</MenuItem.Icon>
				</MenuItem>
				<!--<MenuItem Header="Типы затрат" Click="MenuItemExpenditureType_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}" Visibility="Collapsed">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/money_envelope.png" />
					</MenuItem.Icon>
				</MenuItem>-->
				<MenuItem Header="Шаблоны писем" Click="MenuItemMailTemplate_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/mail2.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Экспедиторы" Click="MenuItemForwarder_Click" Height="{Binding ElementName=referenceMenu, Path=ActualHeight}">
					<MenuItem.Icon>
						<Image Source="/CustomBrokerWpf;component/Images/hand_paper.png" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<!--<MenuItem Header="Платежки" Click="MenuPPAccount_Click" x:Name="accountMenu" Visibility="Collapsed"/>-->
            <MenuItem Header="Отчеты" Click="MenuItemParcelReport_Click" />
			<MenuItem Header="Закрыть все" Click="Button_Click"/>
		</Menu>
		<Popup Name="popInf" StaysOpen="False" Placement="Mouse" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" >
			<Border BorderBrush="Beige" BorderThickness="2" Background="WhiteSmoke" CornerRadius="7">
				<TextBlock Name="PopupText" Margin="2"  FontStyle="Italic" Foreground="Teal" />
			</Border>
		</Popup>
        <TabControl Grid.Row="1" x:Name="MainTabControl">
			<TabControl.Resources>
				<CollectionViewSource x:Key="keyStatusVS" />
				<my:BitVisibilityConverter x:Key="keyBitVisibilityConverter"/>
				<my:IsEnabledConverter x:Key="keyIsEnabledConverter"/>
                <my:NoNullValueBackConverter x:Key="keyNotNullConverter"/>
				<CollectionViewSource x:Key="keyGoodsTypeVS" />
				<CollectionViewSource x:Key="keyParcelTypeVS" />
				<Style x:Key="ComboBoxButtonLess" TargetType="{x:Type ComboBox}"
                                xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
					<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
					<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
					<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ComboBox}">
								<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
									<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
										<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
											<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
												<ScrollViewer x:Name="DropDownScrollViewer">
													<Grid RenderOptions.ClearTypeHint="Enabled">
														<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
															<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
														</Canvas>
														<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
													</Grid>
												</ScrollViewer>
											</Border>
										</Themes:SystemDropShadowChrome>
									</Popup>
									<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
									<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
										<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
										<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
									</Trigger>
									<Trigger Property="HasItems" Value="false">
										<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										<Setter Property="Background" Value="#FFF4F4F4"/>
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsGrouping" Value="true"/>
											<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
										</MultiTrigger.Conditions>
										<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
									</MultiTrigger>
									<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
										<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
										<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</TabControl.Resources>
			<TabItem Header="РЕГИСТР">
				<Grid x:Name="RequestGrid">
					<Grid.Resources>
						<lib:BindingProxy x:Key="MainDataContext" Data="{Binding}"/>
						<my:RequestTotalConverter x:Key="keyRequestTotalConverter"/>
						<my:BooleanClipBoardConverter x:Key="BooleanClipBoardConverter1" />
						<CollectionViewSource x:Key="keyForwarderVS" />
						<CollectionViewSource x:Key="keyStoreVS" />
						<CollectionViewSource x:Key="keyManagerGroupVS">
							<CollectionViewSource.SortDescriptions>
								<cm:SortDescription PropertyName="managergroupName"/>
							</CollectionViewSource.SortDescriptions>
						</CollectionViewSource>
						<Style x:Key="MoneyStyleView" TargetType="{x:Type TextBlock}">
							<Setter Property="TextAlignment" Value="Right"/>
							<Setter Property="Margin" Value="2,0,2,0" />
						</Style>
						<Style x:Key="MoneyStyleEdit" TargetType="{x:Type TextBox}">
							<Setter Property="TextAlignment" Value="Right"/>
							<Setter Property="Padding" Value="0,-1,0,-2" />
						</Style>
						<Style x:Key="NumberCenterStyleView" TargetType="{x:Type TextBlock}">
							<Setter Property="HorizontalAlignment" Value="Center"/>
						</Style>
						<Style x:Key="NumberCenterStyleViewEdit" TargetType="{x:Type TextBox}">
							<Setter Property="TextAlignment" Value="Center"/>
							<Setter Property="Padding" Value="0,-1,0,-2" />
						</Style>
					</Grid.Resources>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="159*"/>
						<ColumnDefinition Width="595*"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<ToolBar Height="35" Grid.ColumnSpan="2">
						<Button ToolTip="Добавить заявку" Click="RequestButtonAdd_Click">
							<!-- Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}"-->
							<Image Source="/CustomBrokerWpf;component/Images/rPlus_01-66-512.png" />
						</Button>
						<Button Command="Copy" ToolTip="Копировать">
							<Image Source="/CustomBrokerWpf;component/Images/Copy-512.png" />
						</Button>
						<Separator/>
						<Button ToolTip="Обновить данные" Command="{Binding Path=SaveRefresh}">
							<Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
						</Button>
						<Button ToolTip="Сохранить изменения в БД" Command="{Binding Path=Save}">
							<Image Source="/CustomBrokerWpf;component/Images/Save.png" />
						</Button>
						<Button ToolTip="Отменить несохраненные изменения" Click="RequestRejectButton_Click">
							<Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
						</Button>
                        <ToggleButton ToolTip="Изменить фильтр" x:Name="RequestFilterButton" IsChecked="{Binding Path=IsShowFilterWindow}" Click="RequestFilterButton_Click">
							<Image Source="/CustomBrokerWpf;component/Images/rshester.png" />
						</ToggleButton>
						<Separator/>
						<TextBlock Text="Клиент" VerticalAlignment="Center" Margin="5,0"/>
                        <ComboBox  SelectedValue="{Binding Path=Data.RequestClientFilter, Source={StaticResource MainDataContext}, TargetNullValue=0}" ItemsSource="{Binding Customers}" SelectedValuePath="Id" DisplayMemberPath="Name" IsEditable="True" IsReadOnly="False" IsSynchronizedWithCurrentItem="False" MinWidth="100" KeyDown="RequestFilter_KeyDown"/>
						<TextBlock Text="№" VerticalAlignment="Center" Margin="5,0"/>
						<TextBox Text="{Binding Source={StaticResource MainDataContext}, Path=Data.RequestStoragePointFilter, UpdateSourceTrigger=PropertyChanged}" MinWidth="60" KeyDown="RequestFilter_KeyDown"/>
						<Button ToolTip="Применить фильтр" Click="RequestFastFilterButton_Click" Margin="5,0">
							<Image Source="/CustomBrokerWpf;component/Images/rpoisk2.png" />
						</Button>
						<Separator/>
						<Button ToolTip="Снять все блокировки" Click="UnLockButton_Click">
							<Image Source="/CustomBrokerWpf;component/Images/lock_open.png" />
						</Button>
						<!--<Button Name="RequestSortAZButton" ToolTip="Сортировать по возрастанию" Click="RequestSortAZButton_Click">
                            <Button.Content>
                                <Image Source="/CustomBrokerWpf;component/Images/AZ.png" />
                            </Button.Content>
                        </Button>
                        <Button Name="RequestSortZAButton" ToolTip="Сортировать по убыванию" Click="RequestSortZAButton_Click">
                            <Image Source="/CustomBrokerWpf;component/Images/ZA.png" />
                        </Button>
                        <Button Name="RequestSoprtClean" ToolTip="Отменить сортировку" Click="RequestSoprtClean_Click">
                            <Image Source="/CustomBrokerWpf;component/Images/AZClean.png" />
                        </Button>
                        <Separator />
                        <Separator/>
                        <Button Command="Cut" ToolTip="Вырезать">
                            <Image Source="/CustomBrokerWpf;component/Images/cut.png" />
                        </Button>
                        <Button Command="Paste" ToolTip="Вставить">
                            <Image Source="/CustomBrokerWpf;component/Images/paste.png" />
                        </Button>
                        <Separator/>
                        <Separator/>-->
						<Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Bottom" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" >
							<Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
								<TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
							</Border>
						</Popup>
					</ToolBar>
					<DataGrid Name="RequestDataGrid" Grid.Row="1" ItemsSource="{Binding Items}" AutoGenerateColumns="False" EnableRowVirtualization="True" HorizontalAlignment="Left" RowDetailsVisibilityMode="Collapsed" VerticalAlignment="Top" SelectionUnit="FullRow" Validation.Error="RequestDataGrid_Error" HorizontalGridLinesBrush="RoyalBlue" VerticalGridLinesBrush="RoyalBlue" AlternatingRowBackground="WhiteSmoke" AlternationCount="2"
                      CellEditEnding="RequestDataGrid_CellEditEnding" RowEditEnding="RequestDataGrid_RowEditEnding" UnloadingRow="RequestDataGrid_UnloadingRow" LoadingRow="RequestDataGrid_LoadingRow" BeginningEdit="RequestDataGrid_BeginningEdit" RowHeaderWidth="15" CanUserResizeRows="False" FrozenColumnCount="1" SelectionChanged="RequestDataGrid_SelectionChanged" 
                      Grid.ColumnSpan="2" MouseDoubleClick="RequestDataGrid_MouseDoubleClick">
						<DataGrid.CommandBindings>
							<CommandBinding Command="ApplicationCommands.Delete" Executed="RequestDataGridDelete_Executed" CanExecute="RequestDelete_CanExecute"/>
						</DataGrid.CommandBindings>
						<DataGrid.Resources>
							<my:DataGridDisplayIndexConverter x:Key="keyDisplayIndexConverter"/>
							<my:IsReadOnlyHasValueConverter x:Key="keyHasValueConverter"/>
						</DataGrid.Resources>
						<DataGrid.CellStyle>
							<Style TargetType="DataGridCell">
								<Setter Property="ContextMenu" Value="{StaticResource DataGridCellContextMenu}"/>
							</Style>
						</DataGrid.CellStyle>
						<DataGrid.RowStyle>
							<Style TargetType="{x:Type DataGridRow}">
								<Style.Triggers>
									<Trigger Property="IsSelected" Value="False">
										<Setter Property="Background" Value="#e0f7e3"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</DataGrid.RowStyle>
						<DataGrid.Columns>
							<!--
                            <DataGridTemplateColumn CanUserSort="True" SortMemberPath="colmark">
                                <DataGridTemplateColumn.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Rectangle Fill="Green" Grid.Row="0" Width="6" Height="6" />
                                        <Rectangle Fill="Red" Grid.Column="1" Width="6" Height="6" />
                                        <Rectangle Fill="Blue" Grid.Row="1" Width="6" Height="6" />
                                        <Rectangle Fill="Yellow" Grid.Row="1" Grid.Column="1" Width="6" Height="6" />
                                    </Grid>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Rectangle Fill="{Binding Path=colmark}" RadiusX="2" RadiusY="2" Width="15" Height="15" Margin="1" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding Path=colmark}" SelectedValuePath="Fill" TextSearch.TextPath="Fill" SelectionChanged="ParcelColmarkComboBox_SelectionChanged" >
                                            <ComboBox.ItemsSource>
                                                <coll:ArrayList>
                                                    <Rectangle Fill="Transparent" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Green" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Red" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Blue" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Yellow" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                    <Rectangle Fill="Black" RadiusX="2" RadiusY="2" Width="13" Height="13" Margin="1" />
                                                </coll:ArrayList>
                                            </ComboBox.ItemsSource>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Позиция" x:Name="storagePointColumn" ElementStyle="{StaticResource NumberCenterStyleView}">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="storagePoint" NotifyOnValidationError="True" >
                                        <Binding.ValidationRules>
                                            <my:RequestStoagePointValidationRule x:Name="RequestStoragePointValidationRule"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Позиция по складу"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource NumberCenterStyleViewEdit}">
                                        <Setter Property="MaxLength" Value="6"/>
                                        <Setter Property="Padding" Value="0,-1,0,-2" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridComboBoxColumn Header="Статус" SelectedValueBinding="{Binding Path=status}" ItemsSource="{Binding Source={StaticResource keyStatusVS}}" SelectedValuePath="rowId" DisplayMemberPath="name" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}">
                                <DataGridComboBoxColumn.EditingElementStyle >
                                    <Style TargetType="ComboBox">
                                        <Setter Property="IsDropDownOpen" Value="True"/>
                                        <Setter Property="ItemContainerStyle">
                                            <Setter.Value>
                                                <Style TargetType="ComboBoxItem">
                                                    <Setter Property="Visibility" Value="{Binding Path=rowId, Converter={StaticResource ResourceKey=keyBitVisibilityConverter}, ConverterParameter=50}"/>
                                                    <Setter Property="IsEnabled" Value="{Binding Path=rowId, Converter={StaticResource keyIsEnabledConverter}, ConverterParameter=50, Mode=OneWay}"/>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn Header="Спецификация" Binding="{Binding Path=specification, StringFormat=\{0:d\}, ValidatesOnExceptions=true, NotifyOnValidationError=true, TargetNullValue=''}" x:Name="specificationColumn" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Дата получения спецификации"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridCheckBoxColumn Binding="{Binding Path=isspecification}" x:Name="isSpecColumn" CanUserSort="True" SortMemberPath="isspecification" CanUserReorder="False" CanUserResize="False" IsReadOnly="True" ClipboardContentBinding="{Binding Path=isspecification, Converter={StaticResource BooleanClipBoardConverter1}}">
                                <DataGridCheckBoxColumn.ElementStyle>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                    </Style>
                                </DataGridCheckBoxColumn.ElementStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn Header="Группа менеджеров" Binding="{Binding Path=managerGroup}" IsReadOnly="True" />
                            <DataGridComboBoxColumn Header="Склад" SelectedValueBinding="{Binding Path=storeid, NotifyOnValidationError=True, ValidatesOnExceptions=true}" ItemsSource="{Binding Source={StaticResource keyStoreVS}}" SelectedValuePath="storeId" DisplayMemberPath="storeName" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" />
                            <DataGridCheckBoxColumn Header="Фрахт" Binding="{Binding Path=isfreight, Mode=OneWay}" IsReadOnly="True" ClipboardContentBinding="{Binding Path=isfreight, Converter={StaticResource BooleanClipBoardConverter1}}">
                                <DataGridCheckBoxColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <EventSetter Event="MouseDoubleClick" Handler="FreightColumn_Click"/>
                                    </Style>
                                </DataGridCheckBoxColumn.CellStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn Header="Экспедитор" Binding="{Binding Path=forwarder}" IsReadOnly="True" />
                            <DataGridTextColumn Header="Стоимость товара, Е" x:Name="goodValueColumn" Binding="{Binding Path=goodValue, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" />
                            <DataGridTextColumn Header="Группа" Binding="{Binding Path=parcelgroup, UpdateSourceTrigger=LostFocus, TargetNullValue='',NotifyOnValidationError=True}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}" SortMemberPath="pgroupsort">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Группа загрузки"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridComboBoxColumn Header="Тип перевозки" SelectedValueBinding="{Binding Path=parceltype}" ItemsSource="{Binding Source={StaticResource keyParcelTypeVS}}" SelectedValuePath="parceltypeid" DisplayMemberPath="parceltypename" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Width="SizeToCells" IsReadOnly="{Binding Path=fullNumber,Converter={StaticResource keyHasValueConverter}, ConverterParameter=True }">
                                <DataGridComboBoxColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsEnabled" Value="{Binding Path=fullNumber,Converter={StaticResource keyHasValueConverter}, ConverterParameter=True }"/>
                                    </Style>
                                </DataGridComboBoxColumn.CellStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn Header="Отправка" Binding="{Binding Path=fullNumber,Mode=OneWay}" SortMemberPath="parcelnumbersort" IsReadOnly="True" />
                            <DataGridTextColumn Header="Инфо" Binding="{Binding Path=storageInform, StringFormat=\{0:d\},Mode=OneWay, TargetNullValue=''}" IsReadOnly="True" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Дата отправки информации на склад о загрузке заявки."/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="customerNoteColumn" Binding="{Binding Path=customerNote}" Header="Примечание клиенту" Width="SizeToHeader">
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="MaxLength" Value="100"/>
                                        <Setter Property="Padding" Value="0,-1,0,-2" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="managerNoteColumn" Binding="{Binding Path=managerNote}" Header="Примечание менеджера" Width="SizeToHeader" >
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="MaxLength" Value="100"/>
                                        <Setter Property="Padding" Value="0,-1,0,-2" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            -->
                            <DataGridTextColumn Header="№" Binding="{Binding Path=Id, Converter={StaticResource keyNoDisplayNewId}}" IsReadOnly="True" ElementStyle="{StaticResource NumberCenterStyleView}" />
                            <DataGridTextColumn Header="Складской №" Binding="{Binding Path=StorePointDate, ValidatesOnExceptions=true, NotifyOnValidationError=true, TargetNullValue='', Mode=OneWay}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                        <Setter Property="ToolTip" Value="Складской № (При отсутствии складского номера номер и дата заявки)"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
                                                    <Condition Binding="{Binding ShipmentDelay}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="#f7ede0"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
                                                    <Condition Binding="{Binding ShipmentDelay}" Value="2"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="#f7e0e0"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
							<DataGridTemplateColumn Header="Статус" CanUserSort="True" SortMemberPath="StatusParcel" ClipboardContentBinding="{Binding Path=StatusParcel}" Width="64">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Path=StatusParcel}" VerticalAlignment="Center"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
								<DataGridTemplateColumn.CellEditingTemplate>
									<DataTemplate>
										<Grid>
											<TextBlock Text="{Binding Path=ParcelNumber}" Visibility="{Binding ParcelNumberVisible}" VerticalAlignment="Center"/>
											<ComboBox SelectedItem="{Binding Path=Status}" ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Statuses}" DisplayMemberPath="Name" Visibility="{Binding StatusVisible}" IsSynchronizedWithCurrentItem="False" IsDropDownOpen="{Binding StatusEditable, Mode=OneWay}"/>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellEditingTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="Группа" Binding="{Binding Path=ParcelGroup, UpdateSourceTrigger=LostFocus, TargetNullValue='',NotifyOnValidationError=True}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Группа загрузки (Позиция по складу)"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn Width="SizeToCells">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>
												<!--<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>-->
											</Grid.ColumnDefinitions>
											<!--<Button ToolTip="Каталог" Tag="{Binding}" Click="RequestFolderOpen_Click" Grid.Column="0"  Margin="2,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" BorderBrush="{x:Null}" Background="{x:Null}">
												<Image Source="Images/cat.png"/>
											</Button>-->
											<Image ToolTip="Группа менеджеров" Grid.Column="0" Source="{Binding Path=ManagerGroupImage}" Margin="2,0"/>
											<!--<ComboBox Grid.Column="1" SelectedIndex="{Binding Path=StateInv,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="Инвойс" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="Images/inv_1.png" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/inv_2.png" Height="14" Margin="0"/>
												</ComboBoxItem>
											</ComboBox>-->
											<!--<Image Grid.Column="3" ToolTip="Спецификация_Разбивка" Source="{Binding Path=StateExcImagePath,Mode=OneWay}" Height="14"  Margin="2,0"/>-->
											<!--<ComboBox Grid.Column="3" SelectedIndex="{Binding Path=StateExc,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="Спецификация_Разбивка" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/excel_1.png" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/excel_2.png" Height="14" Margin="0"/>
												</ComboBoxItem>
											</ComboBox>-->
                                            <ComboBox Grid.Column="1" SelectedIndex="{Binding Path=StateDoc,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="МАРКИРОВКА" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/doc_1.png" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/doc_2.png" Height="14" Margin="0"/>
												</ComboBoxItem>
											</ComboBox>
											<Button Grid.Column="2" ToolTip="Отправка уведомления &quot;Поступление на склад консолидации&quot;" Command="{Binding Path=SendMail}" CommandParameter="Stock" Margin="2,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" BorderBrush="{x:Null}" Background="{x:Null}">
												<Image Source="{Binding Path=MailStateStockImage}"/>
											</Button>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Менеджер" CanUserSort="True" SortMemberPath="Manager.NameComb" ClipboardContentBinding="{Binding Path=Manager.NameComb}"  Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
										<TextBlock Text="{Binding Manager.NameComb}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Managers}"  SelectedValue="{Binding Path=Manager,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="NameComb" IsSynchronizedWithCurrentItem="False"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Поставщик" CanUserSort="True" SortMemberPath="Agent.Name" ClipboardContentBinding="{Binding Path=Agent.Name}" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Agent.Name, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding Path=AgentId, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=Agent.Name}"
                                                  ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Agents}" SelectedValuePath="Id" DisplayMemberPath="Name">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Торговые марки" Width="150" CanUserSort="True" SortMemberPath="BrandNames" ClipboardContentBinding="{Binding Path=BrandNames}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=BrandNames, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=BrandNames}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Text="{Binding Path=BrandNames, Mode=OneWay, TargetNullValue=''}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=BrandNames}"
                                                  ItemsSource="{Binding Path=Brands}" DisplayMemberPath="Brand.Name">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding Path=Selected, Mode=TwoWay}" IsThreeState="False" Margin="0" HorizontalContentAlignment="Stretch" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox}, Path=ActualWidth}" VerticalContentAlignment="Center" Style="{StaticResource ErrorStyle}">
                                                        <TextBlock Text="{Binding Brand.Name}" VerticalAlignment="Center"/>
                                                    </CheckBox>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Клиент" CanUserSort="True" SortMemberPath="Customer.Name" ClipboardContentBinding="{Binding Path=Customer.Name}" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Customer.Name, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding Path=CustomerId, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=Customer.Name}"
                                                  ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Customers}" SelectedValuePath="Id" DisplayMemberPath="Name">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
                                        <Setter Property="FontWeight" Value="{Binding Customer.NameFontWeight}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <!--<DataGridComboBoxColumn Header="Поставщик" SelectedValueBinding="{Binding Path=AgentId, TargetNullValue=0,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"
                                    ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Agents}" SelectedValuePath="Id" DisplayMemberPath="Name" SortMemberPath="AgentName"  Width="150">
								<DataGridComboBoxColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
									</Style>
								</DataGridComboBoxColumn.CellStyle>
							</DataGridComboBoxColumn>
							<DataGridComboBoxColumn Header="Клиент" SelectedValueBinding="{Binding Path=CustomerId, TargetNullValue=0,UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" SortMemberPath="CustomerName"
                                    ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Customers}" SelectedValuePath="customerID" DisplayMemberPath="customerName" Width="150">
								<DataGridComboBoxColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
                                        <Setter Property="FontWeight" Value="{Binding Customer.NameFontWeight}"/>
                                    </Style>
								</DataGridComboBoxColumn.CellStyle>
							</DataGridComboBoxColumn>-->
							<DataGridTemplateColumn Header="Юр. лица" Width="150" CanUserSort="True" SortMemberPath="CustomerLegalsNames" ClipboardContentBinding="{Binding Path=CustomerLegalsNames}">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Path=CustomerLegalsNames, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
								<DataGridTemplateColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding Path=CustomerLegalsNames}"/>
                                        <Setter Property="FontWeight" Value="{Binding CustomerLegalsNamesFontWeight}"/>
									</Style>
								</DataGridTemplateColumn.CellStyle>
								<DataGridTemplateColumn.CellEditingTemplate>
									<DataTemplate>
										<ComboBox Text="{Binding Path=CustomerLegalsNames, Mode=OneWay, TargetNullValue=''}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=CustomerLegalsNames}"
                                                  ItemsSource="{Binding Path=CustomerLegals}" DisplayMemberPath="CustomerLegal.Name">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<CheckBox IsChecked="{Binding Path=Selected, Mode=TwoWay}" IsThreeState="False" Margin="0" HorizontalContentAlignment="Stretch" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox}, Path=ActualWidth}" VerticalContentAlignment="Center" Style="{StaticResource ErrorStyle}">
														<TextBlock Text="{Binding CustomerLegal.Name}" VerticalAlignment="Center"/>
													</CheckBox>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellEditingTemplate>
							</DataGridTemplateColumn>
                            <DataGridCheckBoxColumn Header="ЭДО Деливери" Binding="{Binding Path=CustomerLegalsSelected/CustomerLegal.EDOD, Mode=TwoWay}" IsThreeState="False" Width="50">
                                <DataGridCheckBoxColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                        <Setter Property="ToolTip" Value="ЭДО Деливери"/>
                                    </Style>
                                </DataGridCheckBoxColumn.HeaderStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn Header="ЭДО Tрэйд" Binding="{Binding Path=CustomerLegalsSelected/CustomerLegal.EDOT, Mode=TwoWay}" IsThreeState="False" Width="50">
                                <DataGridCheckBoxColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                        <Setter Property="ToolTip" Value="ЭДО Tрэйд"/>
                                    </Style>
                                </DataGridCheckBoxColumn.HeaderStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridComboBoxColumn Header="Импортер" SelectedItemBinding="{Binding Path=Importer,UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" SortMemberPath="Importer.Name"
                                    ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.Importers}" DisplayMemberPath="Name"  Width="100">
								<DataGridComboBoxColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
									</Style>
								</DataGridComboBoxColumn.CellStyle>
							</DataGridComboBoxColumn>
							<DataGridTextColumn Header="Вес Д" x:Name="officialWeightColumn" Binding="{Binding Path=OfficialWeight, StringFormat=\{0:N\},UpdateSourceTrigger=LostFocus, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Width="50" />
							<DataGridTextColumn Header="Вес Ф" x:Name="actualWeightColumn" Binding="{Binding Path=ActualWeight, StringFormat=\{0:N\},UpdateSourceTrigger=LostFocus, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Width="50" />
							<DataGridTextColumn Header="Объем" x:Name="volumeColumn" Binding="{Binding Path=Volume, StringFormat=\{0:N\},UpdateSourceTrigger=LostFocus, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" />
							<DataGridTextColumn Header="Мест" x:Name="cellNumberColumn" Binding="{Binding Path=CellNumber,UpdateSourceTrigger=LostFocus, TargetNullValue='', NotifyOnValidationError=True, ValidatesOnExceptions=true}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}" />
							<DataGridTextColumn Header="Инвойс" Binding="{Binding Path=Invoice, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True,UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" Width="80"/>
							<DataGridTextColumn Header="Со скидкой" Binding="{Binding Path=InvoiceDiscount, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True,UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" Width="80"/>
							<DataGridComboBoxColumn Header="Услуга" SelectedValueBinding="{Binding Path=ServiceType, TargetNullValue=''}" ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.ServiceTypes}" SelectedValuePath="Name" DisplayMemberPath="Name"/>
							<DataGridComboBoxColumn Header="Тип груза" SelectedValueBinding="{Binding Path=Cargo}" ItemsSource="{Binding Source={StaticResource MainDataContext}, Path=Data.LoadDescriptions}" SelectedValuePath="Name" DisplayMemberPath="Name" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" />
							<!--<DataGridTextColumn Header="Расход" Binding="{Binding Path=TotalCost, StringFormat=\{0:N0\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>-->
							<DataGridTextColumn Header="Счет" Binding="{Binding Path=TotalPay, StringFormat=\{0:N0\}, TargetNullValue=''}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Доход" Binding="{Binding Path=IncomePay, StringFormat=\{0:N0\}, TargetNullValue=''}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="TextBlock">
										<Style.Triggers>
											<DataTrigger Binding="{Binding Path=IncomePayPoor,Mode=OneWay}" Value="True">
												<Setter Property="Foreground" Value="Red"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="СЧ, %" Binding="{Binding TotalPayInvoicePer, Mode=OneWay, NotifyOnValidationError=True, StringFormat=\{0:P\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="ТП.%" Binding="{Binding Path=CustomsPayInvoice, Mode=OneWay, StringFormat=\{0:P\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7e0e0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7e0e0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Примечания" Binding="{Binding Path=Notes,Mode=OneWay}" IsReadOnly="True" Width="SizeToHeader">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
                            <DataGridTemplateColumn>
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button Click="HistoryOpen_Click" Tag="{Binding}" Height="14" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="{x:Null}" >
											<Image Source="/CustomBrokerWpf;component/Images/his.png" />
										</Button>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
						</DataGrid.Columns>
					</DataGrid>
					<StackPanel Grid.Row="2" Orientation="Horizontal" Grid.ColumnSpan="2">
						<TextBlock Text="Всего: Заявок" VerticalAlignment="Center" Margin="5,0,3,0"/>
						<TextBox x:Name="RequestTotalCountTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5"/>
						<TextBlock Text="Объем" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalVolumeTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
						<TextBlock Text="Вес, факт" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalActualWeightTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
						<TextBlock Text="Вес, док" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalOfficialWeightTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
						<TextBlock Text="Кол-во мест" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalcellNumberTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
						<TextBlock Text="Инвойс" VerticalAlignment="Center" Margin="10,0,3,0"/>
						<TextBox x:Name="RequestTotalGoodValueTextBox" IsReadOnly="True" TextAlignment="Right" Margin="0,5" />
					</StackPanel>
				</Grid>
			</TabItem>
            <TabItem Header="ОТПРАВКИ" x:Name="ParcelNew">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                <parcel:ParcelUC ParentDataContext="{Binding RelativeSource={RelativeSource AncestorType=TabItem,AncestorLevel=1,Mode=FindAncestor}, Path=DataContext, Mode=OneWay}" DataContext="{Binding Path=CurrentItem}"/>
                <StatusBar Grid.Row="9" Background="Transparent" Grid.ColumnSpan="2" HorizontalContentAlignment="Right">
                    <StatusBarItem HorizontalAlignment="Right">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Path=IsFiltered}" />
                        <TextBlock Text="{Binding Path=Items.Count}" Grid.Column="1" HorizontalAlignment="Right"/>
                        </Grid>
                    </StatusBarItem>
                </StatusBar>
                </Grid>
            </TabItem>
			<TabItem Header="ОТПРАВКИ" Visibility="Collapsed">
				<Grid x:Name="ParcelGrid" Validation.Error="mainValidation_Error" IsSharedSizeScope="True">
					<Grid.Resources>
						<lib:BindingProxy x:Key="ParcelDataContext" Data="{Binding}"/>
						<my:BooleanClipBoardConverter x:Key="BooleanClipBoardConverter1" />
						<my:FreeRequestEnableConverter x:Key="keyFreeRequestEnableConverter"/>
						<Style x:Key="MoneyStyleView" TargetType="{x:Type TextBlock}">
							<Setter Property="TextAlignment" Value="Right"/>
							<Setter Property="Margin" Value="2,0,2,0" />
						</Style>
						<Style x:Key="MoneyStyleEdit" TargetType="{x:Type TextBox}">
							<Setter Property="TextAlignment" Value="Right"/>
							<Setter Property="Padding" Value="0,-1,0,-2" />
						</Style>
						<Style x:Key="NumberCenterStyleView" TargetType="{x:Type TextBlock}">
							<Setter Property="HorizontalAlignment" Value="Center"/>
						</Style>
						<Style x:Key="NumberCenterStyleViewEdit" TargetType="{x:Type TextBox}">
							<Setter Property="TextAlignment" Value="Center"/>
							<Setter Property="Padding" Value="0,-1,0,-2" />
						</Style>
					</Grid.Resources>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="21*"/>
						<ColumnDefinition Width="733*"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="32"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition MinHeight="20"/>
						<RowDefinition Height="32"/>
						<RowDefinition MinHeight="20"/>
						<RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<ToolBar Grid.ColumnSpan="2" IsTabStop="False" Margin="0,1">
						<TextBlock Text="Выбор:" Padding="5,0,5,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
						<ComboBox x:Name="ParcelNumberList" ItemsSource="{Binding Path=Items}" DisplayMemberPath="ParcelNumberEntire" SelectedItem="{Binding CurrentItem, Mode=OneWay}"
                            IsReadOnly="False" IsEditable="True"  IsTextSearchEnabled="True" IsSynchronizedWithCurrentItem="True" MinWidth="50" HorizontalAlignment="Stretch" />
						<Separator />
						<Button ToolTip="Папка документов" Command="{Binding Path=FolderOpen}">
							<Image Source="/CustomBrokerWpf;component/Images/catalog.png" />
						</Button>
						<Separator Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}"/>
						<Button x:Name="ParcelAddButton" ToolTip="Добавить перевозку" Command="{Binding Path=Add}" IsTabStop="False" Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}">
							<Image Source="/CustomBrokerWpf;component/Images/rPlus_01-66-512.png" />
						</Button>
						<Separator Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}"/>
						<Button ToolTip="Проставить в заявках дату отправки информации на склад." Command="{Binding SetStoreInform}" Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}">
							<Image Source="/CustomBrokerWpf;component/Images/dates.png"/>
							<!-- Click="MoveInformStore_Click"-->
						</Button>
						<Separator/>
						<!--<Button Click="FoldersMoveButton_Click" ToolTip = "Обновить папки документов">
							<Image Source="/CustomBrokerWpf;component/Images/folder_ok.png" />
						</Button>-->
						<!--<Button ToolTip="Перенести спецификации" Command="{Binding MoveSpecification}" Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}">
							<Image Source="/CustomBrokerWpf;component/Images/check26.png"/>
						</Button>-->
						<Button ToolTip="в Excel" Click="ParceltoExcelButton_Click" Command="{Binding CreateExcelReport}">
							<Image Source="/CustomBrokerWpf;component/Images/vexcel4.png" />
						</Button>
						<Button ToolTip="Заявка на перевозку" Content="Заявка" Click="RequestExcelButton_Click"/>
						<Button ToolTip="Почта и СМС" Click="MailSMS_Click" Visibility="Visible">
							<Image Source="/CustomBrokerWpf;component/Images/bell.png"/>
						</Button>
						<Separator/>
						<Button ToolTip="Обновить данные" Command="{Binding SaveRefresh}">
							<Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
						</Button>
						<Button x:Name="ParcelSaveButton" ToolTip="Сохранить изменения в БД" Command="{Binding Save}" IsTabStop="False">
							<Image Source="/CustomBrokerWpf;component/Images/Save.png" />
						</Button>
						<Button ToolTip="Отменить несохраненные изменения" Command="{Binding Reject}" >
							<!--Click="ParcelRejectButton_Click"-->
							<Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
						</Button>
						<ToggleButton ToolTip="Изменить фильтр" x:Name="ParcelFilterButton" Click="ParcelFilterButton_Click" Visibility="Visible" IsTabStop="False">
							<Image Source="/CustomBrokerWpf;component/Images/rshester.png" />
						</ToggleButton>
						<Separator/>
						<!--<Button ToolTip="Заявка" Click="ParcelRequestItem_Click" Visibility="Collapsed">
                            <Image Source="/CustomBrokerWpf;component/Images/form_blue.png" />
                        </Button>-->
						<!--<Button ToolTip="Удалить перевозку" Click="ParcelDelButton_Click" IsTabStop="False" Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}">
                            <Image Source="/CustomBrokerWpf;component/Images/remove.png" />
                        </Button>
                        <Separator Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}"/>
                        <Button Command="Cut" ToolTip="Вырезать" IsTabStop="False">
                            <Image Source="/CustomBrokerWpf;component/Images/cut.png" />
                        </Button>
                        <Button Command="Copy" ToolTip="Копировать" IsTabStop="False">
                            <Image Source="/CustomBrokerWpf;component/Images/copy.png" />
                        </Button>
                        <Button Command="Paste" ToolTip="Вставить" IsTabStop="False" Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}">
                            <Image Source="/CustomBrokerWpf;component/Images/paste.png" />
                        </Button>
                        <Separator/>-->
						<!--<Button ToolTip="Загрузить спецификации" Click="LoadSpecification_Click" Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}">
                            <Image Source="/CustomBrokerWpf;component/Images/excel_check.png"/>
                        </Button>
                        <Button ToolTip="Шаблон" Click="MoveSpecification_Click" Visibility="Collapsed">
                            <Image Source="/CustomBrokerWpf;component/Images/check2.png"/>
                        </Button>-->
						<Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Bottom" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" >
							<Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
								<TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
							</Border>
						</Popup>
					</ToolBar>
					<ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" Padding="0" Grid.ColumnSpan="2">
						<Grid DataContext="{Binding Path=CurrentItem, Mode=OneWay}">
							<Grid.Resources>
								<Style TargetType="TextBlock">
									<Setter Property="Margin" Value="1,0"/>
									<Setter Property="VerticalAlignment" Value="Center"/>
									<Setter Property="HorizontalAlignment" Value="Left"/>
								</Style>
								<Style TargetType="TextBox">
									<Setter Property="BorderThickness" Value="0"/>
									<Setter Property="TextAlignment" Value="Left"/>
									<Setter Property="VerticalAlignment" Value="Center"/>
									<Setter Property="Margin" Value="1,0"/>
									<Style.Triggers>
										<Trigger Property="IsFocused" Value="False">
											<Setter Property="Background" Value="#eff6ff"/>
										</Trigger>
									</Style.Triggers>
								</Style>
								<Style TargetType="ComboBox">
									<Setter Property="Background" Value="#eff6ff"/>
									<Setter Property="BorderBrush" Value="{x:Null}"/>
									<Setter Property="BorderThickness" Value="0"/>
									<Setter Property="Margin" Value="2"/>
								</Style>
								<Style TargetType="Border">
									<Setter Property="Background" Value="#eff6ff"/>
									<Setter Property="BorderBrush" Value="#FFCCCCCC"/>
									<Setter Property="BorderThickness" Value="1"/>
									<Setter Property="Margin" Value="4"/>
								</Style>
							</Grid.Resources>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="280"/>
								<ColumnDefinition Width="218"/>
								<ColumnDefinition Width="350"/>
								<ColumnDefinition Width="250"/>
								<ColumnDefinition Width="250"/>
								<ColumnDefinition Width="250"/>
							</Grid.ColumnDefinitions>
							<Border>
								<Grid x:Name="WrapPanel1" IsEnabled="{Binding Path=IsEnabled}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition SharedSizeGroup="r0"/>
										<!--<RowDefinition SharedSizeGroup="r0"/>-->
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid.Resources>
										<Style TargetType="Border">
											<Setter Property="BorderBrush" Value="White"/>
											<Setter Property="Margin" Value="0"/>
										</Style>
									</Grid.Resources>
									<TextBlock Grid.Row="0" Text="Номер"/>
									<Grid Grid.Row="0" Grid.Column="1">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="40"/>
											<ColumnDefinition/>
										</Grid.ColumnDefinitions>
										<Border BorderThickness="1,0,0,0">
											<TextBox  Text="{Binding Path=ParcelNumber, Mode=TwoWay}" Margin="3,2,3,0" IsTabStop="False" TextAlignment="Center" Background="#eff6ff"  />
										</Border>
										<Border BorderThickness="1,0,0,0" Grid.Column="1">
											<TextBox Text="{Binding Path=ParcelNumberEntire, Mode=OneWay}" Margin="3,2,3,0" IsReadOnly="True" IsTabStop="False" TextAlignment="Center" Background="#eff6ff"  />
										</Border>
									</Grid>
									<!--<Border Grid.Row="1" BorderThickness="0,1,0,0">
										<TextBlock Text="Тип"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="1" BorderThickness="1,1,0,0">
										<ComboBox SelectedItem="{Binding Path=ParcelType, ValidatesOnDataErrors=True,ValidatesOnExceptions=True}" ItemsSource="{Binding Source={x:Static my:References.ParcelTypes}}" DisplayMemberPath="Name" Background="#eff6ff" BorderBrush="{x:Null}" Margin="2" />
									</Border>-->
									<Border Grid.Row="1" Grid.Column="0" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Text="Статус"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="1" BorderThickness="1,1,0,0">
										<ComboBox SelectedItem="{Binding Path=Status}" ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.States}" DisplayMemberPath="Name" Background="#eff6ff" BorderBrush="{x:Null}" Margin="2" />
									</Border>
									<Border Grid.Row="2" Grid.Column="0" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Text="Груз"/>
									</Border>
									<Border Grid.Row="2" Grid.Column="1" BorderThickness="1,1,0,0">
										<ComboBox x:Name="goodstypeComboBox" SelectedItem="{Binding Path=GoodsType}" ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.GoodsTypes}" DisplayMemberPath="Name" />
									</Border>
									<Border Grid.Row="3" Grid.Column="0" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Text="Машина"/>
									</Border>
									<Grid Grid.Row="3" Grid.Column="1">
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition/>
										</Grid.ColumnDefinitions>
										<Border Grid.Column="0" BorderThickness="1,1,0,0">
											<TextBox Text="{Binding Path=Lorry}" MaxLength="6" TextAlignment="Left" VerticalAlignment="Center" BorderThickness="0" />
										</Border>
										<Border Grid.Column="1" BorderBrush="White" BorderThickness="1,1,0,0">
											<TextBlock Text="№ отправки"/>
										</Border>
										<Border Grid.Column="2" BorderThickness="1,1,0,0">
											<TextBox Text="{Binding Path=ShipmentNumber}" MaxLength="6" TextAlignment="Center" VerticalAlignment="Center" BorderThickness="0" />
										</Border>
									</Grid>
									<Border Grid.Row="4" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Text="Декларации"/>
									</Border>
									<Border Grid.Row="4" Grid.Column="1" BorderBrush="White" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=Declaration}" MaxLength="106" Margin="3,2,3,0" TextAlignment="Left" TextWrapping="WrapWithOverflow" BorderThickness="0" Padding="2,0"/>
									</Border>
								</Grid>
							</Border>
							<Border Grid.Column="1">
								<Grid x:Name="WrapPanel2" Background="#eff6ff" IsEnabled="{Binding Path=IsEnabled}">
									<Grid.Resources>
										<Style TargetType="Border">
											<Setter Property="BorderBrush" Value="White"/>
											<Setter Property="Margin" Value="0"/>
										</Style>
									</Grid.Resources>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="0"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
									</Grid.RowDefinitions>
									<Border Grid.Row="0">
										<TextBlock Text="Отгрузка (п/ф)"/>
									</Border>
									<Border Grid.Row="0" Grid.Column="1" BorderThickness="1,0,0,0">
										<TextBox Text="{Binding Path=ShipPlanDate, StringFormat='dd.MM.yy', TargetNullValue=''}" ToolTip="Планируемая дата отгрузки" TextAlignment="Center"/>
									</Border>
									<Border Grid.Row="0" Grid.Column="2" BorderThickness="1,0,0,0">
										<TextBox Text="{Binding Path=ShipDate, StringFormat='dd.MM.yy', TargetNullValue=''}" ToolTip="Фактическая дата отгрузки" TextAlignment="Center"/>
									</Border>
									<Button Grid.Row="0" Grid.Column="3" Command="{Binding Source={StaticResource ParcelDataContext}, Path=Data.SendMail}" CommandParameter="60" Height="22" Margin="2,0" VerticalAlignment="Center">
										<Image Source="{Binding Path=ShipPlanDateMailImage,Mode=OneWay}"/>
									</Button>
									<Border Grid.Row="1" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Grid.Row="1" Text="Оформлено" ToolTip="Дата оформления"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="1" BorderBrush="White" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=Prepared, StringFormat='dd.MM.yy', TargetNullValue=''}" TextAlignment="Center" ToolTip="Дата оформления"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="2" BorderBrush="White" BorderThickness="0,1,0,0"/>
									<Button Grid.Row="1" Grid.Column="3" Command="{Binding Source={StaticResource ParcelDataContext}, Path=Data.SendMail}" CommandParameter="70" Height="22" Margin="2,0" VerticalAlignment="Center">
										<Image Source="{Binding Path=PreparedMailImage,Mode=OneWay}"/>
									</Button>
									<Border Grid.Row="2" Grid.Column="0" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Text="Ввезено" ToolTip="Дата пересечения границы"/>
									</Border>
									<Border Grid.Row="2" Grid.Column="1" BorderBrush="White" BorderThickness="1,1,0,0">
										<TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Path=CrossedBorder, StringFormat='dd.MM.yy', TargetNullValue=''}" TextAlignment="Center" ToolTip="Дата пересечения границы"/>
									</Border>
									<Border Grid.Row="2" Grid.Column="2" BorderBrush="White" BorderThickness="0,1,0,0"/>
									<Button Grid.Row="2" Grid.Column="3" Command="{Binding Source={StaticResource ParcelDataContext}, Path=Data.SendMail}" CommandParameter="80" Height="22" Margin="2,0" VerticalAlignment="Center">
										<Image Source="{Binding Path=CrossedBorderMailImage,Mode=OneWay}"/>
									</Button>
									<Border Grid.Row="3" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Text="Терминал" ToolTip="Дата въезда на таможенный терминал"/>
									</Border>
									<Border Grid.Row="3" Grid.Column="1" BorderBrush="White" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=TerminalIn, StringFormat='dd.MM.yy', TargetNullValue=''}" TextAlignment="Center" ToolTip="Дата въезда на таможенный терминал"/>
									</Border>
									<Border Grid.Row="3" Grid.Column="2" BorderBrush="White" BorderThickness="0,1,0,0"/>
									<Button Grid.Row="3" Grid.Column="3" Command="{Binding Source={StaticResource ParcelDataContext}, Path=Data.SendMail}" CommandParameter="90" Height="22" Margin="2,0" VerticalAlignment="Center">
										<Image Source="{Binding Path=TerminalInMailImage,Mode=OneWay}"/>
									</Button>
									<Border Grid.Row="4" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Grid.Row="4" Grid.Column="0" Text="Растаможено" ToolTip="Дата выезда из таможенного терминала"/>
									</Border>
									<Border Grid.Row="4" Grid.Column="1" BorderBrush="White" BorderThickness="1,1,0,0">
										<TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Path=TerminalOut, StringFormat='dd.MM.yy', TargetNullValue=''}" TextAlignment="Center" ToolTip="Дата выезда из таможенного терминала"/>
									</Border>
									<Border Grid.Row="4" Grid.Column="2" BorderBrush="White" BorderThickness="0,1,0,0"/>
									<Button Grid.Row="4" Grid.Column="3" Command="{Binding Source={StaticResource ParcelDataContext}, Path=Data.SendMail}" CommandParameter="100" Height="22" Margin="2,0" VerticalAlignment="Center">
										<Image Source="{Binding Path=TerminalOutMailImage,Mode=OneWay}"/>
									</Button>
									<Border Grid.Row="5" Grid.Column="0" BorderBrush="White" BorderThickness="0,1,0,0">
										<TextBlock Text="Выгружено" ToolTip="Дата выгрузки"/>
									</Border>
									<Border Grid.Row="5" Grid.Column="1" BorderBrush="White" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=Unloaded, StringFormat='dd.MM.yy', TargetNullValue=''}" ToolTip="Дата выгрузки" TextAlignment="Center"/>
									</Border>
									<Border Grid.Row="5" Grid.Column="2" BorderThickness="0,1,0,0"/>
									<Button Grid.Row="5" Grid.Column="3" Command="{Binding Source={StaticResource ParcelDataContext}, Path=Data.SendMail}" CommandParameter="110" Height="22" Margin="2,0" VerticalAlignment="Center">
										<Image Source="{Binding Path=UnloadedMailImage,Mode=OneWay}"/>
									</Button>
								</Grid>
							</Border>
							<Border Grid.Column="2">
								<Grid x:Name="WrapPanel3" Grid.Column="4" Background="#eff6ff" IsEnabled="{Binding Path=IsEnabled}">
									<Grid.Resources>
										<Style TargetType="Border">
											<Setter Property="BorderBrush" Value="White"/>
											<Setter Property="Margin" Value="0"/>
										</Style>
									</Grid.Resources>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="1.5*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
									</Grid.RowDefinitions>
									<TextBlock Text="Перевозчик"/>
									<Border Grid.Row="0" Grid.Column="1" BorderThickness="1,0,0,0">
										<TextBox Text="{Binding Path=Carrier}" MaxLength="100"/>
									</Border>
									<!--<TextBlock Text="контактное лицо" Margin="5,0,0,0" VerticalAlignment="Center"/>-->
									<Border Grid.Row="0" Grid.Column="2" BorderThickness="1,0,0,0">
										<TextBox Text="{Binding Path=CarrierPerson}" MaxLength="30" ToolTip="Контактное лицо"/>
									</Border>
									<!--<TextBlock Text="тел." Margin="5,0,0,0" VerticalAlignment="Center" ToolTip="Телефон контактного лица"/>-->
									<Border Grid.Row="0" Grid.Column="3" BorderThickness="1,0,0,0">
										<TextBox Text="{Binding Path=CarrierTel}" MaxLength="20" ToolTip="Телефон контактного лица"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Водитель"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=Trucker}" MaxLength="30" ToolTip="ФИО водителя" />
									</Border>
									<Border Grid.Row="1" Grid.Column="3" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=TruckerTel}" MaxLength="20" ToolTip="Телефон водителя"/>
									</Border>
									<Border Grid.Row="2" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Машина" />
									</Border>
									<Border Grid.Row="2" Grid.Column="1" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=LorryRegNum, ValidatesOnExceptions=True, NotifyOnValidationError=True}" MaxLength="20" ToolTip="Регистрационный знак(номер)"/>
									</Border>
									<Border Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=LorryVIN, ValidatesOnExceptions=True, NotifyOnValidationError=True}" MaxLength="20" ToolTip="VIN номер"/>
									</Border>
									<Border Grid.Row="3" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Прицеп"/>
									</Border>
									<Border Grid.Row="3" Grid.Column="1" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=TrailerRegNum, ValidatesOnExceptions=True, NotifyOnValidationError=True}" MaxLength="20" ToolTip="Регистрационный знак(номер)"/>
									</Border>
									<Border Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=TrailerVIN, ValidatesOnExceptions=True, NotifyOnValidationError=True}" ToolTip="VIN номер" MaxLength="20"/>
									</Border>
									<Border Grid.Row="4" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Объем"/>
									</Border>
									<Border Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3" BorderThickness="1,1,0,0">
										<TextBox x:Name="lorryvolumeTextBox" Text="{Binding Path=LorryVolume, TargetNullValue='', StringFormat=\{0:N4\}, ValidatesOnExceptions=True}" Foreground="{Binding Path=LorryVolumeForeground}" TextAlignment="Left" />
									</Border>
									<Border Grid.Row="5" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Тоннаж"/>
									</Border>
									<Border Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" BorderThickness="1,1,0,0">
										<TextBox x:Name="lorryWeightTextBox" Text="{Binding Path=LorryTonnage, TargetNullValue='', StringFormat=\{0:N4\}, ValidatesOnExceptions=True, NotifyOnValidationError=True}" Foreground="{Binding Path=LorryTonnageForeground}" TextAlignment="Left" />
									</Border>
								</Grid>
							</Border>
							<Border Grid.Column="3">
								<Grid Background="#eff6ff">
									<Grid.Resources>
										<Style TargetType="Border">
											<Setter Property="BorderBrush" Value="White"/>
											<Setter Property="Margin" Value="0"/>
										</Style>
									</Grid.Resources>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
									</Grid.RowDefinitions>
									<TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="ОБЩЕЕ" HorizontalAlignment="Center" TextAlignment="Center"/>
									<Border Grid.Row="1" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Объем / Мест"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="1" BorderThickness="1,1,0,0">
										<TextBox x:Name="volumeTextBox" Text="{Binding Total.Volume, Mode=OneWay, StringFormat=\{0:N4\}}" Foreground="{Binding Path=VolumeForeground}"  IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="1" Grid.Column="2" BorderThickness="1,1,0,0">
										<TextBox x:Name="cellNumberTextBox" Text="{Binding Path=Total.CellNumber,Mode=OneWay}" Foreground="{Binding Path=CellNumberForeground}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="2" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Вес (факт / док)"/>
									</Border>
									<Border Grid.Row="2" Grid.Column="1" BorderThickness="1,1,0,0">
										<TextBox x:Name="actualWeightTextBox" Text="{Binding Path=Total.ActualWeight, StringFormat=\{0:N4\}, Mode=OneWay}" Foreground="{Binding ActualWeightForeground, FallbackValue=Black}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="2" Grid.Column="2" BorderThickness="1,1,0,0">
										<TextBox x:Name="officialWeightTextBox" Text="{Binding Path=Total.OfficialWeight, StringFormat=\{0:N4\}, Mode=OneWay}" Foreground="{Binding Path=OfficialWeightForeground}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="3" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Вес, разница"/>
									</Border>
									<Border Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
										<TextBox x:Name="offactWeightTextBox" Text="{Binding Path=Total.DifferenceWeight, StringFormat=\{0:N4\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="4" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Стоимость"/>
									</Border>
									<Border Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
										<TextBox x:Name="goodValueTextBox" Text="{Binding Path=Total.Invoice, Mode=OneWay, StringFormat=\{0:N2\}}" Foreground="{Binding Path=InvoiceForeground}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="5" Grid.Column="0" BorderThickness="1,1,0,0">
										<TextBlock Text="Стоимость, скидка"/>
									</Border>
									<Border Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
										<TextBox x:Name="goodValueDiscountTextBox" Text="{Binding Path=Total.InvoiceDiscount, StringFormat=\{0:N2\}, Mode=OneWay}" Foreground="{Binding Path=InvoiceDiscountForeground}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="6" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Стоимость, дт"/>
									</Border>
									<Border Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding Path=DeliveryPrice, Mode=OneWay, StringFormat=\{0:N\}}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="7" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Сумма страховки"/>
									</Border>
									<Border Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
										<TextBox Text="{Binding InsurancePrice, Mode=OneWay, StringFormat=\{0:N\}}" IsReadOnly="True" IsTabStop="False" />
									</Border>
								</Grid>
							</Border>
							<Border Grid.Column="4">
								<Grid Background="#eff6ff">
									<Grid.Resources>
										<Style TargetType="Border">
											<Setter Property="BorderBrush" Value="White"/>
											<Setter Property="Margin" Value="0"/>
										</Style>
									</Grid.Resources>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
									</Grid.RowDefinitions>
									<TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="ДЕЛИВЕРИ" HorizontalAlignment="Center" TextAlignment="Center"/>
									<Border Grid.Row="1" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Объем / Мест"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="1" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="DVolumeTextBox" Text="{Binding Path=TotalDelivery.Volume, StringFormat=\{0:N4\},Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="1" Grid.Column="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="DCellNumberTextBox" Text="{Binding Path=TotalDelivery.CellNumber, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="2" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Вес (факт / док)"/>
									</Border>
									<Border Grid.Row="2" Grid.Column="1" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="DActualWeightTextBox" Text="{Binding Path=TotalDelivery.ActualWeight, StringFormat=\{0:N4\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="2" Grid.Column="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="DOfficialWeightTextBox" Text="{Binding Path=TotalDelivery.OfficialWeight, StringFormat=\{0:N4\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="3" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Вес, разница"/>
									</Border>
									<Border Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="DOffactWeightTextBox" Text="{Binding Path=TotalDelivery.DifferenceWeight, StringFormat=\{0:N4\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="4" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Стоимость"/>
									</Border>
									<Border Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="DGoodValueTextBox" Text="{Binding Path=TotalDelivery.Invoice, StringFormat=\{0:N2\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="5" Grid.Column="0" BorderThickness="1,1,0,0">
										<TextBlock Text="Стоимость, скидка"/>
									</Border>
									<Border Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="DGoodValueDiscountTextBox" Text="{Binding Path=TotalDelivery.InvoiceDiscount, StringFormat=\{0:N2\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="6" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Стоимость, дт"/>
									</Border>
									<Border Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox Text="{Binding Path=DDeliveryPrice, StringFormat=\{0:N2\}, TargetNullValue=''}" IsTabStop="False" />
									</Border>
									<Border Grid.Row="7" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Сумма страховки"/>
									</Border>
									<Border Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox Text="{Binding Path=DInsurancePrice, StringFormat=\{0:N2\}, TargetNullValue=''}" IsTabStop="False" />
									</Border>
								</Grid>
							</Border>
							<Border Grid.Column="5">
								<Grid Background="#eff6ff">
									<Grid.Resources>
										<Style TargetType="Border">
											<Setter Property="BorderBrush" Value="White"/>
											<Setter Property="Margin" Value="0"/>
										</Style>
									</Grid.Resources>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
										<RowDefinition SharedSizeGroup="r0"/>
									</Grid.RowDefinitions>
									<TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="ТРЕЙД" HorizontalAlignment="Center" TextAlignment="Center"/>
									<Border Grid.Row="1" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Grid.Row="1" Grid.Column="0" Text="Объем / Мест"/>
									</Border>
									<Border Grid.Row="1" Grid.Column="1" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="TVolumeTextBox" Text="{Binding Path=TotalTrade.Volume, StringFormat=\{0:N4\},Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="1" Grid.Column="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="TCellNumberTextBox" Text="{Binding Path=TotalTrade.CellNumber,Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="2" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Вес (факт / док)"/>
									</Border>
									<Border Grid.Row="2" Grid.Column="1" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="TActualWeightTextBox" Text="{Binding Path=TotalTrade.ActualWeight, StringFormat=\{0:N4\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="2" Grid.Column="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="TOfficialWeightTextBox" Text="{Binding Path=TotalTrade.OfficialWeight, StringFormat=\{0:N4\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="3" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Вес, разница"/>
									</Border>
									<Border Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="TOffactWeightTextBox" Text="{Binding Path=TotalTrade.DifferenceWeight, StringFormat=\{0:N4\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="4" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Стоимость"/>
									</Border>
									<Border Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="TGoodValueTextBox" Text="{Binding Path=TotalTrade.Invoice, StringFormat=\{0:N2\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="5" Grid.Column="0" BorderThickness="1,1,0,0">
										<TextBlock Text="Стоимость, скидка"/>
									</Border>
									<Border Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox x:Name="TGoodValueDiscountTextBox" Text="{Binding Path=TotalTrade.InvoiceDiscount, StringFormat=\{0:N2\}, Mode=OneWay}" IsReadOnly="True" IsTabStop="False" />
									</Border>
									<Border Grid.Row="6" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Стоимость, дт"/>
									</Border>
									<Border Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox Text="{Binding Path=TDeliveryPrice, StringFormat=\{0:N2\}, TargetNullValue=''}" />
									</Border>
									<Border Grid.Row="7" Grid.Column="0" BorderThickness="0,1,0,0">
										<TextBlock Text="Сумма страховки"/>
									</Border>
									<Border Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="1,1,0,0">
                                        <TextBox Text="{Binding Path=TInsurancePrice, StringFormat=\{0:N2\}, TargetNullValue=''}" />
									</Border>
								</Grid>
							</Border>
						</Grid>
					</ScrollViewer>
					<Grid Grid.Row="5" Grid.ColumnSpan="2">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<DataGrid x:Name="ParcelRequestDataGrid" ItemsSource="{Binding Path=CurrentItem.ParcelRequests}" CanUserAddRows="False" CanUserDeleteRows="False" RowDetailsVisibilityMode="Collapsed" AutoGenerateColumns="False" IsTabStop="False" RowHeaderWidth="15" CanUserResizeRows="False" FrozenColumnCount="1" HorizontalGridLinesBrush="RoyalBlue" VerticalGridLinesBrush="RoyalBlue" AlternatingRowBackground="WhiteSmoke"
                              SelectionChanged="ParcelRequestDataGrid_SelectionChanged" BeginningEdit="ParcelRequestDataGrid_BeginningEdit" RowEditEnding="ParcelRequestDataGrid_RowEditEnding"
                              HorizontalAlignment="Left" ColumnDisplayIndexChanged="ParcelRequestDataGrid_ColumnDisplayIndexChanged"
                              Background="#e0f7e3" MouseDoubleClick="ParcelDataGrid_MouseDoubleClick" >
							<DataGrid.RowStyle>
								<Style TargetType="{x:Type DataGridRow}">
									<Style.Triggers>
										<Trigger Property="IsSelected" Value="False">
											<Setter Property="Background" Value="#e0f7e3"/>
										</Trigger>
									</Style.Triggers>
								</Style>
							</DataGrid.RowStyle>
							<DataGrid.Columns>
                                <DataGridTextColumn Header="№" Binding="{Binding Path=Id, Converter={StaticResource keyNoDisplayNewId}}" IsReadOnly="True" ElementStyle="{StaticResource NumberCenterStyleView}" />
                                <DataGridTextColumn Header="Складской №" Binding="{Binding Path=StorePointDate, ValidatesOnExceptions=true, NotifyOnValidationError=true, TargetNullValue='', Mode=OneWay}"/>
								<DataGridTextColumn Header="Статус" Binding="{Binding Path=Status.Name}" IsReadOnly="True" SortMemberPath="Status.Id" Width="64"/>
								<DataGridTextColumn Header="Группа" Binding="{Binding Path=ParcelGroup, UpdateSourceTrigger=LostFocus, TargetNullValue='',NotifyOnValidationError=True}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}">
									<DataGridTextColumn.HeaderStyle>
										<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
											<Setter Property="ToolTip" Value="Группа загрузки (Позиция по складу)"/>
										</Style>
									</DataGridTextColumn.HeaderStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="КОН" Binding="{Binding Path=Consolidate, UpdateSourceTrigger=LostFocus, TargetNullValue='',NotifyOnValidationError=True}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}">
									<DataGridTextColumn.HeaderStyle>
										<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
											<Setter Property="ToolTip" Value="Консолидация"/>
										</Style>
									</DataGridTextColumn.HeaderStyle>
								</DataGridTextColumn>
								<DataGridTemplateColumn CanUserSort="False" SortMemberPath="Template1" Width="SizeToCells">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="18"/>
													<ColumnDefinition Width="18"/>
													<ColumnDefinition Width="18"/>
													<ColumnDefinition Width="18"/>
													<ColumnDefinition Width="18"/>
													<!--<ColumnDefinition Width="18"/>-->
												</Grid.ColumnDefinitions>
												<Button ToolTip="Каталог" Tag="{Binding}" Click="RequestFolderOpen_Click" Grid.Column="0"  Margin="2,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" BorderBrush="{x:Null}" Background="{x:Null}">
													<Image Source="Images/cat.png"/>
												</Button>
												<Image ToolTip="Группа менеджеров" Grid.Column="1" Source="{Binding Path=ManagerGroupImage}" Margin="2,0"/>
												<!--<ComboBox Grid.Column="2" SelectedIndex="{Binding Path=StateInv,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="Инвойс" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
													<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
														<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
													</ComboBoxItem>
													<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
														<Image Source="Images/inv_1.png" Height="14" Margin="0"/>
													</ComboBoxItem>
													<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
														<Image Source="/CustomBrokerWpf;component/Images/inv_2.png" Height="14" Margin="0"/>
													</ComboBoxItem>
												</ComboBox>-->
                                                <Image Grid.Column="2" ToolTip="Разбивка загружена" Source="{Binding Path=StateExcImagePath,Mode=OneWay}" Height="14"  Margin="2,0"/>
                                                <ComboBox Grid.Column="3" SelectedIndex="{Binding Path=StateDoc,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="МАРКИРОВКА" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
													<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
														<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
													</ComboBoxItem>
													<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
														<Image Source="/CustomBrokerWpf;component/Images/doc_1.png" Height="14" Margin="0"/>
													</ComboBoxItem>
													<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
														<Image Source="/CustomBrokerWpf;component/Images/doc_2.png" Height="14" Margin="0"/>
													</ComboBoxItem>
												</ComboBox>
												<Button Grid.Column="4" ToolTip="Отправка уведомления &quot;Ваша поставка готова к выдаче&quot;" Command="{Binding Path=SendMail}" CommandParameter="TakeGoods9" Margin="2,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" BorderBrush="{x:Null}" Background="{x:Null}">
													<Image Source="{Binding Path=MailStateTakeGoods9Image}"/>
												</Button>
											</Grid>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Менеджер" CanUserSort="True" SortMemberPath="Manager.NameComb" ClipboardContentBinding="{Binding Path=Manager.NameComb}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Manager.NameComb}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.Managers}"  SelectedValue="{Binding Path=Manager,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="NameComb" IsSynchronizedWithCurrentItem="False"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Поставщик" CanUserSort="True" SortMemberPath="Agent.Name" ClipboardContentBinding="{Binding Path=Agent.Name}" Width="150">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Agent.Name, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox SelectedValue="{Binding Path=AgentId, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=Agent.Name}"
                                                  ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.Agents}" SelectedValuePath="Id" DisplayMemberPath="Name">
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Торговые марки" Width="150" CanUserSort="True" SortMemberPath="BrandNames" ClipboardContentBinding="{Binding Path=BrandNames}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=BrandNames, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="{Binding Path=BrandNames}"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox Text="{Binding Path=BrandNames, Mode=OneWay, TargetNullValue=''}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=BrandNames}"
                                                  ItemsSource="{Binding Path=Brands}" DisplayMemberPath="Brand.Name">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding Path=Selected, Mode=TwoWay}" IsThreeState="False" Margin="0" HorizontalContentAlignment="Stretch" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox}, Path=ActualWidth}" VerticalContentAlignment="Center" Style="{StaticResource ErrorStyle}">
                                                            <TextBlock Text="{Binding Brand.Name}" VerticalAlignment="Center"/>
                                                        </CheckBox>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Клиент" CanUserSort="True" SortMemberPath="Customer.Name" ClipboardContentBinding="{Binding Path=Customer.Name}" Width="150">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Customer.Name, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox SelectedValue="{Binding Path=CustomerId, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=Customer.Name}"
                                                  ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.Customers}" SelectedValuePath="Id" DisplayMemberPath="Name">
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
                                            <Setter Property="FontWeight" Value="{Binding Customer.NameFontWeight}"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Юр. лица" Width="150" SortMemberPath="CustomerLegalsNames">
									<DataGridTemplateColumn.CellStyle>
										<Style TargetType="DataGridCell">
											<Setter Property="ToolTip" Value="{Binding Path=CustomerLegalsNames}"/>
                                            <Setter Property="FontWeight" Value="{Binding CustomerLegalsNamesFontWeight}"/>
											<Style.Triggers>
												<MultiDataTrigger >
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding Path=InvoiceDiscountFill, TargetNullValue=''}" Value="False" />
														<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Background" Value="#f7e0e0"/>
												</MultiDataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTemplateColumn.CellStyle>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Path=CustomerLegalsNames, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridTemplateColumn.CellEditingTemplate>
										<DataTemplate>
											<ComboBox Text="{Binding Path=CustomerLegalsNames, Mode=OneWay, TargetNullValue=''}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=CustomerLegalsNames}"
                                                  ItemsSource="{Binding Path=CustomerLegals}" DisplayMemberPath="CustomerLegal.Name">
												<ComboBox.ItemTemplate>
													<DataTemplate>
														<CheckBox IsChecked="{Binding Path=Selected, Mode=TwoWay}" IsThreeState="False" Margin="0" HorizontalContentAlignment="Stretch" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox}, Path=ActualWidth}" FocusManager.IsFocusScope="True">
															<TextBlock Text="{Binding CustomerLegal.Name}"/>
														</CheckBox>
													</DataTemplate>
												</ComboBox.ItemTemplate>
											</ComboBox>
										</DataTemplate>
									</DataGridTemplateColumn.CellEditingTemplate>
								</DataGridTemplateColumn>
								<DataGridComboBoxColumn Header="Импортер" SelectedItemBinding="{Binding Path=Importer}" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"
                                    ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.Importers}" DisplayMemberPath="Name" SortMemberPath="Importer.Name"  Width="100">
									<DataGridComboBoxColumn.CellStyle>
										<Style TargetType="DataGridCell">
											<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
										</Style>
									</DataGridComboBoxColumn.CellStyle>
								</DataGridComboBoxColumn>
								<DataGridTextColumn Header="Вес Д" Binding="{Binding Path=OfficialWeight, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Width="50" />
								<DataGridTextColumn Header="Вес Ф" Binding="{Binding Path=ActualWeight, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Width="50" />
								<DataGridTextColumn Header="Объем" Binding="{Binding Path=Volume, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" />
								<DataGridTextColumn Header="Мест" Binding="{Binding Path=CellNumber, TargetNullValue='', NotifyOnValidationError=True, ValidatesOnExceptions=true}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}" />
								<DataGridTextColumn Header="Инвойс" Binding="{Binding Path=Invoice, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" Width="80" />
								<DataGridTextColumn Header="Со скидкой" Binding="{Binding Path=InvoiceDiscount, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" Width="80" />
								<DataGridComboBoxColumn Header="Услуга" SelectedValueBinding="{Binding Path=ServiceType, TargetNullValue=''}" ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.ServiceTypes}" SelectedValuePath="Name" DisplayMemberPath="Name"/>
								<DataGridComboBoxColumn Header="Тип груза" SelectedValueBinding="{Binding Path=Cargo}" ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.LoadDescriptions}" SelectedValuePath="Name" DisplayMemberPath="Name" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" />
								<DataGridTextColumn Header="Счет" Binding="{Binding Path=TotalPay, StringFormat=\{0:N0\}, TargetNullValue=''}" IsReadOnly="True" Width="80">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="{x:Type DataGridCell}">
											<Style.Triggers>
												<Trigger Property="IsSelected" Value="False">
													<Setter Property="Background" Value="#f7ede0" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
									<DataGridTextColumn.HeaderStyle>
										<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
											<Setter Property="ContentTemplate">
												<Setter.Value>
													<DataTemplate>
														<StackPanel Orientation="Horizontal">
															<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
														</StackPanel>
													</DataTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</DataGridTextColumn.HeaderStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Доход" Binding="{Binding Path=IncomePay, StringFormat=\{0:N0\}, TargetNullValue=''}" IsReadOnly="True" Width="80">
									<DataGridTextColumn.HeaderStyle>
										<Style TargetType="{x:Type DataGridColumnHeader}">
											<Setter Property="ContentTemplate">
												<Setter.Value>
													<DataTemplate>
														<StackPanel Orientation="Horizontal">
															<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
														</StackPanel>
													</DataTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</DataGridTextColumn.HeaderStyle>
									<DataGridTextColumn.CellStyle>
										<Style TargetType="{x:Type DataGridCell}">
											<Style.Triggers>
												<Trigger Property="IsSelected" Value="False">
													<Setter Property="Background" Value="#f7ede0" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
									<DataGridTextColumn.ElementStyle>
										<Style TargetType="TextBlock">
											<Style.Triggers>
												<DataTrigger Binding="{Binding Path=IncomePayPoor,Mode=OneWay}" Value="True">
													<Setter Property="Foreground" Value="Red"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.ElementStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="СЧ, %" Binding="{Binding TotalPayInvoicePer, Mode=OneWay, NotifyOnValidationError=True, StringFormat=\{0:P\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" IsReadOnly="True" Width="80">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="{x:Type DataGridCell}">
											<Style.Triggers>
												<Trigger Property="IsSelected" Value="False">
													<Setter Property="Background" Value="#f7ede0" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
									<DataGridTextColumn.HeaderStyle>
										<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
											<Setter Property="ContentTemplate">
												<Setter.Value>
													<DataTemplate>
														<StackPanel Orientation="Horizontal">
															<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
														</StackPanel>
													</DataTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</DataGridTextColumn.HeaderStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="ТП.%" Binding="{Binding Path=CustomsPayInvoice, Mode=OneWay, StringFormat=\{0:P\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" IsReadOnly="True" Width="80">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="{x:Type DataGridCell}">
											<Style.Triggers>
												<Trigger Property="IsSelected" Value="False">
													<Setter Property="Background" Value="#f7e0e0" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
									<DataGridTextColumn.HeaderStyle>
										<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
											<Setter Property="ContentTemplate">
												<Setter.Value>
													<DataTemplate>
														<StackPanel Orientation="Horizontal">
															<TextBlock Text="{Binding}" Background="#f7e0e0" FontWeight="Bold" Padding="4,0" />
														</StackPanel>
													</DataTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</DataGridTextColumn.HeaderStyle>
								</DataGridTextColumn>
                                <DataGridTextColumn Header="Доставка" Binding="{Binding Path=CustomerLegalsSelected/CustomerLegal.DeliveryType_.Name, TargetNullValue='', NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource StyleTextBlockAlignmentCenter}" Selector.IsSelected="True" Width="80" />
                                <DataGridTextColumn Header="Примечания" Binding="{Binding Path=Notes,Mode=OneWay}" IsReadOnly="True" Width="SizeToHeader"/>
								<DataGridTemplateColumn>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Button Click="HistoryOpen_Click" Tag="{Binding}" Height="15" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="{x:Null}" >
												<Image Source="/CustomBrokerWpf;component/Images/his.png" />
											</Button>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
							</DataGrid.Columns>
						</DataGrid>
						<StackPanel Orientation="Horizontal" Grid.Row="1" Margin="4">
							<TextBlock Text="Кол-во мест" Grid.Row="1" Grid.Column="7" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <TextBox x:Name="cellNumberFreeTextBox" Text="{Binding CurrentItem.ParcelRequestsTotalSelected.CellNumber, Mode=OneWay, StringFormat=\{0:N0\}}" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
							<TextBlock Text="Вес по док, кг" Grid.Row="2" Grid.Column="5" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <TextBox x:Name="OfficialWeightTextBox" Text="{Binding Path=CurrentItem.ParcelRequestsTotalSelected.OfficialWeight,Mode=OneWay, StringFormat=\{0:N4\}}" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
							<TextBlock Text="Объем, м3" Grid.Row="1" Grid.Column="3" Margin="5,0,0,0" VerticalAlignment="Center"/>
                            <TextBox x:Name="VolumeTextBox" Text="{Binding Path=CurrentItem.ParcelRequestsTotalSelected.Volume,Mode=OneWay, StringFormat=\{0:N4\}}" Grid.Row="1" Grid.Column="4" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
							<TextBlock Text="Вес факт, кг" Grid.Row="1" Grid.Column="5" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <TextBox x:Name="actualWeightFreeTextBox" Text="{Binding Path=CurrentItem.ParcelRequestsTotalSelected.ActualWeight,Mode=OneWay, StringFormat=\{0:N4\}}" Grid.Row="1" Grid.Column="6" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
							<TextBlock Text="факт-док" Grid.Row="3" Grid.Column="5" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <TextBox x:Name="offactWeightFreeTextBox" Text="{Binding Path=CurrentItem.ParcelRequestsTotalSelected.DifferenceWeight,Mode=OneWay, StringFormat=\{0:N4\}}" Grid.Row="3" Grid.Column="6" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
							<TextBlock Text="стоимость" Grid.Row="3" Grid.Column="5" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <TextBox x:Name="goodValueFreeTextBox" Text="{Binding Path=CurrentItem.ParcelRequestsTotalSelected.InvoiceDiscount,Mode=OneWay, StringFormat=\{0:N2\}}" Grid.Row="3" Grid.Column="6" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
						</StackPanel>
					</Grid>
					<GridSplitter Grid.Row="6" Grid.ColumnSpan="2" Height="6" VerticalAlignment="Center" ResizeDirection="Rows" HorizontalAlignment="Stretch" Margin="3,13" IsTabStop="False" />
					<StackPanel x:Name="StackPanel1" Grid.Row="6" Grid.ColumnSpan="2" Margin="0,2" Orientation="Horizontal" Visibility="{Binding Source={StaticResource keyVisibilityManagers}, Path=Visibility}" IsEnabled="{Binding Path=IsEnabled}">
						<Button x:Name="RequestUpButton" ToolTip="Поставить заявку в загрузку" IsEnabled="{Binding Path=CurrentItem.Status.Id, Converter={StaticResource keyFreeRequestEnableConverter}}" Visibility="{Binding Path=CurrentItem.RequestAreaVisibility,Mode=OneWay}" Margin="20,1" Click="RequestAddButton_Click" IsTabStop="False">
							<Image Source="/CustomBrokerWpf;component/Images/verh.png" />
						</Button>
						<Button x:Name="RequestUpDown" ToolTip="Снять заявку с загрузки" IsEnabled="{Binding Path=CurrentItem.Status.Id, Converter={StaticResource keyFreeRequestEnableConverter}}" Visibility="{Binding Path=CurrentItem.RequestAreaVisibility,Mode=OneWay}" Margin="20,1" Click="RequestOutButton_Click" IsTabStop="False">
							<Image Source="/CustomBrokerWpf;component/Images/niz.png" />
						</Button>
						<Button ToolTip="Папка документов" Command="{Binding Path=SpecFolderOpen}" Visibility="{Binding Path=CurrentItem.SpecificationAreaVisibility,Mode=OneWay}" Margin="20,1,4,1" IsTabStop="False" Background="Transparent">
							<Image Source="/CustomBrokerWpf;component/Images/catalog.png" />
						</Button>
						<Button ToolTip="Добавить спецификацию (разбивку)" Command="{Binding Path=SpecAdd}" CommandParameter="{Binding ElementName=ParcelRequestDataGrid, Path=SelectedItem}" Visibility="{Binding Path=CurrentItem.SpecificationAreaVisibility,Mode=OneWay}" Margin="4,1" IsTabStop="False" Background="Transparent">
							<Image Source="/CustomBrokerWpf;component/Images/rPlus_01-66-512.png" />
						</Button>
                        <Button ToolTip="Удалить спецификацию (разбивку)" Command="{Binding Path=SpecDel}" CommandParameter="{Binding ElementName=SpecificationDataGrid, Path=SelectedItems}" Visibility="{Binding Path=CurrentItem.SpecificationAreaVisibility,Mode=OneWay}" Margin="4,1" IsTabStop="False" Background="Transparent">
							<Image Source="/CustomBrokerWpf;component/Images/remove.png" />
						</Button>
                        <Button ToolTip="Подготовить реализацию для 1С" Command="{Binding Path=Selling1C}" CommandParameter="{Binding ElementName=SpecificationDataGrid, Path=SelectedItems}" Visibility="{Binding Path=CurrentItem.SpecificationAreaVisibility,Mode=OneWay}" Margin="4,1" IsTabStop="False" Background="Transparent">
                            <Image Source="/CustomBrokerWpf;component/Images/1C.jpg" />
                        </Button>
                    </StackPanel>
					<DataGrid x:Name="NoParcelRequestDataGrid" ItemsSource="{Binding Path=CurrentItem.Requests}" Grid.Row="7" Grid.ColumnSpan="2" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" SelectionChanged="NoParcelRequestDataGrid_SelectionChanged" IsTabStop="False" FrozenColumnCount="1" RowHeaderWidth="15" CanUserResizeRows="False" HorizontalGridLinesBrush="RoyalBlue" VerticalGridLinesBrush="RoyalBlue" AlternatingRowBackground="WhiteSmoke"
						Visibility="{Binding Path=CurrentItem.RequestAreaVisibility,Mode=OneWay}" IsEnabled="{Binding IsEnabled}"
                              HorizontalAlignment="Left"  ColumnDisplayIndexChanged="NoParcelRequestDataGrid_ColumnDisplayIndexChanged"
                              Background="#e0f7e3" MouseDoubleClick="ParcelDataGrid_MouseDoubleClick"
                              BeginningEdit="NoParcelRequestDataGrid_BeginningEdit" RowEditEnding="NoParcelRequestDataGrid_RowEditEnding" 
                  >
						<DataGrid.RowStyle>
							<Style TargetType="{x:Type DataGridRow}">
								<Style.Triggers>
									<Trigger Property="IsSelected" Value="False">
										<Setter Property="Background" Value="#e0f7e3"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</DataGrid.RowStyle>
						<DataGrid.Columns>
                            <DataGridTextColumn Header="№" Binding="{Binding Path=Id, Converter={StaticResource keyNoDisplayNewId}}" IsReadOnly="True" ElementStyle="{StaticResource NumberCenterStyleView}" />
                            <DataGridTextColumn Header="Складской №" Binding="{Binding Path=StorePointDate, ValidatesOnExceptions=true, NotifyOnValidationError=true, TargetNullValue='', Mode=OneWay}">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
                                                    <Condition Binding="{Binding ShipmentDelay}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="#f7ede0"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
                                                    <Condition Binding="{Binding ShipmentDelay}" Value="2"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="#f7e0e0"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
							<DataGridComboBoxColumn Header="Статус" SelectedItemBinding="{Binding Path=Status}" ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.RequestStates}" DisplayMemberPath="Name" SortMemberPath="Status.Id" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Width="64"/>
							<DataGridTextColumn Header="Группа" Binding="{Binding Path=ParcelGroup, UpdateSourceTrigger=LostFocus, TargetNullValue='',NotifyOnValidationError=True}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Группа загрузки (Позиция по складу)"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="КОН" Binding="{Binding Path=Consolidate, UpdateSourceTrigger=LostFocus, TargetNullValue='',NotifyOnValidationError=True}" IsReadOnly="True" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Консолидация"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn CanUserSort="False" SortMemberPath="Template1" Width="SizeToCells">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid HorizontalAlignment="Center">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>
												<ColumnDefinition Width="18"/>
												<!--<ColumnDefinition Width="18"/>-->
												<!--<ColumnDefinition Width="18"/>-->
											</Grid.ColumnDefinitions>
											<!--<Button ToolTip="Каталог" Tag="{Binding}" Click="RequestFolderOpen_Click" Grid.Column="0"  Margin="2,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" BorderBrush="{x:Null}" Background="{x:Null}">
												<Image Source="Images/cat.png"/>
											</Button>-->
											<Image ToolTip="Группа менеджеров" Grid.Column="0" Source="{Binding Path=ManagerGroupImage}" Margin="2,0"/>
											<!--<ComboBox Grid.Column="2" SelectedIndex="{Binding Path=StateInv,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="Инвойс" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="Images/inv_1.png" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/inv_2.png" Height="14" Margin="0"/>
												</ComboBoxItem>
											</ComboBox>-->
                                            <Image Grid.Column="1" ToolTip="Разбивка загружена" Source="{Binding Path=StateExcImagePath,Mode=OneWay}" Height="14"  Margin="2,0"/>
                                            <ComboBox Grid.Column="2" SelectedIndex="{Binding Path=StateDoc,TargetNullValue=0,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ToolTip="МАРКИРОВКА" Style="{StaticResource ComboBoxButtonLess}" Height="14" Margin="2,0" Padding="0">
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/plus.gif" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/doc_1.png" Height="14" Margin="0"/>
												</ComboBoxItem>
												<ComboBoxItem Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
													<Image Source="/CustomBrokerWpf;component/Images/doc_2.png" Height="14" Margin="0"/>
												</ComboBoxItem>
											</ComboBox>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Менеджер" CanUserSort="True" SortMemberPath="Manager.NameComb" ClipboardContentBinding="{Binding Path=Manager.NameComb}" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Manager.NameComb}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.Managers}"  SelectedValue="{Binding Path=Manager,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="NameComb" IsSynchronizedWithCurrentItem="False"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Поставщик" CanUserSort="True" SortMemberPath="Agent.Name" ClipboardContentBinding="{Binding Path=Agent.Name}" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Agent.Name, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding Path=AgentId, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=Agent.Name}"
                                                  ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.Agents}" SelectedValuePath="Id" DisplayMemberPath="Name">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Торговые марки" Width="150" CanUserSort="True" SortMemberPath="BrandNames" ClipboardContentBinding="{Binding Path=BrandNames}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=BrandNames, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=BrandNames}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Text="{Binding Path=BrandNames, Mode=OneWay, TargetNullValue=''}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=BrandNames}"
                                                  ItemsSource="{Binding Path=Brands}" DisplayMemberPath="Brand.Name">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding Path=Selected, Mode=TwoWay}" IsThreeState="False" Margin="0" HorizontalContentAlignment="Stretch" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox}, Path=ActualWidth}" VerticalContentAlignment="Center" Style="{StaticResource ErrorStyle}">
                                                        <TextBlock Text="{Binding Brand.Name}" VerticalAlignment="Center"/>
                                                    </CheckBox>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Клиент" CanUserSort="True" SortMemberPath="Customer.Name" ClipboardContentBinding="{Binding Path=Customer.Name}" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Customer.Name, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding Path=CustomerId, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource keyNotNullConverter}}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=Customer.Name}"
                                                  ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.Customers}" SelectedValuePath="Id" DisplayMemberPath="Name">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
                                        <Setter Property="FontWeight" Value="{Binding Customer.NameFontWeight}"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Юр. лица" Width="150" SortMemberPath="CustomerLegalsNames">
								<DataGridTemplateColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding Path=CustomerLegalsNames}"/>
                                        <Setter Property="FontWeight" Value="{Binding CustomerLegalsNamesFontWeight}"/>
										<Style.Triggers>
											<MultiDataTrigger >
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding Path=InvoiceDiscountFill, TargetNullValue=''}" Value="False" />
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Background" Value="#f7e0e0"/>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTemplateColumn.CellStyle>
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Path=CustomerLegalsNames, Mode=OneWay, TargetNullValue=''}" Margin="2"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
								<DataGridTemplateColumn.CellEditingTemplate>
									<DataTemplate>
										<ComboBox Text="{Binding Path=CustomerLegalsNames, Mode=OneWay, TargetNullValue=''}" IsEditable="True" IsReadOnly="True" IsSynchronizedWithCurrentItem="False" StaysOpenOnEdit="True" IsDropDownOpen="True" ToolTip="{Binding Path=CustomerLegalsNames}"
                                                  ItemsSource="{Binding Path=CustomerLegals}" DisplayMemberPath="CustomerLegal.Name">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<CheckBox IsChecked="{Binding Path=Selected, Mode=TwoWay}" IsThreeState="False" Margin="0" HorizontalContentAlignment="Stretch" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox}, Path=ActualWidth}">
														<TextBlock Text="{Binding CustomerLegal.Name}"/>
													</CheckBox>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellEditingTemplate>
							</DataGridTemplateColumn>
							<DataGridComboBoxColumn Header="Импортер" SelectedItemBinding="{Binding Path=Importer}" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"
                                    ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.Importers}" DisplayMemberPath="Name" SortMemberPath="Importer.Name"  Width="100">
								<DataGridComboBoxColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
									</Style>
								</DataGridComboBoxColumn.CellStyle>
							</DataGridComboBoxColumn>
							<DataGridTextColumn Header="Вес Д" Binding="{Binding Path=OfficialWeight, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Width="50" />
							<DataGridTextColumn Header="Вес Ф" Binding="{Binding Path=ActualWeight, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Width="50"/>
							<DataGridTextColumn Header="Объем" Binding="{Binding Path=Volume, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" />
							<DataGridTextColumn Header="Мест" Binding="{Binding Path=CellNumber, TargetNullValue='', NotifyOnValidationError=True, ValidatesOnExceptions=true}" ElementStyle="{StaticResource NumberCenterStyleView}" EditingElementStyle="{StaticResource NumberCenterStyleViewEdit}" />
							<DataGridTextColumn Header="Инвойс" Binding="{Binding Path=Invoice, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" Width="80" />
							<DataGridTextColumn Header="Со скидкой" Binding="{Binding Path=InvoiceDiscount, StringFormat=\{0:N\}, TargetNullValue='', NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" Selector.IsSelected="True" Width="80" />
							<DataGridComboBoxColumn Header="Услуга" SelectedValueBinding="{Binding Path=ServiceType, TargetNullValue=''}" ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.ServiceTypes}" SelectedValuePath="Name" DisplayMemberPath="Name"/>
							<DataGridComboBoxColumn Header="Тип груза" SelectedValueBinding="{Binding Path=Cargo}" ItemsSource="{Binding Source={StaticResource ParcelDataContext}, Path=Data.LoadDescriptions}" SelectedValuePath="Name" DisplayMemberPath="Name" ClipboardContentBinding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" />
							<DataGridTextColumn Header="Счет" Binding="{Binding Path=TotalPay, StringFormat=\{0:N0\}, TargetNullValue=''}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Доход" Binding="{Binding Path=IncomePay, StringFormat=\{0:N0\}, TargetNullValue=''}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="TextBlock">
										<Style.Triggers>
											<DataTrigger Binding="{Binding Path=IncomePayPoor,Mode=OneWay}" Value="True">
												<Setter Property="Foreground" Value="Red"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="СЧ, %" Binding="{Binding TotalPayInvoicePer, Mode=OneWay, NotifyOnValidationError=True, StringFormat=\{0:P\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" EditingElementStyle="{StaticResource MoneyStyleEdit}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7ede0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7ede0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="ТП.%" Binding="{Binding Path=CustomsPayInvoice, Mode=OneWay, StringFormat=\{0:P\}, TargetNullValue=''}" ElementStyle="{StaticResource MoneyStyleView}" IsReadOnly="True" Width="80">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="False">
												<Setter Property="Background" Value="#f7e0e0" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ContentTemplate">
											<Setter.Value>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding}" Background="#f7e0e0" FontWeight="Bold" Padding="4,0" />
													</StackPanel>
												</DataTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
                            <DataGridTextColumn Header="Доставка" Binding="{Binding Path=CustomerLegalsSelected/CustomerLegal.DeliveryType_.Name, TargetNullValue='', NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource StyleTextBlockAlignmentCenter}" Selector.IsSelected="True" Width="80" />
                            <DataGridTextColumn Header="Примечания" Binding="{Binding Path=Notes,Mode=OneWay}" IsReadOnly="True" Width="SizeToHeader"/>
							<DataGridTemplateColumn>
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button Click="HistoryOpen_Click" Tag="{Binding}" Height="15" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="{x:Null}" >
											<Image Source="/CustomBrokerWpf;component/Images/his.png" />
										</Button>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
						</DataGrid.Columns>
					</DataGrid>
					<DataGrid x:Name="SpecificationDataGrid" ItemsSource="{Binding Path=CurrentItem.Specifications}" Grid.Row="7" Grid.ColumnSpan="2" Visibility="{Binding Path=CurrentItem.SpecificationAreaVisibility,Mode=OneWay}" IsEnabled="{Binding IsEnabled}" Background="#e0f7e3"
                              CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" IsTabStop="False" FrozenColumnCount="1" RowHeaderWidth="15" CanUserResizeRows="False" HorizontalGridLinesBrush="RoyalBlue" VerticalGridLinesBrush="RoyalBlue" AlternatingRowBackground="WhiteSmoke"
                               MouseDoubleClick="SpecificationDataGrid_MouseDoubleClick"
                              >
						<DataGrid.RowStyle>
							<Style TargetType="{x:Type DataGridRow}">
								<Style.Triggers>
									<Trigger Property="IsSelected" Value="False">
										<Setter Property="Background" Value="#e0f7e3"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</DataGrid.RowStyle>
						<DataGrid.Columns>
							<DataGridTemplateColumn CanUserReorder="False" Header="Файл">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button Command="{Binding FileOpen}" ToolTip="{Binding Path=FilePath}" Height="16" Padding="0" Margin="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
											<Image Source="/CustomBrokerWpf;component/Images/vexcel4.png" />
										</Button>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="№" Binding="{Binding Path=CFPR, TargetNullValue='', Mode=OneWay}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Консолидация \ Группа загрузки \ Заявка"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn Header="№ ТД" SortMemberPath="Declaration.Number" ClipboardContentBinding="{Binding Path=Declaration.Number}">
								<DataGridTemplateColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Номер таможенной декларации"/>
									</Style>
								</DataGridTemplateColumn.HeaderStyle>
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<TextBlock Text="{Binding Path=Declaration.Number, TargetNullValue=''}" Margin="2,0"/>
											<Button Content="" ToolTip="Загрузка таможенной декларации" Command="{Binding Source={StaticResource ParcelDataContext}, Path=Data.TDLoad}" CommandParameter="{Binding}" Grid.Column="1" FontFamily="Segoe UI Symbol" Foreground="Green" Background="#f7e0e0"/>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
								<DataGridTemplateColumn.CellEditingTemplate>
									<DataTemplate>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<TextBox Text="{Binding Path=Declaration.Number, TargetNullValue=''}" Margin="2,0"/>
											<Button Content="" ToolTip="Загрузка таможенной декларации" Command="{Binding Source={StaticResource ParcelDataContext}, Path=Data.TDLoad}" CommandParameter="{Binding}" Grid.Column="1" FontFamily="Segoe UI Symbol" Foreground="Green" Background="#f7e0e0"/>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellEditingTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="Импортер" Binding="{Binding Path=Importer.Name, TargetNullValue='', Mode=OneWay}"/>
							<DataGridTextColumn Header="Поставщик" Binding="{Binding Path=Agent.Name, TargetNullValue='', Mode=OneWay}" Width="200">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding Path=Agent.Name}"/>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Клиенты" Binding="{Binding Path= Customers, TargetNullValue='', Mode=OneWay}" Width="200">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding Path= Customers}"/>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Юр лица" Binding="{Binding Path= CustomerLegals, TargetNullValue='', Mode=OneWay}" Width="300">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="ToolTip" Value="{Binding Path= CustomerLegals}"/>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Инвойс" Binding="{Binding Path= Invoice, StringFormat=\{0:N2\}, TargetNullValue='', Mode=OneWay}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Сумма Инвойс со скидкой заявок"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Style.Triggers>
											<MultiDataTrigger >
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding Path=TotalSumNotEquals, TargetNullValue=''}" Value="True" />
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Background" Value="#f7e0e0"/>
												<Setter Property="ToolTip" Value="Сумма Инвойс со скидкой заявок, Сумма таможенной декларации и Сумма по графе Цена разбивок не совпадают !"/>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Сумма ТД" Binding="{Binding Path=Declaration.TotalSum, StringFormat=\{0:N2\}, TargetNullValue='', Mode=OneWay}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Сумма таможенной декларации"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Style.Triggers>
											<MultiDataTrigger >
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding Path=TDSumNotEquals, TargetNullValue=''}" Value="True" />
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Background" Value="#f7e0e0"/>
												<Setter Property="ToolTip" Value="Сумма Инвойс со скидкой заявок, Сумма таможенной декларации и Сумма по графе Цена разбивок не совпадают !"/>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Стоимость" Binding="{Binding Path= Cost, StringFormat=\{0:N2\}, TargetNullValue='', Mode=OneWay}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Сумма по графе Цена разбивок"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Style.Triggers>
											<MultiDataTrigger >
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding Path=DetailSumNotEquals, TargetNullValue=''}" Value="True" />
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Background" Value="#f7e0e0"/>
												<Setter Property="ToolTip" Value="Сумма Инвойс со скидкой заявок, Сумма таможенной декларации и Сумма по графе Цена разбивок не совпадают !"/>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Не разнесено" Binding="{Binding Path=FondSum, Mode=OneWay, StringFormat=\{0:N0\}}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Сумма разбивок не разнесенная по юр лицам"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Разница" Binding="{Binding Path=ClientSumDiff, Mode=OneWay, StringFormat=\{0:N0\}}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}">
								<DataGridTextColumn.HeaderStyle>
									<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
										<Setter Property="ToolTip" Value="Разница сумм в разбивках и в заявках по юр лицам"/>
									</Style>
								</DataGridTextColumn.HeaderStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="Кол-во" Binding="{Binding Path=Amount, Mode=OneWay, StringFormat=\{0:N0\}}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}"/>
							<DataGridTextColumn Header="Нетто" Binding="{Binding Path=NetWeight, StringFormat=\{0:N2\}, TargetNullValue='', Mode=OneWay}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}"/>
							<DataGridTextColumn Header="Брутто" Binding="{Binding Path=GrossWeight, StringFormat=\{0:N2\}, TargetNullValue='', Mode=OneWay}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}"/>
							<DataGridTextColumn Header="Кол-во мест" Binding="{Binding Path= CellNumber, TargetNullValue='', Mode=OneWay}" ElementStyle="{StaticResource StyleTextBlockAlignmentRight}"/>
						</DataGrid.Columns>
					</DataGrid>
					<StackPanel DataContext="{Binding Path=CurrentItem}" Orientation="Horizontal" Grid.Row="8" Margin="4" Visibility="{Binding Path=RequestAreaVisibility,Mode=OneWay}" Grid.ColumnSpan="2">
						<TextBlock Text="Кол-во мест" Grid.Row="1" Grid.Column="7" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
						<TextBox Text="{Binding Path=CellNumberFree,Mode=OneWay}" Grid.Row="1" Grid.Column="8" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
						<TextBlock Text="Вес по док, кг" Grid.Row="2" Grid.Column="5" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
						<TextBox Text="{Binding Path=OfficialWeightFree, StringFormat=\{0:N4\},Mode=OneWay}" Grid.Row="2" Grid.Column="6" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
						<TextBlock Text="Объем, м3" Grid.Row="1" Grid.Column="3" Margin="5,0,0,0" VerticalAlignment="Center"/>
						<TextBox Text="{Binding Path=VolumeFree, StringFormat=\{0:N4\},Mode=OneWay}" Grid.Row="1" Grid.Column="4" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
						<TextBlock Text="Вес факт, кг" Grid.Row="1" Grid.Column="5" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
						<TextBox Text="{Binding Path=ActualWeightFree, StringFormat=\{0:N4\},Mode=OneWay}" Grid.Row="1" Grid.Column="6" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
						<TextBlock Text="факт-док" Grid.Row="3" Grid.Column="5" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
						<TextBox Text="{Binding Path=DifferenceWeightFree, StringFormat=\{0:N4\},Mode=OneWay}" Grid.Row="3" Grid.Column="6" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
						<TextBlock Text="стоимость" Grid.Row="3" Grid.Column="5" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
						<TextBox Text="{Binding Path=InvoiceDiscountFree, StringFormat=\{0:N2\},Mode=OneWay}" Grid.Row="3" Grid.Column="6" Margin="3,2,3,0" TextAlignment="Right" IsReadOnly="True" IsTabStop="False" />
					</StackPanel>
                </Grid>
			</TabItem>
            <TabItem Header="Склад Москва" x:Name="WarehouseRUTabItem">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ToolBar Grid.ColumnSpan="2" Height="32">
                        <!--<Button ToolTip="Экспорт в Excel" Command="{Binding Path=ExcelExport}" CommandParameter="{Binding ElementName=MainDataGrid, Path=.}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/excel_export.png" />
							</Button>-->
                        <Button ToolTip="Копировать" Command="Copy" IsTabStop="False">
                            <Image Source="/CustomBrokerWpf;component/Images/copy.png" />
                        </Button>
                        <Separator Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}"/>
                        <Button Command="{Binding Path=Delete}" CommandParameter="{Binding ElementName=SKU, Path=SelectedItems}" ToolTip="Удалить" IsTabStop="False" Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}">
                            <Image Source="/CustomBrokerWpf;component/Images/remove.png" />
                        </Button>
                        <Separator/>
                        <Button Command="{Binding Path=FilterClear}" ToolTip="Очистить фильтры" IsTabStop="False">
                            <Image Source="/CustomBrokerWpf;component/Images/funnel_delete.png" />
                        </Button>
                        <Separator/>
                        <Button Command="{Binding Path=SaveRefresh}" ToolTip="Обновить информацию" IsTabStop="False">
                            <Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
                        </Button>
                        <Button ToolTip="Сохранить изменения в БД" Command="{Binding Path=Save}" IsTabStop="False" Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}">
                            <Image Source="/CustomBrokerWpf;component/Images/save.png" />
                        </Button>
                        <Button Command="{Binding Path=Reject}" ToolTip="Отменить несохраненные изменения" IsTabStop="False" Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}">
                            <Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
                        </Button>
                        <Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Center" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" Grid.ColumnSpan="2" >
                            <Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
                                <TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
                            </Border>
                        </Popup>
                    </ToolBar>
                    <my:SKUUI x:Name="SKU" DataContext="{Binding}" Grid.Row="1"/>
                    <StatusBar Grid.Row="9" Background="Transparent" Grid.ColumnSpan="2" HorizontalContentAlignment="Right">
                        <StatusBarItem HorizontalAlignment="Right">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Path=IsFiltered}" />
                                <TextBlock Text="{Binding Path=Items.Count}" Grid.Column="1" HorizontalAlignment="Right"/>
                            </Grid>
                        </StatusBarItem>
                    </StatusBar>
                </Grid>
            </TabItem>
            <TabItem Header="Реестр заявок на оплату Арт Деливери" GotFocus="TabItem1_GotFocus" Background="#f7e0e0">
                <account:PaymentRegisterUC x:Name="PaymentDeliveryGrid"/>
            </TabItem>
            <TabItem Header="Реестр заявок на оплату Арт Трейд" GotFocus="TabItem2_GotFocus" Background="#f7e0e0">
                <account:PaymentRegisterUC x:Name="PaymentTradeGrid"/>
            </TabItem>
            <TabItem Header="Реестр ГТД Арт Деливери" GotFocus="TabItem3_GotFocus" Background="#f7e0e0">
                <account:GTDRegisterUC x:Name="GTDDeliveryGrid"/>
            </TabItem>
            <TabItem Header="Реестр ГТД Арт Трейд" GotFocus="TabItem4_GotFocus" Background="#f7e0e0">
                <account:GTDRegisterUC x:Name="GTDTradeGrid"/>
            </TabItem>
            <TabItem Header="Реестр ТЭО ГТД Арт Деливери" GotFocus="TabItem5_GotFocus" Background="#f7e0e0">
                <account:GTDRegisterUC x:Name="TEODeliveryGrid"/>
            </TabItem>
            <TabItem Header="Реестр ТЭО ГТД Арт Трейд" GotFocus="TabItem6_GotFocus" Background="#f7e0e0">
                <account:GTDRegisterUC x:Name="TEOTradeGrid"/>
            </TabItem>
            <TabItem Header="События" x:Name="EventLogTab" Visibility="{Binding Source={StaticResource keyVisibilityTopManagers}, Path=Visibility, Mode=OneTime}">
				<Grid x:Name="EventLogGrid">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<ToolBarTray Orientation="Vertical" AllowDrop="False" Background="#FFF0F0F0" Margin="0,0,0,3" >
						<ToolBar Width="32" Height="200" Background="#FFF0F0F0">
							<ToggleButton ToolTip="Изменить фильтр" x:Name="FilterButton" Click="FilterButton_Click" Visibility="Visible" IsTabStop="False" IsEnabled="True">
								<Image Source="/CustomBrokerWpf;component/Images/funnel.png" />
							</ToggleButton>
							<Button ToolTip="Обновить данные" Command="{Binding Path=Refresh}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
							</Button>
							<Separator Visibility="Visible"/>
							<Button x:Name="SaveButton" ToolTip="Сохранить изменения в БД" Command="{Binding Path=Save}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/Save.png" />
							</Button>
							<Button ToolTip="Отменить несохраненные изменения" Command="{Binding Path=Reject}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
							</Button>
							<Button ToolTip="Отметить выделенные" Command="{Binding Path=Hide}" CommandParameter="{Binding ElementName=EventLogDataGrid, Path=SelectedItems}" IsTabStop="False">
								<Image Source="/CustomBrokerWpf;component/Images/check2.png" />
							</Button>
						</ToolBar>
					</ToolBarTray>
					<DataGrid x:Name="EventLogDataGrid" Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Path=EventLogs}" AutoGenerateColumns="False" RowDetailsVisibilityMode="Collapsed" SelectionUnit="FullRow" RowHeaderWidth="20" ClipboardCopyMode="IncludeHeader" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" Margin="3">
						<DataGrid.Columns>
							<DataGridCheckBoxColumn Header="Скрыть" Binding="{Binding Path=Inform}" IsThreeState="False"/>
							<DataGridTextColumn Header="Когда" Binding="{Binding Path=When, Mode=OneWay, StringFormat=\{0:g\}}"/>
							<DataGridTextColumn Header="Кто" Binding="{Binding Path=Who, Mode=OneWay}"/>
							<DataGridTextColumn Header="Описание" Binding="{Binding Path=Description, Mode=OneWay}" Width="*"/>
							<DataGridTextColumn Header="Скрыл" Binding="{Binding Path=UpdateWho, Mode=OneWay}"/>
							<DataGridTextColumn Header="Скрыто" Binding="{Binding Path=UpdateWhen, Mode=OneWay, StringFormat=\{0:g\}}"/>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</TabItem>
		</TabControl>
	</Grid>
</Window>
