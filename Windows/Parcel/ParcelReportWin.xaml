<Window x:Class="KirillPolyanskiy.CustomBrokerWpf.ParcelReportWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:my="clr-namespace:KirillPolyanskiy.CustomBrokerWpf"
        Title="Отчет по отправкам" Name="winParcelReport" Loaded="Window_Loaded" Closing="Window_Closing" Language="ru-RU" Height="667" Width="1200" WindowState="Maximized" Icon="Images/cashier.png">
    <Grid x:Name="mainGrid" SizeChanged="MainGrid_SizeChanged" Margin="1,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ToolBar Height="32" >
            <!--<my:MainMenuUC VerticalAlignment="Center"/>
            <Separator Visibility="Visible"/>-->
            <ToggleButton ToolTip="Изменить фильтр" x:Name="FilterButton" Click="FilterButton_Click" Visibility="Visible" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/funnel.png" />
            </ToggleButton>
            <Separator/>
            <Button ToolTip="Обновить данные" Click="RefreshButton_Click" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
            </Button>
            <Separator/>
            <Button Command="Copy" ToolTip="Копировать" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/copy.png" />
            </Button>
            <Separator/>
            <Button ToolTip="Подготовить отчет" Command="{Binding Path=GetReportData}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/gears_run.png" />
            </Button>
            <Button ToolTip="Отобразить все столбцы" Command="{Binding Path=VisibleAll}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/column.png" />
            </Button>
            <Button ToolTip="Добавить столбец" Command="{Binding Path=AddColumn}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/column_add_after.png" />
            </Button>
            <Button ToolTip="Сохранить текущий отчет как отчет по умолчанию для открытия окна"  Command="{Binding Path=SaveDefault}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/Save.png" />
            </Button>
            <Button ToolTip="Загрузить настройки по умолчанию" Command="{Binding Path=LoadDefault}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/table_sql_check.png" />
            </Button>
            <Separator/>
            <ComboBox ItemsSource="{Binding Path=SavedGroups}" DisplayMemberPath="Name" Text="{Binding Path=SavedGroupName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" IsReadOnly="False" IsSynchronizedWithCurrentItem="True" MinWidth="30"/>
            <Button ToolTip="Загрузить сохраненный отчет" Command="{Binding Path=LoadSavedGroups}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/table_sql_run.png" />
            </Button>
            <Button ToolTip="Заменить сохраненный отчет текущим" Command="{Binding Path=SaveSavedGroups}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/save_as_green.png" />
            </Button>
            <Button ToolTip="Установить выбранный сохраненный отчет как отчет по умолчанию для открытия окна" Command="{Binding Path=DefaultSavedGroups}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/save_as.png" />
            </Button>
            <Button ToolTip="Удалить сохраненный отчет" Command="{Binding Path=DeleteSavedGroups}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/table_sql_delete.png" />
            </Button>
            <Separator Visibility="Visible"/>
            <Button ToolTip="Анализ в Excel" Click="toExcelButton_Click" Visibility="Visible" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/excel_icon4.png" />
            </Button>
            <Separator Visibility="Visible"/>
            <StackPanel x:Name="StackPanelChart" Orientation="Horizontal" Margin="0" Visibility="Collapsed" >
                <Button IsTabStop="False" BorderThickness="1,1,0,1">
                    <Button.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}"/>
                    </Button.BorderBrush>
                    <Image Source="/CustomBrokerWpf;component/Images/column-chart.png" />
                </Button>
                <ToggleButton x:Name="ButtonChart" IsThreeState="False" Click="ToggleButton_Click" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,1,0" BorderThickness="0,1,1,1" Checked="ButtonChart_Checked" MouseDown="ButtonChart_MouseDown" MouseLeftButtonDown="ButtonChart_MouseLeftButtonDown" PreviewMouseLeftButtonDown="ButtonChart_PreviewMouseLeftButtonDown" 
                              IsChecked="{Binding ElementName=PopupChart, Path=IsOpen, Mode=OneWay}">
                    <ToggleButton.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}"/>
                    </ToggleButton.BorderBrush>
                    <ToggleButton.Content>
                        <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" >
                            <Path.Fill>
                                <SolidColorBrush Color="#FF444444"/>
                            </Path.Fill>
                        </Path>
                    </ToggleButton.Content>
                </ToggleButton>
                <Popup x:Name="PopupChart" PlacementTarget="{Binding ElementName=StackPanelChart}" Placement="Bottom"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide" StaysOpen="False"  Closed="PopupChart_Closed">
                    <ListBox SelectionChanged="ListBox_SelectionChanged" Margin="0" SelectedIndex="0">
                        <ListBoxItem Padding="0">
                            <Image Source="/CustomBrokerWpf;component/Images/column-chart.png"  Width="{Binding ElementName=StackPanelChart, Path=ActualWidth}"/>
                        </ListBoxItem>
                        <ListBoxItem Padding="0">
                            <Image Source="/CustomBrokerWpf;component/Images/pie-chart.png" Width="{Binding ElementName=StackPanelChart, Path=ActualWidth}" />
                        </ListBoxItem>
                        <ListBoxItem Padding="0">
                            <Image Source="/CustomBrokerWpf;component/Images/chart.png" Width="{Binding ElementName=StackPanelChart, Path=ActualWidth}" />
                        </ListBoxItem>
                        <ListBoxItem Padding="0">
                            <Image Source="/CustomBrokerWpf;component/Images/line-chart.png" Width="{Binding ElementName=StackPanelChart, Path=ActualWidth}" />
                        </ListBoxItem>
                    </ListBox>
                </Popup>
            </StackPanel>
            <ComboBox x:Name="SelectChartComboBox" ToolTip="Выбор типа диаграммы" SelectedIndex="{Binding Path=ChartType}" VerticalAlignment="Stretch" HorizontalAlignment="Left" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <ComboBoxItem Padding="1" Height="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=ActualHeight}">
                    <Image Source="/CustomBrokerWpf;component/Images/column-chart.png" />
                </ComboBoxItem>
                <ComboBoxItem Padding="1" Height="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=ActualHeight}">
                    <Image Source="/CustomBrokerWpf;component/Images/pie-chart.png"  />
                </ComboBoxItem>
                <ComboBoxItem Padding="1" Height="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=ActualHeight}">
                    <Image Source="/CustomBrokerWpf;component/Images/chart.png"  />
                </ComboBoxItem>
                <ComboBoxItem Padding="1" Height="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=ActualHeight}">
                    <Image Source="/CustomBrokerWpf;component/Images/line-chart.png"  />
                </ComboBoxItem>
            </ComboBox>
            <Button ToolTip="Построить диаграмму" Command="{Binding Path=OpenChart}" Focusable="False" IsTabStop="False" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=ToolBar}, Path=Height}">
                <Image Source="/CustomBrokerWpf;component/Images/gears_run.png" />
            </Button>
            <Separator/>
            <Button x:Name="thisCloseButton" Content="Закрыть" Click="thisCloseButton_Click" IsTabStop="False"/>
            <Popup Name="popInf" StaysOpen="False" Placement="Bottom" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False">
                <Border BorderBrush="Beige" BorderThickness="2" Background="WhiteSmoke" CornerRadius="7">
                    <TextBlock Name="PopupText" Margin="2"  FontStyle="Italic" Foreground="Teal" />
                </Border>
            </Popup>
        </ToolBar>
        <DataGrid Grid.Row="1" x:Name="mainDataGrid" CanUserReorderColumns="True" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionUnit="CellOrRowHeader" RowDetailsVisibilityMode="Collapsed" RowHeaderWidth="15" CanUserResizeRows="False" HorizontalGridLinesBrush="RoyalBlue" VerticalGridLinesBrush="RoyalBlue"
                      IsReadOnly="True" IsTextSearchEnabled="True" ClipboardCopyMode="IncludeHeader" ColumnWidth="SizeToCells"
                      SelectionChanged="transactionDataGrid_SelectionChanged" Sorting="DataGrid_Sorting" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" SizeChanged="MainDataGrid_SizeChanged">
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="{Binding Path=rowbackground,Mode=OneWay}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="ContextMenu" Value="{StaticResource DataGridCellContextMenu}"/>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn CanUserSort="True" SortMemberPath="colorMark" Visibility="Collapsed">
                    <DataGridTemplateColumn.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Rectangle Fill="Green" Grid.Row="0" Width="6" Height="6" />
                            <Rectangle Fill="Red" Grid.Column="1" Width="6" Height="6" />
                            <Rectangle Fill="Blue" Grid.Row="1" Width="6" Height="6" />
                            <Rectangle Fill="Yellow" Grid.Row="1" Grid.Column="1" Width="6" Height="6" />
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Rectangle Fill="{Binding Path=[colorMark].Value}" RadiusX="2" RadiusY="2" Width="15" Height="15" Margin="1" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <ScrollViewer DockPanel.Dock="Top" Grid.Row="2" x:Name="totalScrollViewer" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" ScrollChanged="mainDataGrid_ScrollChanged">
            <Border Grid.Row="1" Margin="15,0,0,4" BorderBrush="RoyalBlue" BorderThickness="0.5,2,0.5,1" HorizontalAlignment="Left" >
                <Grid x:Name="totalGrid">
                    <Grid.ColumnDefinitions/>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="TextBox">
                            <Setter Property="BorderBrush" Value="RoyalBlue"/>
                            <Setter Property="BorderThickness" Value="0.5,1,0.5,1"/>
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Padding" Value="2"/>
                            <Style.Triggers>
                                <Trigger Property="Grid.Row" Value="0">
                                    <Setter Property="Background" Value="#e0f7e3"/>
                                </Trigger>
                                <Trigger Property="Grid.Row" Value="1">
                                    <Setter Property="Background" Value="#f7ede0"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                </Grid>
            </Border>
        </ScrollViewer>
    </Grid>
</Window>
