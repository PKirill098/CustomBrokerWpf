<Window x:Class="KirillPolyanskiy.CustomBrokerWpf.BrandWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:local="clr-namespace:KirillPolyanskiy.CustomBrokerWpf"
        xmlns:lib="clr-namespace:KirillPolyanskiy.DataModelClassLibrary;assembly=DataModelClassLibrary"
        xmlns:libui="clr-namespace:KirillPolyanskiy.WpfControlLibrary;assembly=WpfControlLibrary"
        Title="Торговые марки" x:Name="itemBrandWin" Height="300" Width="700"  Loaded="Window_Loaded" Closing="Window_Closing" Icon="/CustomBrokerWpf;component/Images/factory.png">
    <Grid>
        <Grid.Resources>
            <lib:BindingProxy x:Key="DataContext" Data="{Binding}"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ToolBar>
            <Button Command="Delete" ToolTip="Удалить" IsTabStop="False" Margin="5,0">
                <Image Source="/CustomBrokerWpf;component/Images/remove.png" />
            </Button>
            <Separator/>
            <Button Command="{Binding Path=SaveRefresh}" ToolTip="Обновить информацию" Margin="5,0">
                <Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
            </Button>
            <Button ToolTip="Сохранить изменения в БД" Command="{Binding Path=Save}" Margin="5,0">
                <Image Source="/CustomBrokerWpf;component/Images/save.png" />
            </Button>
            <Button Command="{Binding Path=Reject}" ToolTip="Отменить несохраненные изменения" Margin="5,0">
                <Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
            </Button>
            <Separator/>
            <Button Content="Закрыть" Click="CloseButton_Click" Margin="5,0"/>
            <Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Center" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" Grid.ColumnSpan="2" >
                <Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
                    <TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
                </Border>
            </Popup>
        </ToolBar>
        <DataGrid Name="MainDataGrid" ItemsSource="{Binding Items}" Grid.Row="1" AutoGenerateColumns="False" EnableRowVirtualization="True" VerticalAlignment="Top">
            <DataGrid.CommandBindings>
                <CommandBinding Command="Delete" CanExecute="CommandBindingDel_CanExecute" Executed="CommandBindingDel_Executed" />
            </DataGrid.CommandBindings>
            <DataGrid.Resources>
                <libui:CheckListBoxPopup x:Key="BrandFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.BrandFilter}" MinWidth="50" MaxHeight="{x:Static local:References.WorkAreaHight}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
                <libui:CheckListBoxPopup x:Key="ProducerFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.ProducerFilter}" MinWidth="50" MaxHeight="{x:Static local:References.WorkAreaHight}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
                <libui:CheckListBoxPopup x:Key="HomelandFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.HomelandFilter}" MinWidth="50" MaxHeight="{x:Static local:References.WorkAreaHight}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
                <libui:NumberFilterPopup x:Key="SizePlusFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.SizePlusFilter}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=Name}" Header="Наименование" Width="*" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.BrandFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="BrandFilterPopup_Open"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=Producer}" Header="Производитель" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.ProducerFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="ProducerFilterPopup_Open"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Родина бренда" CanUserSort="True" SortMemberPath="Homeland.Name" ClipboardContentBinding="{Binding Path=Homeland.Name}"  Width="SizeToHeader">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.HomelandFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="HomelandFilterPopup_Open"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Homeland.Name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.Countries}"  SelectedItem="{Binding Path=Homeland,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="False"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Path=SizePlus}" Header="Размер+" Width="SizeToHeader">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.SizePlusFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="SizePlusFilterPopup_Open"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
