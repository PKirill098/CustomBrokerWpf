<Window x:Class="KirillPolyanskiy.CustomBrokerWpf.Windows.Specification.ColorWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KirillPolyanskiy.CustomBrokerWpf"
        xmlns:lib="clr-namespace:KirillPolyanskiy.DataModelClassLibrary;assembly=DataModelClassLibrary"
        xmlns:libui="clr-namespace:KirillPolyanskiy.WpfControlLibrary;assembly=WpfControlLibrary"
        mc:Ignorable="d"
        Title="Цвет" Name="winColor" Loaded="Window_Loaded" Closing="Window_Closing" Language="ru-RU" Height="450" Width="800" FontSize="11" Icon="/CustomBrokerWpf;component/Images/colors.png">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <lib:BindingProxy x:Key="WinDataContext" Data="{Binding}"/>
        </Grid.Resources>
        <ToolBar Height="30">
            <Button ToolTip="Выгрузить в Excel" Command="{Binding Path=ExcelExport}" CommandParameter="{Binding ElementName=MainDataGrid}" IsTabStop="False" Visibility="Collapsed">
                <Image Source="/CustomBrokerWpf;component/Images/excel_export.png" />
            </Button>
            <Separator Visibility="Collapsed"/>
            <Button Command="{Binding Path=FilterClear}" ToolTip="Очистить фильтры" IsTabStop="False">
                <Image Source="/CustomBrokerWpf;component/Images/funnel_delete.png" />
            </Button>
            <Separator/>
            <Button ToolTip="Копировать" Command="Copy" IsTabStop="False">
                <Image Source="/CustomBrokerWpf;component/Images/copy.png" />
            </Button>
            <Separator />
            <Button Command="{Binding Path=Delete}" CommandParameter="{Binding ElementName=MainDataGrid, Path=SelectedItems,Mode=OneWay}" ToolTip="Удалить" IsTabStop="False" >
                <Image Source="/CustomBrokerWpf;component/Images/remove.png" />
            </Button>
            <Separator/>
            <Button Command="{Binding Path=SaveRefresh}" ToolTip="Обновить информацию">
                <Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
            </Button>
            <Button ToolTip="Сохранить изменения в БД" Command="{Binding Path=Save}" IsTabStop="False" Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}">
                <Image Source="/CustomBrokerWpf;component/Images/save.png" />
            </Button>
            <Button Command="{Binding Path=Reject}" ToolTip="Отменить несохраненные изменения" IsTabStop="False" Visibility="{Binding Path=VisibilityEdit, Mode=OneTime}">
                <Image Source="/CustomBrokerWpf;component/Images/rRemove-512.png" />
            </Button>
            <Separator/>
            <Button Content="Закрыть" Click="CloseButton_Click"/>
            <Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Bottom" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" >
                <Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
                    <TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
                </Border>
            </Popup>
        </ToolBar>
        <DataGrid x:Name="MainDataGrid" ItemsSource="{Binding Path=Items}" Grid.Row="1"
                  AutoGenerateColumns="False" EnableRowVirtualization="True" RowDetailsVisibilityMode="Collapsed" SelectionUnit="FullRow" HorizontalGridLinesBrush="RoyalBlue" VerticalGridLinesBrush="RoyalBlue" AlternatingRowBackground="WhiteSmoke" AlternationCount="2"
                  HorizontalScrollBarVisibility="Visible">
            <DataGrid.Resources>
                <libui:CheckListBoxPopup x:Key="BrandFilterPopup" DataContext="{Binding Source={StaticResource WinDataContext}, Path=Data.BrandFilter}" MinWidth="50" MaxHeight="{x:Static local:References.WorkAreaHight}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
                <libui:CheckListBoxPopup x:Key="ProducerFilterPopup" DataContext="{Binding Source={StaticResource WinDataContext}, Path=Data.ProducerFilter}" MinWidth="50" MaxHeight="{x:Static local:References.WorkAreaHight}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Производитель" Binding="{Binding Path=Producer, TargetNullValue=''}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource WinDataContext}, Path=Data.ProducerFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="ProducerFilterPopup_Open"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Торговая марка" Binding="{Binding Path=Brand, TargetNullValue=''}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource WinDataContext}, Path=Data.BrandFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="BrandFilterPopup_Open"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Цвет код" Binding="{Binding Path=ColorCode, TargetNullValue=''}" />
                <DataGridTextColumn Header="Цвет наименование" Binding="{Binding Path=ColorName, TargetNullValue=''}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
