<Window x:Class="KirillPolyanskiy.CustomBrokerWpf.ClientNewWin"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lib="clr-namespace:KirillPolyanskiy.DataModelClassLibrary;assembly=DataModelClassLibrary"
        xmlns:libui="clr-namespace:KirillPolyanskiy.WpfControlLibrary;assembly=WpfControlLibrary"
        xmlns:local="clr-namespace:KirillPolyanskiy.CustomBrokerWpf"
        mc:Ignorable="d"
        Title="Клиенты" Name="winClientNew" Loaded="Window_Loaded" Closing="Window_Closing" Height="600" Width="800" Language="ru-RU" FontSize="11">
    <Grid>
        <Grid.Resources>
            <lib:BindingProxy x:Key="DataContext" Data="{Binding}"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ToolBar Height="32">
			<Button ToolTip="в Excel" Command="{Binding CreateExcelReport}" Visibility="{Binding Source={StaticResource keyVisibilityTopManagers},Path=Visibility}">
				<Image Source="/CustomBrokerWpf;component/Images/excel_export.png" />
			</Button>
			<Separator Visibility="{Binding Source={StaticResource keyVisibilityTopManagers},Path=Visibility}"/>
			<Button x:Name="AddButton" ToolTip="Добавить клиента" Click="AddButton_Click">
                <Image Source="/CustomBrokerWpf;component/Images/rPlus_01-66-512.png" />
            </Button>
            <!--<Button ToolTip="Удалить клиента" Command="{Binding Delete}">
                <Image Source="/CustomBrokerWpf;component/Images/remove.png" />
            </Button>-->
            <Separator/>
            <Button Command="{Binding Path=SaveRefresh}" ToolTip="Обновить информацию">
                <Image Source="/CustomBrokerWpf;component/Images/r2Refresh-512.png" />
            </Button>
            <Separator/>
            <TextBox Text="{Binding Path=OverallFilter, UpdateSourceTrigger=PropertyChanged}" Width="200" ToolTip="Условие фильтрации для Наименование, Юр лицо, ИНН, Контакты, Адреса, Псевдонимы"/>
            <Button Command="{Binding Path=FilterClearNew}" ToolTip="Очистить фильтры">
                <Image Source="/CustomBrokerWpf;component/Images/funnel_new.png" />
            </Button>
            <ToggleButton ToolTip="Изменить фильтр" x:Name="FilterButton" Click="FilterButton_Click" Margin="0">
                <Image Source="/CustomBrokerWpf;component/Images/rshester.png" />
            </ToggleButton>
            <Separator/>
            <Button Content="Закрыть" Click="CloseButton_Click"/>
            <Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Center" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" Grid.ColumnSpan="2" >
                <Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
                    <TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
                </Border>
            </Popup>
        </ToolBar>
        <DataGrid x:Name="MainDataGrid" Grid.Row="1" ItemsSource="{Binding Items}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="True"
                  EnableRowVirtualization="True" VirtualizingStackPanel.VirtualizationMode="Recycling" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" CanUserResizeRows="False" MouseDoubleClick="MainDataGrid_MouseDoubleClick">
            <DataGrid.Resources>
                <libui:CheckListBoxPopup x:Key="CustomerFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.CustomerFillFilter}" MinWidth="50" MaxHeight="{x:Static local:References.WorkAreaHight}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
                <libui:CheckListBoxPopup x:Key="LegalFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.LegalFilter}" MinWidth="50" MaxHeight="{x:Static local:References.WorkAreaHight}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
                <libui:CheckListBoxPopup x:Key="INNFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.INNFilter}" MinWidth="50" MaxHeight="{x:Static local:References.WorkAreaHight}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
                <libui:NumberFilterPopup x:Key="ParcelCountFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.ParcelCountFilter}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
                <libui:DateFilterPopup x:Key="ParcelLastDateFilterPopup" DataContext="{Binding Source={StaticResource DataContext}, Path=Data.ParcelLastDateFilter}" Placement="Right" VerticalOffset="0" HorizontalOffset="4" PopupAnimation="Fade"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Наименование" Binding="{Binding Path=Name, TargetNullValue='', Mode=TwoWay}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.CustomerFillFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="CustomerFilterPopup_Open"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}"/>
                            <Setter Property="FontWeight" Value="{Binding NameFontWeight}"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Юридическое лицо" Width="*">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.LegalFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="LegalFilterPopup_Open"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DataGrid ItemsSource="{Binding Path=Legals}" HeadersVisibility="None" AutoGenerateColumns="False" CanUserAddRows="False" Padding="0" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled"
                                      Margin="0,-1,0,-2" BorderThickness="0,1" BorderBrush="RoyalBlue" HorizontalGridLinesBrush="RoyalBlue" GridLinesVisibility="Horizontal" Background="Transparent">
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ContextMenu" Value="{StaticResource DataGridCellContextMenu}"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                        <Setter Property="Margin" Value="0,0"/>
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyleDefault}">
                                        <Setter Property="Margin" Value="0,0,0,0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="BorderBrush" Value="RoyalBlue"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Path=Name, Mode=OneWay}" IsReadOnly="True" Width="*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="ИНН" Width="100">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.INNFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseRightButtonUp" Handler="INNFilterPopup_Open"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DataGrid ItemsSource="{Binding Path=Legals}" HeadersVisibility="None" AutoGenerateColumns="False" CanUserAddRows="False" Padding="0" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled"
                                      Margin="0,-1,0,-2" BorderThickness="0,1" BorderBrush="RoyalBlue" HorizontalGridLinesBrush="RoyalBlue" GridLinesVisibility="Horizontal" Background="Transparent">
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ContextMenu" Value="{StaticResource DataGridCellContextMenu}"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyleDefault}">
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="BorderBrush" Value="RoyalBlue"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Path=INN, Mode=OneWay}" ElementStyle="{StaticResource StyleTextBlockAlignmentCenter}" IsReadOnly="False" Width="*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Кол-во отправок" Binding="{Binding Path=ParcelCount, TargetNullValue='', Mode=OneWay}" Width="40" IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.ParcelCountFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="Количество отправок"/>
                            <EventSetter Event="MouseRightButtonUp" Handler="ParcelCountFilterPopup_Open"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource StyleTextBlockAlignmentCenter}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Последняя отправка" Binding="{Binding ParcelLastDate, Mode=OneWay, StringFormat=\{0:d\}}" Width="60" IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/CustomBrokerWpf;component/Images/funnel.png" Height="10" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding Source={StaticResource DataContext}, Path=Data.ParcelLastDateFilter.IconVisibile, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding}" FontWeight="Bold"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="Дата последней отправки"/>
                            <EventSetter Event="MouseRightButtonUp" Handler="ParcelLastDateFilterPopup_Open"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource StyleTextBlockAlignmentCenter}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <StatusBar Grid.Row="2" Background="#FFF0F0F0">
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding Path=Items.Count}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
