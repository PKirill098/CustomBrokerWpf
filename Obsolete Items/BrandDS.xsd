<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BrandDS" targetNamespace="http://tempuri.org/CustomBrokerDataSet.xsd" xmlns:mstns="http://tempuri.org/CustomBrokerDataSet.xsd" xmlns="http://tempuri.org/CustomBrokerDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CustomBrokerConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CustomBrokerConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.KirillPolyanskiy.CustomBrokerWpf.Properties.Settings.GlobalReference.Default.CustomBrokerConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableBrandAdapter" GeneratorDataComponentClassName="TableBrandAdapter" Name="tableBrand" UserDataComponentName="TableBrandAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.Brand_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Brand_tb] WHERE (([brandID] = @Original_brandID) AND ([brandName] = @Original_brandName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_brandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="brandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_brandName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="brandName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Brand_tb] ([brandName]) VALUES (@brandName);
SELECT brandID, brandName FROM Brand_tb WHERE (brandID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@brandName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="brandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT brandID, brandName FROM dbo.Brand_tb</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Brand_tb] SET [brandName] = @brandName WHERE (([brandID] = @Original_brandID) AND ([brandName] = @Original_brandName));
SELECT brandID, brandName FROM Brand_tb WHERE (brandID = @brandID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@brandName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="brandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_brandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="brandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_brandName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="brandName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="brandID" ColumnName="brandID" DataSourceName="CustomBroker.dbo.Brand_tb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@brandID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="brandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="brandID" DataSetColumn="brandID" />
              <Mapping SourceColumn="brandName" DataSetColumn="brandName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ContactPointTypeAdapter" GeneratorDataComponentClassName="ContactPointTypeAdapter" Name="ContactPointTypeTb" UserDataComponentName="ContactPointTypeAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.ContactPointType_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ContactPointType_tb] WHERE (([pointName] = @Original_pointName) AND ([rowId] = @Original_rowId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_pointName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rowId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rowId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ContactPointType_tb] ([pointName]) VALUES (@pointName);
SELECT pointName, rowId FROM ContactPointType_tb WHERE (pointName = @pointName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@pointName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        pointName, rowId
FROM            ContactPointType_tb ORDER BY pointName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>ContactPointTypeUpd_sp</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@newPointName" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="pointName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rowId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="rowId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="pointName" DataSetColumn="pointName" />
              <Mapping SourceColumn="rowId" DataSetColumn="rowId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BrandDS" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BrandDS" msprop:Generator_UserDSName="BrandDS">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="tableBrand" msprop:Generator_TableClassName="tableBrandDataTable" msprop:Generator_TableVarName="tabletableBrand" msprop:Generator_TablePropName="tableBrand" msprop:Generator_RowDeletingName="tableBrandRowDeleting" msprop:Generator_UserTableName="tableBrand" msprop:Generator_RowChangingName="tableBrandRowChanging" msprop:Generator_RowEvHandlerName="tableBrandRowChangeEventHandler" msprop:Generator_RowDeletedName="tableBrandRowDeleted" msprop:Generator_RowEvArgName="tableBrandRowChangeEvent" msprop:Generator_RowChangedName="tableBrandRowChanged" msprop:Generator_RowClassName="tableBrandRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="brandID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnbrandID" msprop:Generator_ColumnPropNameInRow="brandID" msprop:Generator_ColumnPropNameInTable="brandIDColumn" msprop:Generator_UserColumnName="brandID" type="xs:int" />
              <xs:element name="brandName" msprop:Generator_ColumnVarNameInTable="columnbrandName" msprop:Generator_ColumnPropNameInRow="brandName" msprop:Generator_ColumnPropNameInTable="brandNameColumn" msprop:Generator_UserColumnName="brandName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ContactPointTypeTb" msprop:Generator_TableClassName="ContactPointTypeTbDataTable" msprop:Generator_TableVarName="tableContactPointTypeTb" msprop:Generator_TablePropName="ContactPointTypeTb" msprop:Generator_RowDeletingName="ContactPointTypeTbRowDeleting" msprop:Generator_UserTableName="ContactPointTypeTb" msprop:Generator_RowChangingName="ContactPointTypeTbRowChanging" msprop:Generator_RowEvHandlerName="ContactPointTypeTbRowChangeEventHandler" msprop:Generator_RowDeletedName="ContactPointTypeTbRowDeleted" msprop:Generator_RowEvArgName="ContactPointTypeTbRowChangeEvent" msprop:Generator_RowChangedName="ContactPointTypeTbRowChanged" msprop:Generator_RowClassName="ContactPointTypeTbRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="pointName" msprop:Generator_ColumnVarNameInTable="columnpointName" msprop:Generator_ColumnPropNameInRow="pointName" msprop:Generator_ColumnPropNameInTable="pointNameColumn" msprop:Generator_UserColumnName="pointName" default="">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="rowId" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnrowId" msprop:Generator_ColumnPropNameInRow="rowId" msprop:Generator_ColumnPropNameInTable="rowIdColumn" msprop:Generator_UserColumnName="rowId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableBrand" />
      <xs:field xpath="mstns:brandID" />
    </xs:unique>
    <xs:unique name="ContactPointTypeTb_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ContactPointTypeTb" />
      <xs:field xpath="mstns:pointName" />
    </xs:unique>
  </xs:element>
</xs:schema>