<Window x:Class="KirillPolyanskiy.CustomBrokerWpf.MappingWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:component="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:local="clr-namespace:KirillPolyanskiy.CustomBrokerWpf"
        mc:Ignorable="d"
        Title="Товар" Name="winMapping" Height="250" Width="800">
    <Grid Grid.IsSharedSizeScope="True">
        <Grid.Resources>
            <CollectionViewSource x:Key="keyGenders" Source="{Binding Path=Genders}">
                <CollectionViewSource.SortDescriptions>
                    <component:SortDescription PropertyName="Name" Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ToolBar Height="30">
            <Button Command="{Binding Path=Delete}" ToolTip="Удалить" IsTabStop="False" Visibility="Visible">
                <Image Source="Images/remove.png" />
            </Button>
            <Separator/>
            <Button Command="{Binding Path=Save}" ToolTip="Сохранить изменения">
                <Image Source="Images/Save.png" />
            </Button>
            <Button Command="{Binding Path=Reject}" ToolTip="Отменить несохраненные изменения" >
                <Image Source="Images/rRemove-512.png" />
            </Button>
            <Separator/>
            <Button Content="Закрыть" Click="CloseButton_Click"/>
            <Popup IsOpen="{Binding Path=PopupIsOpen}" StaysOpen="False" Placement="Bottom" PopupAnimation="Fade" AllowsTransparency="True" Visibility="Collapsed" IsHitTestVisible="False" >
                <Border BorderBrush="Beige" BorderThickness="2" Background="{Binding Path=PopupBackground}" CornerRadius="7">
                    <TextBlock Text="{Binding Path=PopupText}" Margin="2"  FontStyle="Italic" Foreground="Teal" />
                </Border>
            </Popup>
        </ToolBar>
        <Grid Grid.Row="1" DataContext="{Binding Path=VModel}" Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Header"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Товар" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,0,0"/>
            <TextBox Grid.Column="1" Text="{Binding Path=Goods,NotifyOnValidationError=True,ValidatesOnExceptions=True,ValidatesOnDataErrors=True}" Style="{StaticResource ErrorStyle}" MaxLength="50" TextAlignment="Left" Margin="6,6,4,6" FontWeight="Normal" MinWidth="100"/>
            <TextBlock Text="Группа ТН ВЭД" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,0,0"/>
            <TextBox Grid.Column="3" Text="{Binding Path=TNVEDGroup,NotifyOnValidationError=True,ValidatesOnExceptions=True,ValidatesOnDataErrors=True}" Style="{StaticResource ErrorStyle}" MaxLength="4" TextAlignment="Left" Margin="6,6,4,6" FontWeight="Normal" MinWidth="50"/>
            <TextBlock Text="Материал/Ткань" Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,0,0"/>
            <ComboBox Grid.Column="5" SelectedItem="{Binding Path=Material}" ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.Materials}" DisplayMemberPath="Name" IsEditable="True" Margin="6,6,4,6" MinWidth="100"/>
        </Grid>
        <Grid Grid.Row="2" DataContext="{Binding Path=VModel}" Visibility="Visible">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Header"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <DataGrid x:Name="SynonymDataGrid" ItemsSource="{Binding Synonyms}" AutoGenerateColumns="False" IsReadOnly="False" CanUserAddRows="True" CanUserDeleteRows="True" HorizontalScrollBarVisibility="Auto" Grid.Column="1" Margin="6,6,4,6" HeadersVisibility="Column" CurrentCellChanged="SynonymDataGrid_CurrentCellChanged">
                <DataGrid.CommandBindings>
                    <CommandBinding Command="Delete" Executed="DeleteSynonym" CanExecute="CanDeleteSynonym" />
                </DataGrid.CommandBindings>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Синонимы" Binding="{Binding Name,ValidatesOnExceptions=True,ValidatesOnDataErrors=True}" EditingElementStyle="{StaticResource ErrorStyle}" ElementStyle="{StaticResource ErrorStyle}" MinWidth="100"/>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid x:Name="GenderDataGrid" Grid.Column="3" ItemsSource="{Binding Genders}" AutoGenerateColumns="False" IsReadOnly="False" CanUserAddRows="True" CanUserDeleteRows="True" HorizontalScrollBarVisibility="Auto"  Margin="6,6,4,6" HeadersVisibility="Column" CurrentCellChanged="GenderDataGrid_CurrentCellChanged" >
                <DataGrid.CommandBindings>
                    <CommandBinding Command="Delete" Executed="DeleteGender" CanExecute="CanDeleteGender"/>
                </DataGrid.CommandBindings>
                <DataGrid.Columns>
                    <DataGridComboBoxColumn Header="Пол" SelectedItemBinding="{Binding Path=Gender}" ItemsSource="{Binding Source={StaticResource keyGenders}}" DisplayMemberPath="Name" MinWidth="100" >
                        <DataGridComboBoxColumn.EditingElementStyle >
                            <Style TargetType="ComboBox" BasedOn="{StaticResource ErrorStyle}" >
                                <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource ErrorStyle}" >
                                <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                    </DataGridComboBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</Window>
