<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ReferenceDS" targetNamespace="http://tempuri.org/CustomBrokerDataSet.xsd" xmlns:mstns="http://tempuri.org/CustomBrokerDataSet.xsd" xmlns="http://tempuri.org/CustomBrokerDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="1" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CustomBrokerConnectionString" IsAppSettingsProperty="true" Modifier="Assembly" Name="CustomBrokerConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.KirillPolyanskiy.CustomBrokerWpf.Properties.Settings.GlobalReference.Default.CustomBrokerConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CustomBrokerConnectionStringFar" IsAppSettingsProperty="true" Modifier="Assembly" Name="CustomBrokerConnectionStringFar (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.KirillPolyanskiy.CustomBrokerWpf.Properties.Settings.GlobalReference.Default.CustomBrokerConnectionStringFar" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableBrandAdapter" GeneratorDataComponentClassName="TableBrandAdapter" Name="tableBrand" UserDataComponentName="TableBrandAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.Brand_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Brand_tb] WHERE (([brandID] = @Original_brandID) AND ([brandName] = @Original_brandName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_brandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="brandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_brandName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="brandName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Brand_tb] ([brandName]) VALUES (@brandName);
SELECT brandID, brandName FROM Brand_tb WHERE (brandID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@brandName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="brandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT brandID, brandName FROM dbo.Brand_tb</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Brand_tb] SET [brandName] = @brandName WHERE (([brandID] = @Original_brandID) AND ([brandName] = @Original_brandName));
SELECT brandID, brandName FROM Brand_tb WHERE (brandID = @brandID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@brandName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="brandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_brandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="brandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_brandName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="brandName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="brandID" ColumnName="brandID" DataSourceName="CustomBroker.dbo.Brand_tb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@brandID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="brandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="brandID" DataSetColumn="brandID" />
              <Mapping SourceColumn="brandName" DataSetColumn="brandName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ContactPointTypeAdapter" GeneratorDataComponentClassName="ContactPointTypeAdapter" Name="ContactPointTypeTb" UserDataComponentName="ContactPointTypeAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.ContactPointType_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ContactPointType_tb] WHERE (([pointName] = @Original_pointName) AND ([rowId] = @Original_rowId) AND ((@IsNull_pointtemplate = 1 AND [pointtemplate] IS NULL) OR ([pointtemplate] = @Original_pointtemplate)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_pointName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rowId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rowId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_pointtemplate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="pointtemplate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_pointtemplate" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointtemplate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ContactPointType_tb] ([pointName], [pointtemplate]) VALUES (@pointName, @pointtemplate);
SELECT pointName, rowId, pointtemplate FROM ContactPointType_tb WHERE (pointName = @pointName) ORDER BY pointName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@pointName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@pointtemplate" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointtemplate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        pointName, rowId, pointtemplate
FROM            ContactPointType_tb
ORDER BY pointName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ContactPointType_tb] SET [pointName] = @pointName, [pointtemplate] = @pointtemplate WHERE (([pointName] = @Original_pointName) AND ([rowId] = @Original_rowId) AND ((@IsNull_pointtemplate = 1 AND [pointtemplate] IS NULL) OR ([pointtemplate] = @Original_pointtemplate)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@pointName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@pointtemplate" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointtemplate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_pointName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rowId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rowId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_pointtemplate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="pointtemplate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_pointtemplate" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pointtemplate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="pointName" DataSetColumn="pointName" />
              <Mapping SourceColumn="rowId" DataSetColumn="rowId" />
              <Mapping SourceColumn="pointtemplate" DataSetColumn="pointtemplate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="adapterContactPointTemplate" GeneratorDataComponentClassName="adapterContactPointTemplate" Name="tableContactPointTemplate" UserDataComponentName="adapterContactPointTemplate">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.ContactPointTemplate_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        templateId, templateName
FROM            ContactPointTemplate_tb
ORDER BY templateName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="templateId" DataSetColumn="templateId" />
              <Mapping SourceColumn="templateName" DataSetColumn="templateName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RequestStatusAdapter" GeneratorDataComponentClassName="RequestStatusAdapter" Name="tableRequestStatus" UserDataComponentName="RequestStatusAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionStringFar (Settings)" DbObjectName="CustomBroker.dbo.RequestStatus_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>RequestStatusDel_sp</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@statusid" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="rowId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [RequestStatus_tb] ([rowId], [name]) VALUES (@rowId, @name);
SELECT rowId, name FROM RequestStatus_tb WHERE (rowId = @rowId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@rowId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rowId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT  id, name 
FROM     RequestStatus_tb</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>RequestStatusUpd_sp</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@statusidold" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="rowId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@statusidnew" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="rowId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@statusname" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="id" DataSetColumn="rowId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AddressTypeAdapter" GeneratorDataComponentClassName="AddressTypeAdapter" Name="tableAddressType" UserDataComponentName="AddressTypeAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.AddressType_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AddressType_tb] WHERE (([addresstypeID] = @Original_addresstypeID) AND ([addresstypeName] = @Original_addresstypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_addresstypeID" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="addresstypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_addresstypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="addresstypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [AddressType_tb] ([addresstypeName]) VALUES (@addresstypeName);
SELECT addresstypeID, addresstypeName FROM AddressType_tb WHERE (addresstypeID = SCOPE_IDENTITY()) ORDER BY addresstypeName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@addresstypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="addresstypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        AddressType_tb.*
FROM            AddressType_tb
ORDER BY addresstypeName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AddressType_tb] SET [addresstypeName] = @addresstypeName WHERE (([addresstypeID] = @Original_addresstypeID) AND ([addresstypeName] = @Original_addresstypeName));
SELECT addresstypeID, addresstypeName FROM AddressType_tb WHERE (addresstypeID = @addresstypeID) ORDER BY addresstypeName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@addresstypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="addresstypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_addresstypeID" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="addresstypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_addresstypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="addresstypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="addresstypeID" ColumnName="addresstypeID" DataSourceName="CustomBroker.dbo.AddressType_tb" DataTypeServer="tinyint" DbType="Byte" Direction="Input" ParameterName="@addresstypeID" Precision="0" ProviderType="TinyInt" Scale="0" Size="1" SourceColumn="addresstypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="addresstypeID" DataSetColumn="addresstypeID" />
              <Mapping SourceColumn="addresstypeName" DataSetColumn="addresstypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ContactTypeAdapter" GeneratorDataComponentClassName="ContactTypeAdapter" Name="tableContactType" UserDataComponentName="ContactTypeAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.ContactType_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ContactType_tb] WHERE (([ContactTypeID] = @Original_ContactTypeID) AND ([ContactTypeName] = @Original_ContactTypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContactTypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContactTypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContactTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContactTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ContactType_tb] ([ContactTypeName]) VALUES (@ContactTypeName);
SELECT ContactTypeID, ContactTypeName FROM ContactType_tb WHERE (ContactTypeID = SCOPE_IDENTITY()) ORDER BY ContactTypeName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContactTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContactTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ContactType_tb.*
FROM            ContactType_tb
ORDER BY ContactTypeName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="true">
                    <CommandText>ContactTypeUpd_sp</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@newName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ContactTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@OldName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ContactTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ContactTypeID" DataSetColumn="ContactTypeID" />
              <Mapping SourceColumn="ContactTypeName" DataSetColumn="ContactTypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DeliveryType" GeneratorDataComponentClassName="DeliveryType" Name="DeliveryType" UserDataComponentName="DeliveryType">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.DeliveryType_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [DeliveryType_tb] WHERE (([deliverytypeID] = @Original_deliverytypeID) AND ([deliverytypeName] = @Original_deliverytypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_deliverytypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="deliverytypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_deliverytypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="deliverytypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [DeliveryType_tb] ([deliverytypeName]) VALUES (@deliverytypeName);
SELECT deliverytypeID, deliverytypeName FROM DeliveryType_tb WHERE (deliverytypeID = SCOPE_IDENTITY()) ORDER BY deliverytypeName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@deliverytypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="deliverytypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        DeliveryType_tb.*
FROM            DeliveryType_tb
ORDER BY deliverytypeName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [DeliveryType_tb] SET [deliverytypeName] = @deliverytypeName WHERE (([deliverytypeID] = @Original_deliverytypeID) AND ([deliverytypeName] = @Original_deliverytypeName));
SELECT deliverytypeID, deliverytypeName FROM DeliveryType_tb WHERE (deliverytypeID = @deliverytypeID) ORDER BY deliverytypeName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@deliverytypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="deliverytypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_deliverytypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="deliverytypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_deliverytypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="deliverytypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="deliverytypeID" ColumnName="deliverytypeID" DataSourceName="CustomBroker.dbo.DeliveryType_tb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@deliverytypeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="deliverytypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="deliverytypeID" DataSetColumn="deliverytypeID" />
              <Mapping SourceColumn="deliverytypeName" DataSetColumn="deliverytypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ManagerGroupAdapter" GeneratorDataComponentClassName="ManagerGroupAdapter" Name="tableManagerGroup" UserDataComponentName="ManagerGroupAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.ManagerGroup_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [ManagerGroup_tb] WHERE (([managergroupID] = @Original_managergroupID) AND ([managergroupName] = @Original_managergroupName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_managergroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="managergroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_managergroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="managergroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [ManagerGroup_tb] ([managergroupName]) VALUES (@managergroupName);
SELECT managergroupID, managergroupName FROM ManagerGroup_tb WHERE (managergroupID = SCOPE_IDENTITY()) ORDER BY managergroupName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@managergroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="managergroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ManagerGroup_tb.*
FROM            ManagerGroup_tb
ORDER BY managergroupName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [ManagerGroup_tb] SET [managergroupName] = @managergroupName WHERE (([managergroupID] = @Original_managergroupID) AND ([managergroupName] = @Original_managergroupName));
SELECT managergroupID, managergroupName FROM ManagerGroup_tb WHERE (managergroupID = @managergroupID) ORDER BY managergroupName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@managergroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="managergroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_managergroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="managergroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_managergroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="managergroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="managergroupID" ColumnName="managergroupID" DataSourceName="CustomBroker.dbo.ManagerGroup_tb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@managergroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="managergroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="managergroupID" DataSetColumn="managergroupID" />
              <Mapping SourceColumn="managergroupName" DataSetColumn="managergroupName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PaymentTypeAdapter" GeneratorDataComponentClassName="PaymentTypeAdapter" Name="tablePaymentType" UserDataComponentName="PaymentTypeAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.PaymentType_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [PaymentType_tb] WHERE (([paytypeID] = @Original_paytypeID) AND ([paytypeName] = @Original_paytypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_paytypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="paytypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_paytypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="paytypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [PaymentType_tb] ([paytypeName]) VALUES (@paytypeName);
SELECT paytypeID, paytypeName FROM PaymentType_tb WHERE (paytypeID = SCOPE_IDENTITY()) ORDER BY paytypeName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@paytypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="paytypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        PaymentType_tb.*
FROM            PaymentType_tb
ORDER BY paytypeName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [PaymentType_tb] SET [paytypeName] = @paytypeName WHERE (([paytypeID] = @Original_paytypeID) AND ([paytypeName] = @Original_paytypeName));
SELECT paytypeID, paytypeName FROM PaymentType_tb WHERE (paytypeID = @paytypeID) ORDER BY paytypeName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@paytypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="paytypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_paytypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="paytypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_paytypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="paytypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="paytypeID" ColumnName="paytypeID" DataSourceName="CustomBroker.dbo.PaymentType_tb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@paytypeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="paytypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="paytypeID" DataSetColumn="paytypeID" />
              <Mapping SourceColumn="paytypeName" DataSetColumn="paytypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TownAdapter" GeneratorDataComponentClassName="TownAdapter" Name="tableTown" UserDataComponentName="TownAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.town_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [town_tb] WHERE (([townName] = @Original_townName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_townName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="townName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [town_tb] ([townName]) VALUES (@townName);
SELECT townName FROM town_tb WHERE (townName = @townName) ORDER BY townName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@townName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="townName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        townName
FROM            town_tb
ORDER BY townName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [town_tb] SET [townName] = @townName WHERE (([townName] = @Original_townName));
SELECT townName FROM town_tb WHERE (townName = @townName) ORDER BY townName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@townName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="townName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_townName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="townName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="townName" DataSetColumn="townName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ForwarderAdapter" GeneratorDataComponentClassName="ForwarderAdapter" Name="tableForwarder" UserDataComponentName="ForwarderAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.Forwarder_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Forwarder_tb
WHERE        (itemId = @Original_itemId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_itemId" ColumnName="itemId" DataSourceName="CustomBroker.dbo.Forwarder_tb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_itemId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="itemId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Forwarder_tb] ([itemName], [person]) VALUES (@itemName, @person);
SELECT itemId, itemName, person FROM Forwarder_tb WHERE (itemId = SCOPE_IDENTITY()) ORDER BY itemName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@itemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="itemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@person" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="person" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        itemId, itemName, person
FROM            Forwarder_tb
ORDER BY itemName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       Forwarder_tb
SET                itemName = @itemName, person = @person
WHERE        (itemId = @Original_itemId); 
SELECT itemId, itemName, person FROM Forwarder_tb WHERE (itemId = @itemId) ORDER BY itemName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="itemName" ColumnName="itemName" DataSourceName="CustomBroker.dbo.Forwarder_tb" DataTypeServer="nvarchar(15)" DbType="String" Direction="Input" ParameterName="@itemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="15" SourceColumn="itemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="person" ColumnName="person" DataSourceName="CustomBroker.dbo.Forwarder_tb" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@person" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="person" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_itemId" ColumnName="itemId" DataSourceName="CustomBroker.dbo.Forwarder_tb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_itemId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="itemId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="itemId" ColumnName="itemId" DataSourceName="CustomBroker.dbo.Forwarder_tb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@itemId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="itemId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="itemId" DataSetColumn="itemId" />
              <Mapping SourceColumn="itemName" DataSetColumn="itemName" />
              <Mapping SourceColumn="person" DataSetColumn="person" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountCurrencyAdapter" GeneratorDataComponentClassName="AccountCurrencyAdapter" Name="tableAccountCurrency" UserDataComponentName="AccountCurrencyAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.AccountCurrency_tb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountCurrency_tb] WHERE (([currency] = @Original_currency) AND ((@IsNull_currdescription = 1 AND [currdescription] IS NULL) OR ([currdescription] = @Original_currdescription)) AND ((@IsNull_ncode = 1 AND [ncode] IS NULL) OR ([ncode] = @Original_ncode)) AND ((@IsNull_alias = 1 AND [alias] IS NULL) OR ([alias] = @Original_alias)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_currency" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="currency" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_currdescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="currdescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_currdescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="currdescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ncode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ncode" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_ncode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ncode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_alias" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="alias" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_alias" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="alias" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [AccountCurrency_tb] ([currency], [currdescription], [ncode], [alias]) VALUES (@currency, @currdescription, @ncode, @alias);
SELECT currency, currdescription, ncode, alias FROM AccountCurrency_tb WHERE (currency = @currency)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@currency" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="currency" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@currdescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="currdescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@ncode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ncode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@alias" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="alias" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        AccountCurrency_tb.*
FROM            AccountCurrency_tb</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountCurrency_tb] SET [currency] = @currency, [currdescription] = @currdescription, [ncode] = @ncode, [alias] = @alias WHERE (([currency] = @Original_currency) AND ((@IsNull_currdescription = 1 AND [currdescription] IS NULL) OR ([currdescription] = @Original_currdescription)) AND ((@IsNull_ncode = 1 AND [ncode] IS NULL) OR ([ncode] = @Original_ncode)) AND ((@IsNull_alias = 1 AND [alias] IS NULL) OR ([alias] = @Original_alias)));
SELECT currency, currdescription, ncode, alias FROM AccountCurrency_tb WHERE (currency = @currency)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@currency" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="currency" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@currdescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="currdescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@ncode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ncode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@alias" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="alias" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_currency" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="currency" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_currdescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="currdescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_currdescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="currdescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ncode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ncode" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_ncode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ncode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_alias" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="alias" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_alias" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="alias" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="currency" DataSetColumn="currency" />
              <Mapping SourceColumn="currdescription" DataSetColumn="currdescription" />
              <Mapping SourceColumn="ncode" DataSetColumn="ncode" />
              <Mapping SourceColumn="alias" DataSetColumn="alias" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountSettlementAdapter" GeneratorDataComponentClassName="AccountSettlementAdapter" Name="tableAccountSettlement" UserDataComponentName="AccountSettlementAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.AccountSettlement_vw" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        accountid, bankaccount + ' ' + bankaccountcurr + ' ' + bankName AS descr, bankaccount, bankaccountcurr, accountnote, bankName, bankLocation, backCorrAccount, 
                         bankBIC
FROM            AccountSettlement_vw</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="accountid" DataSetColumn="accountid" />
              <Mapping SourceColumn="descr" DataSetColumn="descr" />
              <Mapping SourceColumn="bankaccount" DataSetColumn="bankaccount" />
              <Mapping SourceColumn="bankaccountcurr" DataSetColumn="bankaccountcurr" />
              <Mapping SourceColumn="accountnote" DataSetColumn="accountnote" />
              <Mapping SourceColumn="bankName" DataSetColumn="bankName" />
              <Mapping SourceColumn="bankLocation" DataSetColumn="bankLocation" />
              <Mapping SourceColumn="backCorrAccount" DataSetColumn="backCorrAccount" />
              <Mapping SourceColumn="bankBIC" DataSetColumn="bankBIC" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LegalEntityAdapter" GeneratorDataComponentClassName="LegalEntityAdapter" Name="tableLegalEntity" UserDataComponentName="LegalEntityAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.LegalEntity_vw" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="true">
                    <CommandText>LegalEntityDel_sp</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idlegal" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="idlegalentity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="true">
                    <CommandText>LegalEntityAdd_sp</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@namelegal" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="namelegal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Output" ParameterName="@idlegal" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="idlegalentity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Output" ParameterName="@accountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isActual" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActual" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@istop" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="istop" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        LegalEntity_vw.*
FROM            LegalEntity_vw</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="true">
                    <CommandText>LegalEntityUpd_sp</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idlegal" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="idlegalentity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@namelegal" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="namelegal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isActual" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActual" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@istop" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="istop" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idlegalentity" DataSetColumn="idlegalentity" />
              <Mapping SourceColumn="namelegal" DataSetColumn="namelegal" />
              <Mapping SourceColumn="accountid" DataSetColumn="accountid" />
              <Mapping SourceColumn="isActual" DataSetColumn="isActual" />
              <Mapping SourceColumn="istop" DataSetColumn="istop" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CustomerNameAdapter" GeneratorDataComponentClassName="CustomerNameAdapter" Name="tableCustomerName" UserDataComponentName="CustomerNameAdapter">
            <MainSource>
              <DbSource ConnectionRef="CustomBrokerConnectionString (Settings)" DbObjectName="CustomBroker.dbo.CustomerName_sp" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="true">
                    <CommandText>CustomerName_sp</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="customerID" DataSetColumn="customerID" />
              <Mapping SourceColumn="account" DataSetColumn="account" />
              <Mapping SourceColumn="customerName" DataSetColumn="customerName" />
              <Mapping SourceColumn="payaccount" DataSetColumn="payaccount" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ReferenceDS" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ReferenceDS" msprop:Generator_UserDSName="ReferenceDS">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="tableBrand" msprop:Generator_TableClassName="tableBrandDataTable" msprop:Generator_TableVarName="tabletableBrand" msprop:Generator_RowChangedName="tableBrandRowChanged" msprop:Generator_TablePropName="tableBrand" msprop:Generator_RowDeletingName="tableBrandRowDeleting" msprop:Generator_RowChangingName="tableBrandRowChanging" msprop:Generator_RowEvHandlerName="tableBrandRowChangeEventHandler" msprop:Generator_RowDeletedName="tableBrandRowDeleted" msprop:Generator_RowClassName="tableBrandRow" msprop:Generator_UserTableName="tableBrand" msprop:Generator_RowEvArgName="tableBrandRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="brandID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnbrandID" msprop:Generator_ColumnPropNameInRow="brandID" msprop:Generator_ColumnPropNameInTable="brandIDColumn" msprop:Generator_UserColumnName="brandID" type="xs:int" />
              <xs:element name="brandName" msprop:Generator_ColumnVarNameInTable="columnbrandName" msprop:Generator_ColumnPropNameInRow="brandName" msprop:Generator_ColumnPropNameInTable="brandNameColumn" msprop:Generator_UserColumnName="brandName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ContactPointTypeTb" msprop:Generator_TableClassName="ContactPointTypeTbDataTable" msprop:Generator_TableVarName="tableContactPointTypeTb" msprop:Generator_RowChangedName="ContactPointTypeTbRowChanged" msprop:Generator_TablePropName="ContactPointTypeTb" msprop:Generator_RowDeletingName="ContactPointTypeTbRowDeleting" msprop:Generator_RowChangingName="ContactPointTypeTbRowChanging" msprop:Generator_RowEvHandlerName="ContactPointTypeTbRowChangeEventHandler" msprop:Generator_RowDeletedName="ContactPointTypeTbRowDeleted" msprop:Generator_RowClassName="ContactPointTypeTbRow" msprop:Generator_UserTableName="ContactPointTypeTb" msprop:Generator_RowEvArgName="ContactPointTypeTbRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="pointName" msprop:Generator_ColumnVarNameInTable="columnpointName" msprop:Generator_ColumnPropNameInRow="pointName" msprop:Generator_ColumnPropNameInTable="pointNameColumn" msprop:Generator_UserColumnName="pointName" default="">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="rowId" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnrowId" msprop:Generator_ColumnPropNameInRow="rowId" msprop:Generator_ColumnPropNameInTable="rowIdColumn" msprop:Generator_UserColumnName="rowId" type="xs:int" />
              <xs:element name="pointtemplate" msprop:Generator_ColumnVarNameInTable="columnpointtemplate" msprop:Generator_ColumnPropNameInRow="pointtemplate" msprop:Generator_ColumnPropNameInTable="pointtemplateColumn" msprop:Generator_UserColumnName="pointtemplate" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableContactPointTemplate" msprop:Generator_TableClassName="tableContactPointTemplateDataTable" msprop:Generator_TableVarName="tabletableContactPointTemplate" msprop:Generator_RowChangedName="tableContactPointTemplateRowChanged" msprop:Generator_TablePropName="tableContactPointTemplate" msprop:Generator_RowDeletingName="tableContactPointTemplateRowDeleting" msprop:Generator_RowChangingName="tableContactPointTemplateRowChanging" msprop:Generator_RowEvHandlerName="tableContactPointTemplateRowChangeEventHandler" msprop:Generator_RowDeletedName="tableContactPointTemplateRowDeleted" msprop:Generator_RowClassName="tableContactPointTemplateRow" msprop:Generator_UserTableName="tableContactPointTemplate" msprop:Generator_RowEvArgName="tableContactPointTemplateRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="templateId" msprop:Generator_ColumnVarNameInTable="columntemplateId" msprop:Generator_ColumnPropNameInRow="templateId" msprop:Generator_ColumnPropNameInTable="templateIdColumn" msprop:Generator_UserColumnName="templateId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="templateName" msprop:Generator_ColumnVarNameInTable="columntemplateName" msprop:Generator_ColumnPropNameInRow="templateName" msprop:Generator_ColumnPropNameInTable="templateNameColumn" msprop:Generator_UserColumnName="templateName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableRequestStatus" msprop:Generator_TableClassName="tableRequestStatusDataTable" msprop:Generator_TableVarName="tabletableRequestStatus" msprop:Generator_RowChangedName="tableRequestStatusRowChanged" msprop:Generator_TablePropName="tableRequestStatus" msprop:Generator_RowDeletingName="tableRequestStatusRowDeleting" msprop:Generator_RowChangingName="tableRequestStatusRowChanging" msprop:Generator_RowEvHandlerName="tableRequestStatusRowChangeEventHandler" msprop:Generator_RowDeletedName="tableRequestStatusRowDeleted" msprop:Generator_RowClassName="tableRequestStatusRow" msprop:Generator_UserTableName="tableRequestStatus" msprop:Generator_RowEvArgName="tableRequestStatusRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="rowId" msprop:Generator_ColumnVarNameInTable="columnrowId" msprop:Generator_ColumnPropNameInRow="rowId" msprop:Generator_ColumnPropNameInTable="rowIdColumn" msprop:Generator_UserColumnName="rowId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableAddressType" msprop:Generator_TableClassName="tableAddressTypeDataTable" msprop:Generator_TableVarName="tabletableAddressType" msprop:Generator_RowChangedName="tableAddressTypeRowChanged" msprop:Generator_TablePropName="tableAddressType" msprop:Generator_RowDeletingName="tableAddressTypeRowDeleting" msprop:Generator_RowChangingName="tableAddressTypeRowChanging" msprop:Generator_RowEvHandlerName="tableAddressTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="tableAddressTypeRowDeleted" msprop:Generator_RowClassName="tableAddressTypeRow" msprop:Generator_UserTableName="tableAddressType" msprop:Generator_RowEvArgName="tableAddressTypeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="addresstypeID" msdata:ReadOnly="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnaddresstypeID" msprop:Generator_ColumnPropNameInRow="addresstypeID" msprop:Generator_ColumnPropNameInTable="addresstypeIDColumn" msprop:Generator_UserColumnName="addresstypeID" type="xs:unsignedByte" />
              <xs:element name="addresstypeName" msprop:Generator_ColumnVarNameInTable="columnaddresstypeName" msprop:Generator_ColumnPropNameInRow="addresstypeName" msprop:Generator_ColumnPropNameInTable="addresstypeNameColumn" msprop:Generator_UserColumnName="addresstypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableContactType" msprop:Generator_TableClassName="tableContactTypeDataTable" msprop:Generator_TableVarName="tabletableContactType" msprop:Generator_RowChangedName="tableContactTypeRowChanged" msprop:Generator_TablePropName="tableContactType" msprop:Generator_RowDeletingName="tableContactTypeRowDeleting" msprop:Generator_RowChangingName="tableContactTypeRowChanging" msprop:Generator_RowEvHandlerName="tableContactTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="tableContactTypeRowDeleted" msprop:Generator_RowClassName="tableContactTypeRow" msprop:Generator_UserTableName="tableContactType" msprop:Generator_RowEvArgName="tableContactTypeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ContactTypeID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnContactTypeID" msprop:Generator_ColumnPropNameInRow="ContactTypeID" msprop:Generator_ColumnPropNameInTable="ContactTypeIDColumn" msprop:Generator_UserColumnName="ContactTypeID" type="xs:int" />
              <xs:element name="ContactTypeName" msprop:Generator_ColumnVarNameInTable="columnContactTypeName" msprop:Generator_ColumnPropNameInRow="ContactTypeName" msprop:Generator_ColumnPropNameInTable="ContactTypeNameColumn" msprop:Generator_UserColumnName="ContactTypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DeliveryType" msprop:Generator_TableClassName="DeliveryTypeDataTable" msprop:Generator_TableVarName="tableDeliveryType" msprop:Generator_RowChangedName="DeliveryTypeRowChanged" msprop:Generator_TablePropName="DeliveryType" msprop:Generator_RowDeletingName="DeliveryTypeRowDeleting" msprop:Generator_RowChangingName="DeliveryTypeRowChanging" msprop:Generator_RowEvHandlerName="DeliveryTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="DeliveryTypeRowDeleted" msprop:Generator_RowClassName="DeliveryTypeRow" msprop:Generator_UserTableName="DeliveryType" msprop:Generator_RowEvArgName="DeliveryTypeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="deliverytypeID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columndeliverytypeID" msprop:Generator_ColumnPropNameInRow="deliverytypeID" msprop:Generator_ColumnPropNameInTable="deliverytypeIDColumn" msprop:Generator_UserColumnName="deliverytypeID" type="xs:int" />
              <xs:element name="deliverytypeName" msprop:Generator_ColumnVarNameInTable="columndeliverytypeName" msprop:Generator_ColumnPropNameInRow="deliverytypeName" msprop:Generator_ColumnPropNameInTable="deliverytypeNameColumn" msprop:Generator_UserColumnName="deliverytypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableManagerGroup" msprop:Generator_TableClassName="tableManagerGroupDataTable" msprop:Generator_TableVarName="tabletableManagerGroup" msprop:Generator_RowChangedName="tableManagerGroupRowChanged" msprop:Generator_TablePropName="tableManagerGroup" msprop:Generator_RowDeletingName="tableManagerGroupRowDeleting" msprop:Generator_RowChangingName="tableManagerGroupRowChanging" msprop:Generator_RowEvHandlerName="tableManagerGroupRowChangeEventHandler" msprop:Generator_RowDeletedName="tableManagerGroupRowDeleted" msprop:Generator_RowClassName="tableManagerGroupRow" msprop:Generator_UserTableName="tableManagerGroup" msprop:Generator_RowEvArgName="tableManagerGroupRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="managergroupID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnmanagergroupID" msprop:Generator_ColumnPropNameInRow="managergroupID" msprop:Generator_ColumnPropNameInTable="managergroupIDColumn" msprop:Generator_UserColumnName="managergroupID" type="xs:int" />
              <xs:element name="managergroupName" msprop:Generator_ColumnVarNameInTable="columnmanagergroupName" msprop:Generator_ColumnPropNameInRow="managergroupName" msprop:Generator_ColumnPropNameInTable="managergroupNameColumn" msprop:Generator_UserColumnName="managergroupName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tablePaymentType" msprop:Generator_TableClassName="tablePaymentTypeDataTable" msprop:Generator_TableVarName="tabletablePaymentType" msprop:Generator_RowChangedName="tablePaymentTypeRowChanged" msprop:Generator_TablePropName="tablePaymentType" msprop:Generator_RowDeletingName="tablePaymentTypeRowDeleting" msprop:Generator_RowChangingName="tablePaymentTypeRowChanging" msprop:Generator_RowEvHandlerName="tablePaymentTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="tablePaymentTypeRowDeleted" msprop:Generator_RowClassName="tablePaymentTypeRow" msprop:Generator_UserTableName="tablePaymentType" msprop:Generator_RowEvArgName="tablePaymentTypeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="paytypeID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnpaytypeID" msprop:Generator_ColumnPropNameInRow="paytypeID" msprop:Generator_ColumnPropNameInTable="paytypeIDColumn" msprop:Generator_UserColumnName="paytypeID" type="xs:int" />
              <xs:element name="paytypeName" msprop:Generator_ColumnVarNameInTable="columnpaytypeName" msprop:Generator_ColumnPropNameInRow="paytypeName" msprop:Generator_ColumnPropNameInTable="paytypeNameColumn" msprop:Generator_UserColumnName="paytypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableTown" msprop:Generator_TableClassName="tableTownDataTable" msprop:Generator_TableVarName="tabletableTown" msprop:Generator_RowChangedName="tableTownRowChanged" msprop:Generator_TablePropName="tableTown" msprop:Generator_RowDeletingName="tableTownRowDeleting" msprop:Generator_RowChangingName="tableTownRowChanging" msprop:Generator_RowEvHandlerName="tableTownRowChangeEventHandler" msprop:Generator_RowDeletedName="tableTownRowDeleted" msprop:Generator_RowClassName="tableTownRow" msprop:Generator_UserTableName="tableTown" msprop:Generator_RowEvArgName="tableTownRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="townName" msprop:Generator_ColumnVarNameInTable="columntownName" msprop:Generator_ColumnPropNameInRow="townName" msprop:Generator_ColumnPropNameInTable="townNameColumn" msprop:Generator_UserColumnName="townName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableForwarder" msprop:Generator_TableClassName="tableForwarderDataTable" msprop:Generator_TableVarName="tabletableForwarder" msprop:Generator_RowChangedName="tableForwarderRowChanged" msprop:Generator_TablePropName="tableForwarder" msprop:Generator_RowDeletingName="tableForwarderRowDeleting" msprop:Generator_RowChangingName="tableForwarderRowChanging" msprop:Generator_RowEvHandlerName="tableForwarderRowChangeEventHandler" msprop:Generator_RowDeletedName="tableForwarderRowDeleted" msprop:Generator_RowClassName="tableForwarderRow" msprop:Generator_UserTableName="tableForwarder" msprop:Generator_RowEvArgName="tableForwarderRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="itemId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnitemId" msprop:Generator_ColumnPropNameInRow="itemId" msprop:Generator_ColumnPropNameInTable="itemIdColumn" msprop:Generator_UserColumnName="itemId" type="xs:int" />
              <xs:element name="itemName" msprop:Generator_ColumnVarNameInTable="columnitemName" msprop:Generator_ColumnPropNameInRow="itemName" msprop:Generator_ColumnPropNameInTable="itemNameColumn" msprop:Generator_UserColumnName="itemName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="person" msprop:Generator_ColumnVarNameInTable="columnperson" msprop:Generator_ColumnPropNameInRow="person" msprop:Generator_ColumnPropNameInTable="personColumn" msprop:Generator_UserColumnName="person" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableAccountCurrency" msprop:Generator_TableClassName="tableAccountCurrencyDataTable" msprop:Generator_TableVarName="tabletableAccountCurrency" msprop:Generator_RowChangedName="tableAccountCurrencyRowChanged" msprop:Generator_TablePropName="tableAccountCurrency" msprop:Generator_RowDeletingName="tableAccountCurrencyRowDeleting" msprop:Generator_RowChangingName="tableAccountCurrencyRowChanging" msprop:Generator_RowEvHandlerName="tableAccountCurrencyRowChangeEventHandler" msprop:Generator_RowDeletedName="tableAccountCurrencyRowDeleted" msprop:Generator_RowClassName="tableAccountCurrencyRow" msprop:Generator_UserTableName="tableAccountCurrency" msprop:Generator_RowEvArgName="tableAccountCurrencyRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="currency" msprop:Generator_ColumnVarNameInTable="columncurrency" msprop:Generator_ColumnPropNameInRow="currency" msprop:Generator_ColumnPropNameInTable="currencyColumn" msprop:Generator_UserColumnName="currency">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="currdescription" msprop:Generator_ColumnVarNameInTable="columncurrdescription" msprop:Generator_ColumnPropNameInRow="currdescription" msprop:Generator_ColumnPropNameInTable="currdescriptionColumn" msprop:Generator_UserColumnName="currdescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ncode" msprop:Generator_ColumnVarNameInTable="columnncode" msprop:Generator_ColumnPropNameInRow="ncode" msprop:Generator_ColumnPropNameInTable="ncodeColumn" msprop:Generator_UserColumnName="ncode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="alias" msprop:Generator_ColumnVarNameInTable="columnalias" msprop:Generator_ColumnPropNameInRow="alias" msprop:Generator_ColumnPropNameInTable="aliasColumn" msprop:Generator_UserColumnName="alias" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableAccountSettlement" msprop:Generator_TableClassName="tableAccountSettlementDataTable" msprop:Generator_TableVarName="tabletableAccountSettlement" msprop:Generator_RowChangedName="tableAccountSettlementRowChanged" msprop:Generator_TablePropName="tableAccountSettlement" msprop:Generator_RowDeletingName="tableAccountSettlementRowDeleting" msprop:Generator_RowChangingName="tableAccountSettlementRowChanging" msprop:Generator_RowEvHandlerName="tableAccountSettlementRowChangeEventHandler" msprop:Generator_RowDeletedName="tableAccountSettlementRowDeleted" msprop:Generator_RowClassName="tableAccountSettlementRow" msprop:Generator_UserTableName="tableAccountSettlement" msprop:Generator_RowEvArgName="tableAccountSettlementRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="accountid" msprop:Generator_ColumnVarNameInTable="columnaccountid" msprop:Generator_ColumnPropNameInRow="accountid" msprop:Generator_ColumnPropNameInTable="accountidColumn" msprop:Generator_UserColumnName="accountid" type="xs:int" minOccurs="0" />
              <xs:element name="descr" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columndescr" msprop:Generator_ColumnPropNameInRow="descr" msprop:Generator_ColumnPropNameInTable="descrColumn" msprop:Generator_UserColumnName="descr" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="125" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="bankaccount" msprop:Generator_ColumnVarNameInTable="columnbankaccount" msprop:Generator_ColumnPropNameInRow="bankaccount" msprop:Generator_ColumnPropNameInTable="bankaccountColumn" msprop:Generator_UserColumnName="bankaccount">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="bankaccountcurr" msprop:Generator_ColumnVarNameInTable="columnbankaccountcurr" msprop:Generator_ColumnPropNameInRow="bankaccountcurr" msprop:Generator_ColumnPropNameInTable="bankaccountcurrColumn" msprop:Generator_UserColumnName="bankaccountcurr">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="accountnote" msprop:Generator_ColumnVarNameInTable="columnaccountnote" msprop:Generator_ColumnPropNameInRow="accountnote" msprop:Generator_ColumnPropNameInTable="accountnoteColumn" msprop:Generator_UserColumnName="accountnote" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="bankName" msprop:Generator_ColumnVarNameInTable="columnbankName" msprop:Generator_ColumnPropNameInRow="bankName" msprop:Generator_ColumnPropNameInTable="bankNameColumn" msprop:Generator_UserColumnName="bankName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="bankLocation" msprop:Generator_ColumnVarNameInTable="columnbankLocation" msprop:Generator_ColumnPropNameInRow="bankLocation" msprop:Generator_ColumnPropNameInTable="bankLocationColumn" msprop:Generator_UserColumnName="bankLocation" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="backCorrAccount" msprop:Generator_ColumnVarNameInTable="columnbackCorrAccount" msprop:Generator_ColumnPropNameInRow="backCorrAccount" msprop:Generator_ColumnPropNameInTable="backCorrAccountColumn" msprop:Generator_UserColumnName="backCorrAccount" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="bankBIC" msprop:Generator_ColumnVarNameInTable="columnbankBIC" msprop:Generator_ColumnPropNameInRow="bankBIC" msprop:Generator_ColumnPropNameInTable="bankBICColumn" msprop:Generator_UserColumnName="bankBIC">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="9" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableLegalEntity" msprop:Generator_TableClassName="tableLegalEntityDataTable" msprop:Generator_TableVarName="tabletableLegalEntity" msprop:Generator_RowChangedName="tableLegalEntityRowChanged" msprop:Generator_TablePropName="tableLegalEntity" msprop:Generator_RowDeletingName="tableLegalEntityRowDeleting" msprop:Generator_RowChangingName="tableLegalEntityRowChanging" msprop:Generator_RowEvHandlerName="tableLegalEntityRowChangeEventHandler" msprop:Generator_RowDeletedName="tableLegalEntityRowDeleted" msprop:Generator_RowClassName="tableLegalEntityRow" msprop:Generator_UserTableName="tableLegalEntity" msprop:Generator_RowEvArgName="tableLegalEntityRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idlegalentity" msdata:AutoIncrement="true" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidlegalentity" msprop:Generator_ColumnPropNameInRow="idlegalentity" msprop:Generator_ColumnPropNameInTable="idlegalentityColumn" msprop:Generator_UserColumnName="idlegalentity" type="xs:int" />
              <xs:element name="namelegal" msprop:Generator_ColumnVarNameInTable="columnnamelegal" msprop:Generator_ColumnPropNameInRow="namelegal" msprop:Generator_ColumnPropNameInTable="namelegalColumn" msprop:Generator_UserColumnName="namelegal">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="accountid" msprop:Generator_ColumnVarNameInTable="columnaccountid" msprop:Generator_ColumnPropNameInRow="accountid" msprop:Generator_ColumnPropNameInTable="accountidColumn" msprop:Generator_UserColumnName="accountid" type="xs:int" minOccurs="0" />
              <xs:element name="isActual" msprop:Generator_ColumnVarNameInTable="columnisActual" msprop:Generator_ColumnPropNameInRow="isActual" msprop:Generator_ColumnPropNameInTable="isActualColumn" msprop:Generator_UserColumnName="isActual" type="xs:boolean" default="true" />
              <xs:element name="istop" msprop:Generator_ColumnVarNameInTable="columnistop" msprop:Generator_ColumnPropNameInRow="istop" msprop:Generator_ColumnPropNameInTable="istopColumn" msprop:Generator_UserColumnName="istop" type="xs:boolean" default="false" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tableCustomerName" msprop:Generator_TableClassName="tableCustomerNameDataTable" msprop:Generator_TableVarName="tabletableCustomerName" msprop:Generator_RowChangedName="tableCustomerNameRowChanged" msprop:Generator_TablePropName="tableCustomerName" msprop:Generator_RowDeletingName="tableCustomerNameRowDeleting" msprop:Generator_RowChangingName="tableCustomerNameRowChanging" msprop:Generator_RowEvHandlerName="tableCustomerNameRowChangeEventHandler" msprop:Generator_RowDeletedName="tableCustomerNameRowDeleted" msprop:Generator_RowClassName="tableCustomerNameRow" msprop:Generator_UserTableName="tableCustomerName" msprop:Generator_RowEvArgName="tableCustomerNameRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="customerID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columncustomerID" msprop:Generator_ColumnPropNameInRow="customerID" msprop:Generator_ColumnPropNameInTable="customerIDColumn" msprop:Generator_UserColumnName="customerID" type="xs:int" />
              <xs:element name="account" msprop:Generator_ColumnVarNameInTable="columnaccount" msprop:Generator_ColumnPropNameInRow="account" msprop:Generator_ColumnPropNameInTable="accountColumn" msprop:Generator_UserColumnName="account" type="xs:int" minOccurs="0" />
              <xs:element name="customerName" msprop:Generator_ColumnVarNameInTable="columncustomerName" msprop:Generator_ColumnPropNameInRow="customerName" msprop:Generator_ColumnPropNameInTable="customerNameColumn" msprop:Generator_UserColumnName="customerName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="payaccount" msprop:Generator_ColumnVarNameInTable="columnpayaccount" msprop:Generator_ColumnPropNameInRow="payaccount" msprop:Generator_ColumnPropNameInTable="payaccountColumn" msprop:Generator_UserColumnName="payaccount" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableBrand" />
      <xs:field xpath="mstns:brandID" />
    </xs:unique>
    <xs:unique name="ContactPointTypeTb_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ContactPointTypeTb" />
      <xs:field xpath="mstns:pointName" />
    </xs:unique>
    <xs:unique name="tableContactPointTemplate_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableContactPointTemplate" />
      <xs:field xpath="mstns:templateId" />
    </xs:unique>
    <xs:unique name="tableRequestStatus_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableRequestStatus" />
      <xs:field xpath="mstns:rowId" />
    </xs:unique>
    <xs:unique name="tableAddressType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableAddressType" />
      <xs:field xpath="mstns:addresstypeID" />
    </xs:unique>
    <xs:unique name="tableContactType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableContactType" />
      <xs:field xpath="mstns:ContactTypeID" />
    </xs:unique>
    <xs:unique name="DeliveryType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DeliveryType" />
      <xs:field xpath="mstns:deliverytypeID" />
    </xs:unique>
    <xs:unique name="tableManagerGroup_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableManagerGroup" />
      <xs:field xpath="mstns:managergroupID" />
    </xs:unique>
    <xs:unique name="tablePaymentType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tablePaymentType" />
      <xs:field xpath="mstns:paytypeID" />
    </xs:unique>
    <xs:unique name="tableTown_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableTown" />
      <xs:field xpath="mstns:townName" />
    </xs:unique>
    <xs:unique name="tableForwarder_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableForwarder" />
      <xs:field xpath="mstns:itemId" />
    </xs:unique>
    <xs:unique name="tableAccountCurrency_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableAccountCurrency" />
      <xs:field xpath="mstns:currency" />
    </xs:unique>
    <xs:unique name="tableLegalEntity_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableLegalEntity" />
      <xs:field xpath="mstns:idlegalentity" />
    </xs:unique>
    <xs:unique name="tableCustomerName_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tableCustomerName" />
      <xs:field xpath="mstns:customerID" />
    </xs:unique>
  </xs:element>
</xs:schema>